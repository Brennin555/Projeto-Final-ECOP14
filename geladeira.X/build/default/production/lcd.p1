Version 4.0 HI-TECH Software Intermediate Code
"43 ./io.h
[; ;./io.h: 43: void digitalWrite(int pin, int value);
[v _digitalWrite `(v ~T0 @X0 0 ef2`i`i ]
"21 lcd.c
[; ;lcd.c: 21:     digitalWrite(PIN_D4, 1);
[c E5 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 .. ]
[n E5 pin_label PIN_A0 PIN_A1 PIN_A2 PIN_A3 PIN_A4 PIN_A5 PIN_A6 PIN_A7 PIN_B0 PIN_B1 PIN_B2 PIN_B3 PIN_B4 PIN_B5 PIN_B6 PIN_B7 PIN_C0 PIN_C1 PIN_C2 PIN_C3 PIN_C4 PIN_C5 PIN_C6 PIN_C7 PIN_D0 PIN_D1 PIN_D2 PIN_D3 PIN_D4 PIN_D5 PIN_D6 PIN_D7 PIN_E0 PIN_E1 PIN_E2 PIN_E3 PIN_E4 PIN_E5 PIN_E6 PIN_E7  ]
"5 ./so.h
[; ;./so.h: 5:  void soWrite(int value);
[v _soWrite `(v ~T0 @X0 0 ef1`i ]
"45 ./io.h
[; ;./io.h: 45: void pinMode(int pin, int type);
[v _pinMode `(v ~T0 @X0 0 ef2`i`i ]
"4 ./so.h
[; ;./so.h: 4:  void soInit (void);
[v _soInit `(v ~T0 @X0 0 ef ]
"5 lcd.c
[; ;lcd.c: 5: void delayMicro(int a) {
[v _delayMicro `(v ~T0 @X0 1 ef1`i ]
{
[e :U _delayMicro ]
[v _a `i ~T0 @X0 1 r1 ]
[f ]
"6
[; ;lcd.c: 6:     volatile int i;
[v _i `Vi ~T0 @X0 1 a ]
"9
[; ;lcd.c: 9: }
[e :UE 1 ]
}
"11
[; ;lcd.c: 11: void delayMili(int a) {
[v _delayMili `(v ~T0 @X0 1 ef1`i ]
{
[e :U _delayMili ]
[v _a `i ~T0 @X0 1 r1 ]
[f ]
"12
[; ;lcd.c: 12:     volatile int i;
[v _i `Vi ~T0 @X0 1 a ]
"13
[; ;lcd.c: 13:     for (i = 0; i < a; i++) {
{
[e = _i -> 0 `i ]
[e $U 6  ]
[e :U 3 ]
{
"16
[; ;lcd.c: 16:     }
}
[e ++ _i -> -> 1 `i `Vi ]
[e :U 6 ]
[e $ < _i _a 3  ]
[e :U 4 ]
}
"17
[; ;lcd.c: 17: }
[e :UE 2 ]
}
"20
[; ;lcd.c: 20: void pulseEnablePin() {
[v _pulseEnablePin `(v ~T0 @X0 1 ef ]
{
[e :U _pulseEnablePin ]
[f ]
"21
[; ;lcd.c: 21:     digitalWrite(PIN_D4, 1);
[e ( _digitalWrite (2 , . `E5 28 -> 1 `i ]
"22
[; ;lcd.c: 22:     delayMicro(5);
[e ( _delayMicro (1 -> 5 `i ]
"23
[; ;lcd.c: 23:     digitalWrite(PIN_D4, 0);
[e ( _digitalWrite (2 , . `E5 28 -> 0 `i ]
"24
[; ;lcd.c: 24:     delayMicro(5);
[e ( _delayMicro (1 -> 5 `i ]
"25
[; ;lcd.c: 25: }
[e :UE 7 ]
}
"28
[; ;lcd.c: 28: void pushNibble(char value, int rs) {
[v _pushNibble `(v ~T0 @X0 1 ef2`uc`i ]
{
[e :U _pushNibble ]
[v _value `uc ~T0 @X0 1 r1 ]
[v _rs `i ~T0 @X0 1 r2 ]
[f ]
"29
[; ;lcd.c: 29:     soWrite(value);
[e ( _soWrite (1 -> _value `i ]
"30
[; ;lcd.c: 30:     digitalWrite(PIN_D5, rs);
[e ( _digitalWrite (2 , . `E5 29 _rs ]
"31
[; ;lcd.c: 31:     pulseEnablePin();
[e ( _pulseEnablePin ..  ]
"32
[; ;lcd.c: 32: }
[e :UE 8 ]
}
"35
[; ;lcd.c: 35: void pushByte(char value, int rs) {
[v _pushByte `(v ~T0 @X0 1 ef2`uc`i ]
{
[e :U _pushByte ]
[v _value `uc ~T0 @X0 1 r1 ]
[v _rs `i ~T0 @X0 1 r2 ]
[f ]
"36
[; ;lcd.c: 36:     soWrite(value >> 4);
[e ( _soWrite (1 >> -> _value `i -> 4 `i ]
"37
[; ;lcd.c: 37:     digitalWrite(PIN_D5, rs);
[e ( _digitalWrite (2 , . `E5 29 _rs ]
"38
[; ;lcd.c: 38:     pulseEnablePin();
[e ( _pulseEnablePin ..  ]
"40
[; ;lcd.c: 40:     soWrite(value & 0x0F);
[e ( _soWrite (1 & -> _value `i -> 15 `i ]
"41
[; ;lcd.c: 41:     digitalWrite(PIN_D5, rs);
[e ( _digitalWrite (2 , . `E5 29 _rs ]
"42
[; ;lcd.c: 42:     pulseEnablePin();
[e ( _pulseEnablePin ..  ]
"43
[; ;lcd.c: 43: }
[e :UE 9 ]
}
"45
[; ;lcd.c: 45: void lcdCommand(char value) {
[v _lcdCommand `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _lcdCommand ]
[v _value `uc ~T0 @X0 1 r1 ]
[f ]
"46
[; ;lcd.c: 46:     pushByte(value, 0);
[e ( _pushByte (2 , _value -> 0 `i ]
"47
[; ;lcd.c: 47:     delayMili(2);
[e ( _delayMili (1 -> 2 `i ]
"48
[; ;lcd.c: 48: }
[e :UE 10 ]
}
"50
[; ;lcd.c: 50: void lcdPosition(int line, int col) {
[v _lcdPosition `(v ~T0 @X0 1 ef2`i`i ]
{
[e :U _lcdPosition ]
[v _line `i ~T0 @X0 1 r1 ]
[v _col `i ~T0 @X0 1 r2 ]
[f ]
"51
[; ;lcd.c: 51:     if (line == 0) {
[e $ ! == _line -> 0 `i 12  ]
{
"52
[; ;lcd.c: 52:         lcdCommand(0x80 + (col % 16));
[e ( _lcdCommand (1 -> + -> 128 `i % _col -> 16 `i `uc ]
"53
[; ;lcd.c: 53:     }
}
[e :U 12 ]
"54
[; ;lcd.c: 54:     if (line == 1) {
[e $ ! == _line -> 1 `i 13  ]
{
"55
[; ;lcd.c: 55:         lcdCommand(0xC0 + (col % 16));
[e ( _lcdCommand (1 -> + -> 192 `i % _col -> 16 `i `uc ]
"56
[; ;lcd.c: 56:     }
}
[e :U 13 ]
"57
[; ;lcd.c: 57: }
[e :UE 11 ]
}
"59
[; ;lcd.c: 59: void lcdChar(char value) {
[v _lcdChar `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _lcdChar ]
[v _value `uc ~T0 @X0 1 r1 ]
[f ]
"60
[; ;lcd.c: 60:     pushByte(value, 1);
[e ( _pushByte (2 , _value -> 1 `i ]
"61
[; ;lcd.c: 61:     delayMicro(80);
[e ( _delayMicro (1 -> 80 `i ]
"62
[; ;lcd.c: 62: }
[e :UE 14 ]
}
"65
[; ;lcd.c: 65: void lcdString(char msg[]) {
[v _lcdString `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _lcdString ]
[v _msg `*uc ~T0 @X0 1 r1 ]
[f ]
"66
[; ;lcd.c: 66:     int i = 0;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"67
[; ;lcd.c: 67:     while (msg[i] != 0) {
[e $U 16  ]
[e :U 17 ]
{
"69
[; ;lcd.c: 69:         if (msg[i] == '\n') {
[e $ ! == -> *U + _msg * -> _i `x -> -> # *U _msg `i `x `ui -> 10 `ui 19  ]
{
"70
[; ;lcd.c: 70:             lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"71
[; ;lcd.c: 71:             i++;
[e ++ _i -> 1 `i ]
"72
[; ;lcd.c: 72:         }
}
[e :U 19 ]
"73
[; ;lcd.c: 73:         lcdChar(msg[i]);
[e ( _lcdChar (1 *U + _msg * -> _i `x -> -> # *U _msg `i `x ]
"74
[; ;lcd.c: 74:         i++;
[e ++ _i -> 1 `i ]
"75
[; ;lcd.c: 75:     }
}
[e :U 16 ]
"67
[; ;lcd.c: 67:     while (msg[i] != 0) {
[e $ != -> *U + _msg * -> _i `x -> -> # *U _msg `i `x `i -> 0 `i 17  ]
[e :U 18 ]
"76
[; ;lcd.c: 76: }
[e :UE 15 ]
}
"78
[; ;lcd.c: 78: void lcdNumber(int value) {
[v _lcdNumber `(v ~T0 @X0 1 ef1`i ]
{
[e :U _lcdNumber ]
[v _value `i ~T0 @X0 1 r1 ]
[f ]
"79
[; ;lcd.c: 79:     int i = 10000;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 10000 `i ]
"80
[; ;lcd.c: 80:     while (i > 0) {
[e $U 21  ]
[e :U 22 ]
{
"81
[; ;lcd.c: 81:         lcdChar((value / i) % 10 + 48);
[e ( _lcdChar (1 -> + % / _value _i -> 10 `i -> 48 `i `uc ]
"82
[; ;lcd.c: 82:         i /= 10;
[e =/ _i -> 10 `i ]
"83
[; ;lcd.c: 83:     }
}
[e :U 21 ]
"80
[; ;lcd.c: 80:     while (i > 0) {
[e $ > _i -> 0 `i 22  ]
[e :U 23 ]
"84
[; ;lcd.c: 84: }
[e :UE 20 ]
}
"87
[; ;lcd.c: 87: void lcdInit() {
[v _lcdInit `(v ~T0 @X0 1 ef ]
{
[e :U _lcdInit ]
[f ]
"88
[; ;lcd.c: 88:     pinMode(PIN_D4, 0);
[e ( _pinMode (2 , . `E5 28 -> 0 `i ]
"89
[; ;lcd.c: 89:     pinMode(PIN_D5, 0);
[e ( _pinMode (2 , . `E5 29 -> 0 `i ]
"90
[; ;lcd.c: 90:     soInit();
[e ( _soInit ..  ]
"91
[; ;lcd.c: 91:     delayMili(15);
[e ( _delayMili (1 -> 15 `i ]
"93
[; ;lcd.c: 93:     pushNibble(0x03, 0);
[e ( _pushNibble (2 , -> -> 3 `i `uc -> 0 `i ]
"94
[; ;lcd.c: 94:     delayMili(5);
[e ( _delayMili (1 -> 5 `i ]
"95
[; ;lcd.c: 95:     pushNibble(0x03, 0);
[e ( _pushNibble (2 , -> -> 3 `i `uc -> 0 `i ]
"96
[; ;lcd.c: 96:     delayMicro(160);
[e ( _delayMicro (1 -> 160 `i ]
"97
[; ;lcd.c: 97:     pushNibble(0x03, 0);
[e ( _pushNibble (2 , -> -> 3 `i `uc -> 0 `i ]
"98
[; ;lcd.c: 98:     delayMicro(160);
[e ( _delayMicro (1 -> 160 `i ]
"100
[; ;lcd.c: 100:     pushNibble(0x02, 0);
[e ( _pushNibble (2 , -> -> 2 `i `uc -> 0 `i ]
"101
[; ;lcd.c: 101:     delayMili(10);
[e ( _delayMili (1 -> 10 `i ]
"103
[; ;lcd.c: 103:     lcdCommand(0x28);
[e ( _lcdCommand (1 -> -> 40 `i `uc ]
"104
[; ;lcd.c: 104:     lcdCommand(0x08 + 0x04);
[e ( _lcdCommand (1 -> + -> 8 `i -> 4 `i `uc ]
"105
[; ;lcd.c: 105:     lcdCommand(0x01);
[e ( _lcdCommand (1 -> -> 1 `i `uc ]
"106
[; ;lcd.c: 106: }
[e :UE 24 ]
}
