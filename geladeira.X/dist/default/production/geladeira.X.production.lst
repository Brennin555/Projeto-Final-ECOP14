

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 15:15:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  0025F2                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _tecla
    95  0025F2  0010               	dw	16
    96                           
    97                           ;initializer for _turbo
    98  0025F4  09                 	db	9
    99                           
   100                           ;initializer for _potenciaF
   101  0025F5  07                 	db	7
   102                           
   103                           ;initializer for _potenciaG
   104  0025F6  07                 	db	7
   105                           
   106                           ;initializer for _potencia
   107  0025F7  07                 	db	7
   108                           
   109                           	psect	smallconst
   110  000600                     __psmallconst:
   111                           	callstack 0
   112  000600  00                 	db	0
   113  000601                     _valor:
   114                           	callstack 0
   115  000601  3F                 	db	63
   116  000602  06                 	db	6
   117  000603  5B                 	db	91
   118  000604  4F                 	db	79
   119  000605  66                 	db	102
   120  000606  6D                 	db	109
   121  000607  7D                 	db	125
   122  000608  07                 	db	7
   123  000609  7F                 	db	127
   124  00060A  6F                 	db	111
   125  00060B  77                 	db	119
   126  00060C  7C                 	db	124
   127  00060D  39                 	db	57
   128  00060E  5E                 	db	94
   129  00060F  79                 	db	121
   130  000610  71                 	db	113
   131  000611                     __end_of_valor:
   132                           	callstack 0
   133  000611  55                 	db	85
   134  000612  4C                 	db	76
   135  000613  44                 	db	68
   136  000614  52                 	db	82
   137  000615  53                 	db	83
   138  000616  58                 	db	88
   139  000617  41                 	db	65
   140  000618  42                 	db	66
   141  000619  59                 	db	89
   142  00061A  73                 	db	115
   143  00061B                     __end_of_charKey:
   144                           	callstack 0
   145  0000                     _T2CON	set	4042
   146  0000                     _CCP2CON	set	4026
   147  0000                     _CCPR2L	set	4027
   148  0000                     _PR2	set	4043
   149  0000                     _T0CON	set	4053
   150  0000                     _TMR0L	set	4054
   151  0000                     _TMR0H	set	4055
   152  0000                     _INTCON	set	4082
   153  0000                     _TRISE	set	3990
   154  0000                     _TRISD	set	3989
   155  0000                     _TRISC	set	3988
   156  0000                     _TRISB	set	3987
   157  0000                     _TRISA	set	3986
   158  0000                     _PORTE	set	3972
   159  0000                     _PORTD	set	3971
   160  0000                     _PORTC	set	3970
   161  0000                     _PORTB	set	3969
   162  0000                     _PORTA	set	3968
   163  0000                     _ADRESL	set	4035
   164  0000                     _ADRESH	set	4036
   165  0000                     _ADCON2	set	4032
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON0	set	4034
   168  00061B                     STR_6:
   169  00061B  20                 	db	32
   170  00061C  44                 	db	68	;'D'
   171  00061D  65                 	db	101	;'e'
   172  00061E  66                 	db	102	;'f'
   173  00061F  69                 	db	105	;'i'
   174  000620  6E                 	db	110	;'n'
   175  000621  61                 	db	97	;'a'
   176  000622  20                 	db	32
   177  000623  6F                 	db	111	;'o'
   178  000624  20                 	db	32
   179  000625  74                 	db	116	;'t'
   180  000626  65                 	db	101	;'e'
   181  000627  6D                 	db	109	;'m'
   182  000628  70                 	db	112	;'p'
   183  000629  6F                 	db	111	;'o'
   184  00062A  3A                 	db	58	;':'
   185  00062B  0A                 	db	10
   186  00062C  28                 	db	40
   187  00062D  70                 	db	112	;'p'
   188  00062E  6F                 	db	111	;'o'
   189  00062F  74                 	db	116	;'t'
   190  000630  65                 	db	101	;'e'
   191  000631  6E                 	db	110	;'n'
   192  000632  63                 	db	99	;'c'
   193  000633  69                 	db	105	;'i'
   194  000634  6F                 	db	111	;'o'
   195  000635  6D                 	db	109	;'m'
   196  000636  65                 	db	101	;'e'
   197  000637  74                 	db	116	;'t'
   198  000638  72                 	db	114	;'r'
   199  000639  6F                 	db	111	;'o'
   200  00063A  29                 	db	41
   201  00063B  00                 	db	0
   202  00063C                     STR_2:
   203  00063C  20                 	db	32
   204  00063D  50                 	db	80	;'P'
   205  00063E  6F                 	db	111	;'o'
   206  00063F  74                 	db	116	;'t'
   207  000640  65                 	db	101	;'e'
   208  000641  6E                 	db	110	;'n'
   209  000642  63                 	db	99	;'c'
   210  000643  69                 	db	105	;'i'
   211  000644  61                 	db	97	;'a'
   212  000645  0A                 	db	10
   213  000646  20                 	db	32
   214  000647  47                 	db	71	;'G'
   215  000648  65                 	db	101	;'e'
   216  000649  6C                 	db	108	;'l'
   217  00064A  61                 	db	97	;'a'
   218  00064B  64                 	db	100	;'d'
   219  00064C  65                 	db	101	;'e'
   220  00064D  69                 	db	105	;'i'
   221  00064E  72                 	db	114	;'r'
   222  00064F  61                 	db	97	;'a'
   223  000650  00                 	db	0
   224  000651                     STR_7:
   225  000651  20                 	db	32
   226  000652  50                 	db	80	;'P'
   227  000653  6F                 	db	111	;'o'
   228  000654  74                 	db	116	;'t'
   229  000655  65                 	db	101	;'e'
   230  000656  6E                 	db	110	;'n'
   231  000657  63                 	db	99	;'c'
   232  000658  69                 	db	105	;'i'
   233  000659  61                 	db	97	;'a'
   234  00065A  3A                 	db	58	;':'
   235  00065B  0A                 	db	10
   236  00065C  20                 	db	32
   237  00065D  4D                 	db	77	;'M'
   238  00065E  49                 	db	73	;'I'
   239  00065F  4E                 	db	78	;'N'
   240  000660  49                 	db	73	;'I'
   241  000661  4D                 	db	77	;'M'
   242  000662  4F                 	db	79	;'O'
   243  000663  00                 	db	0
   244  000664                     STR_9:
   245  000664  20                 	db	32
   246  000665  50                 	db	80	;'P'
   247  000666  6F                 	db	111	;'o'
   248  000667  74                 	db	116	;'t'
   249  000668  65                 	db	101	;'e'
   250  000669  6E                 	db	110	;'n'
   251  00066A  63                 	db	99	;'c'
   252  00066B  69                 	db	105	;'i'
   253  00066C  61                 	db	97	;'a'
   254  00066D  3A                 	db	58	;':'
   255  00066E  0A                 	db	10
   256  00066F  20                 	db	32
   257  000670  4D                 	db	77	;'M'
   258  000671  41                 	db	65	;'A'
   259  000672  58                 	db	88	;'X'
   260  000673  49                 	db	73	;'I'
   261  000674  4D                 	db	77	;'M'
   262  000675  4F                 	db	79	;'O'
   263  000676  00                 	db	0
   264  000677                     STR_3:
   265  000677  20                 	db	32
   266  000678  50                 	db	80	;'P'
   267  000679  6F                 	db	111	;'o'
   268  00067A  74                 	db	116	;'t'
   269  00067B  65                 	db	101	;'e'
   270  00067C  6E                 	db	110	;'n'
   271  00067D  63                 	db	99	;'c'
   272  00067E  69                 	db	105	;'i'
   273  00067F  61                 	db	97	;'a'
   274  000680  0A                 	db	10
   275  000681  20                 	db	32
   276  000682  46                 	db	70	;'F'
   277  000683  72                 	db	114	;'r'
   278  000684  65                 	db	101	;'e'
   279  000685  65                 	db	101	;'e'
   280  000686  7A                 	db	122	;'z'
   281  000687  65                 	db	101	;'e'
   282  000688  72                 	db	114	;'r'
   283  000689  00                 	db	0
   284  00068A                     STR_8:
   285  00068A  20                 	db	32
   286  00068B  50                 	db	80	;'P'
   287  00068C  6F                 	db	111	;'o'
   288  00068D  74                 	db	116	;'t'
   289  00068E  65                 	db	101	;'e'
   290  00068F  6E                 	db	110	;'n'
   291  000690  63                 	db	99	;'c'
   292  000691  69                 	db	105	;'i'
   293  000692  61                 	db	97	;'a'
   294  000693  3A                 	db	58	;':'
   295  000694  0A                 	db	10
   296  000695  20                 	db	32
   297  000696  4D                 	db	77	;'M'
   298  000697  45                 	db	69	;'E'
   299  000698  44                 	db	68	;'D'
   300  000699  49                 	db	73	;'I'
   301  00069A  4F                 	db	79	;'O'
   302  00069B  00                 	db	0
   303  00069C                     STR_4:
   304  00069C  20                 	db	32
   305  00069D  54                 	db	84	;'T'
   306  00069E  69                 	db	105	;'i'
   307  00069F  6D                 	db	109	;'m'
   308  0006A0  65                 	db	101	;'e'
   309  0006A1  72                 	db	114	;'r'
   310  0006A2  0A                 	db	10
   311  0006A3  20                 	db	32
   312  0006A4  47                 	db	71	;'G'
   313  0006A5  65                 	db	101	;'e'
   314  0006A6  6C                 	db	108	;'l'
   315  0006A7  61                 	db	97	;'a'
   316  0006A8  64                 	db	100	;'d'
   317  0006A9  65                 	db	101	;'e'
   318  0006AA  69                 	db	105	;'i'
   319  0006AB  72                 	db	114	;'r'
   320  0006AC  61                 	db	97	;'a'
   321  0006AD  00                 	db	0
   322  0006AE                     STR_5:
   323  0006AE  20                 	db	32
   324  0006AF  54                 	db	84	;'T'
   325  0006B0  69                 	db	105	;'i'
   326  0006B1  6D                 	db	109	;'m'
   327  0006B2  65                 	db	101	;'e'
   328  0006B3  72                 	db	114	;'r'
   329  0006B4  0A                 	db	10
   330  0006B5  20                 	db	32
   331  0006B6  46                 	db	70	;'F'
   332  0006B7  72                 	db	114	;'r'
   333  0006B8  65                 	db	101	;'e'
   334  0006B9  65                 	db	101	;'e'
   335  0006BA  7A                 	db	122	;'z'
   336  0006BB  65                 	db	101	;'e'
   337  0006BC  72                 	db	114	;'r'
   338  0006BD  00                 	db	0
   339  0006BE                     STR_1:
   340  0006BE  49                 	db	73	;'I'
   341  0006BF  4E                 	db	78	;'N'
   342  0006C0  49                 	db	73	;'I'
   343  0006C1  43                 	db	67	;'C'
   344  0006C2  49                 	db	73	;'I'
   345  0006C3  4F                 	db	79	;'O'
   346  0006C4  00                 	db	0
   347  0006C5  00                 	db	0	; dummy byte at the end
   348  0000                     
   349                           ; #config settings
   350                           
   351                           	psect	cinit
   352  0023EC                     __pcinit:
   353                           	callstack 0
   354  0023EC                     start_initialization:
   355                           	callstack 0
   356  0023EC                     __initialization:
   357                           	callstack 0
   358                           
   359                           ; Initialize objects allocated to COMRAM (6 bytes)
   360                           ; load TBLPTR registers with __pidataCOMRAM
   361  0023EC  0EF2               	movlw	low __pidataCOMRAM
   362  0023EE  6EF6               	movwf	tblptrl,c
   363  0023F0  0E25               	movlw	high __pidataCOMRAM
   364  0023F2  6EF7               	movwf	tblptrh,c
   365  0023F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   366  0023F6  6EF8               	movwf	tblptru,c
   367  0023F8  EE00  F039         	lfsr	0,__pdataCOMRAM
   368  0023FC  EE10 F006          	lfsr	1,6
   369  002400                     copy_data0:
   370  002400  0009               	tblrd		*+
   371  002402  CFF5 FFEE          	movff	tablat,postinc0
   372  002406  50E5               	movf	postdec1,w,c
   373  002408  50E1               	movf	fsr1l,w,c
   374  00240A  E1FA               	bnz	copy_data0
   375                           
   376                           ; Clear objects allocated to COMRAM (30 bytes)
   377  00240C  EE00  F001         	lfsr	0,__pbssCOMRAM
   378  002410  0E1E               	movlw	30
   379  002412                     clear_0:
   380  002412  6AEE               	clrf	postinc0,c
   381  002414  06E8               	decf	wreg,f,c
   382  002416  E1FD               	bnz	clear_0
   383  002418                     end_of_initialization:
   384                           	callstack 0
   385  002418                     __end_of__initialization:
   386                           	callstack 0
   387  002418  0E00               	movlw	low (__Lmediumconst shr (0+16))
   388  00241A  6EF8               	movwf	tblptru,c
   389  00241C  0100               	movlb	0
   390  00241E  EF63  F003         	goto	_main	;jump to C main() function
   391                           
   392                           	psect	bssCOMRAM
   393  000001                     __pbssCOMRAM:
   394                           	callstack 0
   395  000001                     _vtempo:
   396                           	callstack 0
   397  000001                     	ds	4
   398  000005                     _m1:
   399                           	callstack 0
   400  000005                     	ds	4
   401  000009                     _cron:
   402                           	callstack 0
   403  000009                     	ds	2
   404  00000B                     kpDebounce@oldRead:
   405                           	callstack 0
   406  00000B                     	ds	2
   407  00000D                     kpDebounce@newRead:
   408                           	callstack 0
   409  00000D                     	ds	2
   410  00000F                     _keys:
   411                           	callstack 0
   412  00000F                     	ds	2
   413  000011                     _tempot:
   414                           	callstack 0
   415  000011                     	ds	1
   416  000012                     _potenciaUpdate:
   417                           	callstack 0
   418  000012                     	ds	1
   419  000013                     _potenciaAux:
   420                           	callstack 0
   421  000013                     	ds	1
   422  000014                     _nMensagem:
   423                           	callstack 0
   424  000014                     	ds	1
   425  000015                     _aberta:
   426                           	callstack 0
   427  000015                     	ds	1
   428  000016                     _cronOn:
   429                           	callstack 0
   430  000016                     	ds	1
   431  000017                     _timer:
   432                           	callstack 0
   433  000017                     	ds	1
   434  000018                     _m:
   435                           	callstack 0
   436  000018                     	ds	1
   437  000019                     _v3:
   438                           	callstack 0
   439  000019                     	ds	1
   440  00001A                     _v2:
   441                           	callstack 0
   442  00001A                     	ds	1
   443  00001B                     _v1:
   444                           	callstack 0
   445  00001B                     	ds	1
   446  00001C                     _v0:
   447                           	callstack 0
   448  00001C                     	ds	1
   449  00001D                     _display:
   450                           	callstack 0
   451  00001D                     	ds	1
   452  00001E                     kpDebounce@tempo:
   453                           	callstack 0
   454  00001E                     	ds	1
   455                           
   456                           	psect	dataCOMRAM
   457  000039                     __pdataCOMRAM:
   458                           	callstack 0
   459  000039                     _tecla:
   460                           	callstack 0
   461  000039                     	ds	2
   462  00003B                     _turbo:
   463                           	callstack 0
   464  00003B                     	ds	1
   465  00003C                     _potenciaF:
   466                           	callstack 0
   467  00003C                     	ds	1
   468  00003D                     _potenciaG:
   469                           	callstack 0
   470  00003D                     	ds	1
   471  00003E                     _potencia:
   472                           	callstack 0
   473  00003E                     	ds	1
   474                           
   475                           	psect	cstackCOMRAM
   476  00001F                     __pcstackCOMRAM:
   477                           	callstack 0
   478  00001F                     ?_adcRead:
   479                           	callstack 0
   480  00001F                     ?_digitalRead:
   481                           	callstack 0
   482  00001F                     ?_kpRead:
   483                           	callstack 0
   484  00001F                     ?___lwdiv:
   485                           	callstack 0
   486  00001F                     ?___fladd:
   487                           	callstack 0
   488  00001F                     ?___lldiv:
   489                           	callstack 0
   490  00001F                     ?___aldiv:
   491                           	callstack 0
   492  00001F                     tempo@i:
   493                           	callstack 0
   494  00001F                     adcRead@channel:
   495                           	callstack 0
   496  00001F                     digitalWrite@pin:
   497                           	callstack 0
   498  00001F                     digitalRead@pin:
   499                           	callstack 0
   500  00001F                     pinMode@pin:
   501                           	callstack 0
   502  00001F                     delayMicro@a:
   503                           	callstack 0
   504  00001F                     delayMili@a:
   505                           	callstack 0
   506  00001F                     ___lwdiv@dividend:
   507                           	callstack 0
   508  00001F                     ___lldiv@dividend:
   509                           	callstack 0
   510  00001F                     ___aldiv@dividend:
   511                           	callstack 0
   512  00001F                     ___flge@ff1:
   513                           	callstack 0
   514  00001F                     ___fladd@b:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x0
   518  00001F                     	ds	1
   519  000020                     tempo@j:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x1
   523  000020                     	ds	1
   524  000021                     ??_digitalRead:
   525  000021                     ??_delayMili:
   526  000021                     tempo@k:
   527                           	callstack 0
   528  000021                     adcRead@ADvalor:
   529                           	callstack 0
   530  000021                     digitalWrite@value:
   531                           	callstack 0
   532  000021                     pinMode@type:
   533                           	callstack 0
   534  000021                     ___lwdiv@divisor:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2
   538  000021                     	ds	1
   539  000022                     tempoS@i:
   540                           	callstack 0
   541  000022                     delayMili@i:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3
   545  000022                     	ds	1
   546  000023                     ??_pinMode:
   547  000023                     ??_digitalWrite:
   548  000023                     ?___wmul:
   549                           	callstack 0
   550  000023                     ___wmul@multiplier:
   551                           	callstack 0
   552  000023                     ___lwdiv@quotient:
   553                           	callstack 0
   554  000023                     ___lldiv@divisor:
   555                           	callstack 0
   556  000023                     ___aldiv@divisor:
   557                           	callstack 0
   558  000023                     ___flge@ff2:
   559                           	callstack 0
   560  000023                     ___fladd@a:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000023                     	ds	2
   565  000025                     ___lwdiv@counter:
   566                           	callstack 0
   567  000025                     soWrite@value:
   568                           	callstack 0
   569  000025                     ___wmul@multiplicand:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573  000025                     	ds	2
   574  000027                     ??___fladd:
   575  000027                     ??___flge:
   576  000027                     soWrite@i:
   577                           	callstack 0
   578  000027                     ___aldiv@counter:
   579                           	callstack 0
   580  000027                     ___wmul@product:
   581                           	callstack 0
   582  000027                     ___lldiv@quotient:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x8
   586  000027                     	ds	1
   587  000028                     ??_kpDebounce:
   588  000028                     ??_ssdUpdate:
   589  000028                     ___aldiv@sign:
   590                           	callstack 0
   591  000028                     pushNibble@rs:
   592                           	callstack 0
   593  000028                     pushByte@rs:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x9
   597  000028                     	ds	1
   598  000029                     ??_pwmSet:
   599  000029                     ___aldiv@quotient:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0xA
   603  000029                     	ds	1
   604  00002A                     ??_pushByte:
   605  00002A                     pushNibble@value:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xB
   609  00002A                     	ds	1
   610  00002B                     pushByte@value:
   611                           	callstack 0
   612  00002B                     pwmSet@porcento:
   613                           	callstack 0
   614  00002B                     ___lldiv@counter:
   615                           	callstack 0
   616  00002B                     ___fladd@signs:
   617                           	callstack 0
   618  00002B                     kpDebounce@i:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xC
   622  00002B                     	ds	1
   623  00002C                     ?___llmod:
   624                           	callstack 0
   625  00002C                     lcdCommand@value:
   626                           	callstack 0
   627  00002C                     lcdChar@value:
   628                           	callstack 0
   629  00002C                     ___fladd@aexp:
   630                           	callstack 0
   631  00002C                     pwmSet@val:
   632                           	callstack 0
   633  00002C                     ___llmod@dividend:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0xD
   637  00002C                     	ds	1
   638  00002D                     ___fladd@bexp:
   639                           	callstack 0
   640  00002D                     lcdString@msg:
   641                           	callstack 0
   642  00002D                     pwmFrequency@freq:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xE
   646  00002D                     	ds	1
   647  00002E                     ___fladd@grs:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0xF
   651  00002E                     	ds	1
   652  00002F                     ??_lcdString:
   653  00002F                     
   654                           ; 1 bytes @ 0x10
   655  00002F                     	ds	1
   656  000030                     ___llmod@divisor:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x11
   660  000030                     	ds	1
   661  000031                     lcdString@i:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x12
   665  000031                     	ds	2
   666  000033                     ??_msg:
   667                           
   668                           ; 1 bytes @ 0x14
   669  000033                     	ds	1
   670  000034                     ___llmod@counter:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x15
   674  000034                     	ds	1
   675  000035                     ssdDigit@pos:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x16
   679  000035                     	ds	1
   680  000036                     ssdDigit@val:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x17
   684  000036                     	ds	1
   685  000037                     ??_main:
   686                           
   687                           ; 1 bytes @ 0x18
   688  000037                     	ds	2
   689                           
   690 ;;
   691 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   692 ;;
   693 ;; *************** function _main *****************
   694 ;; Defined at:
   695 ;;		line 97 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   709 ;;      Params:         0       0       0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0
   711 ;;      Temps:          2       0       0       0       0       0       0
   712 ;;      Totals:         2       0       0       0       0       0       0
   713 ;;Total ram usage:        2 bytes
   714 ;; Hardware stack levels required when called: 7
   715 ;; This function calls:
   716 ;;		___fladd
   717 ;;		___flge
   718 ;;		___lldiv
   719 ;;		___llmod
   720 ;;		___wmul
   721 ;;		_adcInit
   722 ;;		_adcRead
   723 ;;		_geladeiraAberta
   724 ;;		_kpDebounce
   725 ;;		_kpInit
   726 ;;		_kpRead
   727 ;;		_lcdCommand
   728 ;;		_lcdInit
   729 ;;		_msg
   730 ;;		_pwmInit
   731 ;;		_pwmSet
   732 ;;		_soInit
   733 ;;		_ssdDigit
   734 ;;		_ssdInit
   735 ;;		_ssdUpdate
   736 ;;		_tempoS
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text0
   743  0006C6                     __ptext0:
   744                           	callstack 0
   745  0006C6                     _main:
   746                           	callstack 24
   747  0006C6                     
   748                           ;main.c: 101:     soInit();
   749  0006C6  ECD7  F011         	call	_soInit	;wreg free
   750                           
   751                           ;main.c: 102:     adcInit();
   752  0006CA  EC92  F011         	call	_adcInit	;wreg free
   753                           
   754                           ;main.c: 103:     ssdInit();
   755  0006CE  EC18  F011         	call	_ssdInit	;wreg free
   756                           
   757                           ;main.c: 104:     lcdInit();
   758  0006D2  ECEE  F00E         	call	_lcdInit	;wreg free
   759                           
   760                           ;main.c: 105:     kpInit();
   761  0006D6  EC11  F012         	call	_kpInit	;wreg free
   762                           
   763                           ;main.c: 106:     pwmInit();
   764  0006DA  ECE7  F012         	call	_pwmInit	;wreg free
   765  0006DE                     l362:
   766                           
   767                           ;main.c: 109:     {;main.c: 110:         lcdCommand(0x80);
   768  0006DE  0E80               	movlw	128
   769  0006E0  ECC9  F012         	call	_lcdCommand
   770                           
   771                           ;main.c: 111:         kpDebounce();
   772  0006E4  ECC7  F00C         	call	_kpDebounce	;wreg free
   773  0006E8                     
   774                           ;main.c: 113:         msg();
   775  0006E8  ECE8  F00D         	call	_msg	;wreg free
   776  0006EC                     
   777                           ;main.c: 114:         geladeiraAberta();
   778  0006EC  EC6C  F012         	call	_geladeiraAberta	;wreg free
   779  0006F0                     
   780                           ;main.c: 116:         if (kpRead() != tecla)
   781  0006F0  ECF4  F012         	call	_kpRead	;wreg free
   782  0006F4  5039               	movf	_tecla^0,w,c
   783  0006F6  181F               	xorwf	?_kpRead^0,w,c
   784  0006F8  E109               	bnz	u3120
   785  0006FA  503A               	movf	(_tecla+1)^0,w,c
   786  0006FC  1820               	xorwf	(?_kpRead+1)^0,w,c
   787  0006FE  B4D8               	btfsc	status,2,c
   788  000700  EF84  F003         	goto	u3121
   789  000704  EF86  F003         	goto	u3120
   790  000708                     u3121:
   791  000708  EF29  F005         	goto	l2995
   792  00070C                     u3120:
   793  00070C                     
   794                           ;main.c: 117:         {;main.c: 118:             tecla = kpRead();
   795  00070C  ECF4  F012         	call	_kpRead	;wreg free
   796  000710  C01F  F039         	movff	?_kpRead,_tecla
   797  000714  C020  F03A         	movff	?_kpRead+1,_tecla+1
   798  000718                     
   799                           ;main.c: 120:             if (((tecla) & (1<<(0))))
   800  000718  A039               	btfss	_tecla^0,0,c
   801  00071A  EF91  F003         	goto	u3131
   802  00071E  EF93  F003         	goto	u3130
   803  000722                     u3131:
   804  000722  EFC8  F003         	goto	l2873
   805  000726                     u3130:
   806  000726                     
   807                           ;main.c: 121:             {;main.c: 122:                 if (aberta == 1)
   808  000726  0415               	decf	_aberta^0,w,c
   809  000728  A4D8               	btfss	status,2,c
   810  00072A  EF99  F003         	goto	u3141
   811  00072E  EF9B  F003         	goto	u3140
   812  000732                     u3141:
   813  000732  EF9F  F003         	goto	l2859
   814  000736                     u3140:
   815  000736                     
   816                           ;main.c: 123:                 {;main.c: 124:                     aberta = 0;
   817  000736  0E00               	movlw	0
   818  000738  6E15               	movwf	_aberta^0,c
   819                           
   820                           ;main.c: 125:                 }
   821  00073A  EFC8  F003         	goto	l2873
   822  00073E                     l2859:
   823                           
   824                           ;main.c: 127:                 {;main.c: 128:                     lcdCommand(0x01);
   825  00073E  0E01               	movlw	1
   826  000740  ECC9  F012         	call	_lcdCommand
   827  000744                     
   828                           ;main.c: 129:                     if (nMensagem == 0)
   829  000744  5014               	movf	_nMensagem^0,w,c
   830  000746  A4D8               	btfss	status,2,c
   831  000748  EFA8  F003         	goto	u3151
   832  00074C  EFAA  F003         	goto	u3150
   833  000750                     u3151:
   834  000750  EFAE  F003         	goto	l2865
   835  000754                     u3150:
   836  000754                     
   837                           ;main.c: 130:                     {;main.c: 131:                         nMensagem = 1;
   838  000754  0E01               	movlw	1
   839  000756  6E14               	movwf	_nMensagem^0,c
   840                           
   841                           ;main.c: 132:                     }
   842  000758  EFC8  F003         	goto	l2873
   843  00075C                     l2865:
   844                           
   845                           ;main.c: 134:                     {;main.c: 136:                         if (nMensagem >
      +                           5)
   846  00075C  0E05               	movlw	5
   847  00075E  6414               	cpfsgt	_nMensagem^0,c
   848  000760  EFB4  F003         	goto	u3161
   849  000764  EFB6  F003         	goto	u3160
   850  000768                     u3161:
   851  000768  EFC8  F003         	goto	l366
   852  00076C                     u3160:
   853  00076C                     
   854                           ;main.c: 137:                         {;main.c: 138:                             if (pot
      +                          enciaAux == 0)
   855  00076C  5013               	movf	_potenciaAux^0,w,c
   856  00076E  A4D8               	btfss	status,2,c
   857  000770  EFBC  F003         	goto	u3171
   858  000774  EFBE  F003         	goto	u3170
   859  000778                     u3171:
   860  000778  EFC2  F003         	goto	l370
   861  00077C                     u3170:
   862  00077C                     
   863                           ;main.c: 139:                             {;main.c: 140:                                
      +                           potenciaG = potencia;
   864  00077C  C03E  F03D         	movff	_potencia,_potenciaG
   865                           
   866                           ;main.c: 141:                             }
   867  000780  EFC4  F003         	goto	l2871
   868  000784                     l370:
   869                           
   870                           ;main.c: 143:                             {;main.c: 144:                                
      +                           potenciaF = potencia;
   871  000784  C03E  F03C         	movff	_potencia,_potenciaF
   872  000788                     l2871:
   873                           
   874                           ;main.c: 146:                             nMensagem = 0;
   875  000788  0E00               	movlw	0
   876  00078A  6E14               	movwf	_nMensagem^0,c
   877  00078C  EFC8  F003         	goto	l2873
   878  000790                     l366:
   879  000790                     l2873:
   880                           
   881                           ;main.c: 153:             if (((tecla) & (1<<(1)))) {
   882  000790  A239               	btfss	_tecla^0,1,c
   883  000792  EFCD  F003         	goto	u3181
   884  000796  EFCF  F003         	goto	u3180
   885  00079A                     u3181:
   886  00079A  EF19  F004         	goto	l372
   887  00079E                     u3180:
   888  00079E                     
   889                           ;main.c: 154:                 if ((nMensagem != 0)&&(nMensagem <= 4))
   890  00079E  5014               	movf	_nMensagem^0,w,c
   891  0007A0  B4D8               	btfsc	status,2,c
   892  0007A2  EFD5  F003         	goto	u3191
   893  0007A6  EFD7  F003         	goto	u3190
   894  0007AA                     u3191:
   895  0007AA  EFF1  F003         	goto	l2889
   896  0007AE                     u3190:
   897  0007AE  0E05               	movlw	5
   898  0007B0  6014               	cpfslt	_nMensagem^0,c
   899  0007B2  EFDD  F003         	goto	u3201
   900  0007B6  EFDF  F003         	goto	u3200
   901  0007BA                     u3201:
   902  0007BA  EFF1  F003         	goto	l2889
   903  0007BE                     u3200:
   904  0007BE                     
   905                           ;main.c: 155:                 {;main.c: 156:                     lcdCommand(0x01);
   906  0007BE  0E01               	movlw	1
   907  0007C0  ECC9  F012         	call	_lcdCommand
   908  0007C4                     
   909                           ;main.c: 157:                     nMensagem = nMensagem - 1;
   910  0007C4  0414               	decf	_nMensagem^0,w,c
   911  0007C6  6E14               	movwf	_nMensagem^0,c
   912  0007C8                     
   913                           ;main.c: 158:                     if (nMensagem <= 0)
   914  0007C8  5014               	movf	_nMensagem^0,w,c
   915  0007CA  A4D8               	btfss	status,2,c
   916  0007CC  EFEA  F003         	goto	u3211
   917  0007D0  EFEC  F003         	goto	u3210
   918  0007D4                     u3211:
   919  0007D4  EFF1  F003         	goto	l2889
   920  0007D8                     u3210:
   921  0007D8                     
   922                           ;main.c: 159:                     {;main.c: 160:                         lcdCommand(0x01
      +                          );
   923  0007D8  0E01               	movlw	1
   924  0007DA  ECC9  F012         	call	_lcdCommand
   925  0007DE                     
   926                           ;main.c: 161:                         nMensagem = 4;
   927  0007DE  0E04               	movlw	4
   928  0007E0  6E14               	movwf	_nMensagem^0,c
   929  0007E2                     l2889:
   930                           
   931                           ;main.c: 164:                 if (nMensagem > 5)
   932  0007E2  0E05               	movlw	5
   933  0007E4  6414               	cpfsgt	_nMensagem^0,c
   934  0007E6  EFF7  F003         	goto	u3221
   935  0007EA  EFF9  F003         	goto	u3220
   936  0007EE                     u3221:
   937  0007EE  EF19  F004         	goto	l372
   938  0007F2                     u3220:
   939  0007F2                     
   940                           ;main.c: 165:                 {;main.c: 166:                     lcdCommand(0x01);
   941  0007F2  0E01               	movlw	1
   942  0007F4  ECC9  F012         	call	_lcdCommand
   943  0007F8                     
   944                           ;main.c: 167:                     nMensagem = nMensagem - 1;
   945  0007F8  0414               	decf	_nMensagem^0,w,c
   946  0007FA  6E14               	movwf	_nMensagem^0,c
   947  0007FC                     
   948                           ;main.c: 168:                     if (nMensagem < 6)
   949  0007FC  0E06               	movlw	6
   950  0007FE  6014               	cpfslt	_nMensagem^0,c
   951  000800  EF04  F004         	goto	u3231
   952  000804  EF06  F004         	goto	u3230
   953  000808                     u3231:
   954  000808  EF0B  F004         	goto	l2901
   955  00080C                     u3230:
   956  00080C                     
   957                           ;main.c: 169:                     {;main.c: 170:                         lcdCommand(0x01
      +                          );
   958  00080C  0E01               	movlw	1
   959  00080E  ECC9  F012         	call	_lcdCommand
   960  000812                     
   961                           ;main.c: 171:                         nMensagem = 8;
   962  000812  0E08               	movlw	8
   963  000814  6E14               	movwf	_nMensagem^0,c
   964  000816                     l2901:
   965                           
   966                           ;main.c: 174:                     if (potenciaAux == 0)
   967  000816  5013               	movf	_potenciaAux^0,w,c
   968  000818  A4D8               	btfss	status,2,c
   969  00081A  EF11  F004         	goto	u3241
   970  00081E  EF13  F004         	goto	u3240
   971  000822                     u3241:
   972  000822  EF17  F004         	goto	l377
   973  000826                     u3240:
   974  000826                     
   975                           ;main.c: 175:                     {;main.c: 176:                         potenciaG = nMe
      +                          nsagem;
   976  000826  C014  F03D         	movff	_nMensagem,_potenciaG
   977                           
   978                           ;main.c: 179:                     } else
   979  00082A  EF19  F004         	goto	l372
   980  00082E                     l377:
   981                           
   982                           ;main.c: 180:                     {;main.c: 181:                         potenciaF = nMe
      +                          nsagem;
   983  00082E  C014  F03C         	movff	_nMensagem,_potenciaF
   984  000832                     l372:
   985                           
   986                           ;main.c: 187:             if (((tecla) & (1<<(3))))
   987  000832  A639               	btfss	_tecla^0,3,c
   988  000834  EF1E  F004         	goto	u3251
   989  000838  EF20  F004         	goto	u3250
   990  00083C                     u3251:
   991  00083C  EF6A  F004         	goto	l379
   992  000840                     u3250:
   993  000840                     
   994                           ;main.c: 188:             {;main.c: 189:                 if ((nMensagem != 0)&&(nMensage
      +                          m < 5))
   995  000840  5014               	movf	_nMensagem^0,w,c
   996  000842  B4D8               	btfsc	status,2,c
   997  000844  EF26  F004         	goto	u3261
   998  000848  EF28  F004         	goto	u3260
   999  00084C                     u3261:
  1000  00084C  EF42  F004         	goto	l2919
  1001  000850                     u3260:
  1002  000850  0E05               	movlw	5
  1003  000852  6014               	cpfslt	_nMensagem^0,c
  1004  000854  EF2E  F004         	goto	u3271
  1005  000858  EF30  F004         	goto	u3270
  1006  00085C                     u3271:
  1007  00085C  EF42  F004         	goto	l2919
  1008  000860                     u3270:
  1009  000860                     
  1010                           ;main.c: 190:                 {;main.c: 191:                     lcdCommand(0x01);
  1011  000860  0E01               	movlw	1
  1012  000862  ECC9  F012         	call	_lcdCommand
  1013  000866                     
  1014                           ;main.c: 192:                     nMensagem = nMensagem + 1;
  1015  000866  2814               	incf	_nMensagem^0,w,c
  1016  000868  6E14               	movwf	_nMensagem^0,c
  1017  00086A                     
  1018                           ;main.c: 193:                     if ((nMensagem > 4))
  1019  00086A  0E04               	movlw	4
  1020  00086C  6414               	cpfsgt	_nMensagem^0,c
  1021  00086E  EF3B  F004         	goto	u3281
  1022  000872  EF3D  F004         	goto	u3280
  1023  000876                     u3281:
  1024  000876  EF42  F004         	goto	l2919
  1025  00087A                     u3280:
  1026  00087A                     
  1027                           ;main.c: 194:                     {;main.c: 195:                         lcdCommand(0x01
      +                          );
  1028  00087A  0E01               	movlw	1
  1029  00087C  ECC9  F012         	call	_lcdCommand
  1030  000880                     
  1031                           ;main.c: 196:                         nMensagem = 1;
  1032  000880  0E01               	movlw	1
  1033  000882  6E14               	movwf	_nMensagem^0,c
  1034  000884                     l2919:
  1035                           
  1036                           ;main.c: 199:                 if (nMensagem >= 6)
  1037  000884  0E05               	movlw	5
  1038  000886  6414               	cpfsgt	_nMensagem^0,c
  1039  000888  EF48  F004         	goto	u3291
  1040  00088C  EF4A  F004         	goto	u3290
  1041  000890                     u3291:
  1042  000890  EF6A  F004         	goto	l379
  1043  000894                     u3290:
  1044  000894                     
  1045                           ;main.c: 200:                 {;main.c: 201:                     lcdCommand(0x01);
  1046  000894  0E01               	movlw	1
  1047  000896  ECC9  F012         	call	_lcdCommand
  1048  00089A                     
  1049                           ;main.c: 202:                     nMensagem = nMensagem + 1;
  1050  00089A  2814               	incf	_nMensagem^0,w,c
  1051  00089C  6E14               	movwf	_nMensagem^0,c
  1052  00089E                     
  1053                           ;main.c: 203:                     if ((nMensagem > 8))
  1054  00089E  0E08               	movlw	8
  1055  0008A0  6414               	cpfsgt	_nMensagem^0,c
  1056  0008A2  EF55  F004         	goto	u3301
  1057  0008A6  EF57  F004         	goto	u3300
  1058  0008AA                     u3301:
  1059  0008AA  EF5C  F004         	goto	l2931
  1060  0008AE                     u3300:
  1061  0008AE                     
  1062                           ;main.c: 204:                     {;main.c: 205:                         lcdCommand(0x01
      +                          );
  1063  0008AE  0E01               	movlw	1
  1064  0008B0  ECC9  F012         	call	_lcdCommand
  1065  0008B4                     
  1066                           ;main.c: 206:                         nMensagem = 6;
  1067  0008B4  0E06               	movlw	6
  1068  0008B6  6E14               	movwf	_nMensagem^0,c
  1069  0008B8                     l2931:
  1070                           
  1071                           ;main.c: 208:                     if (potenciaAux == 0)
  1072  0008B8  5013               	movf	_potenciaAux^0,w,c
  1073  0008BA  A4D8               	btfss	status,2,c
  1074  0008BC  EF62  F004         	goto	u3311
  1075  0008C0  EF64  F004         	goto	u3310
  1076  0008C4                     u3311:
  1077  0008C4  EF68  F004         	goto	l384
  1078  0008C8                     u3310:
  1079  0008C8                     
  1080                           ;main.c: 209:                     {;main.c: 210:                         potenciaG = nMe
      +                          nsagem;
  1081  0008C8  C014  F03D         	movff	_nMensagem,_potenciaG
  1082                           
  1083                           ;main.c: 213:                     } else {
  1084  0008CC  EF6A  F004         	goto	l379
  1085  0008D0                     l384:
  1086                           
  1087                           ;main.c: 214:                         potenciaF = nMensagem;
  1088  0008D0  C014  F03C         	movff	_nMensagem,_potenciaF
  1089  0008D4                     l379:
  1090                           
  1091                           ;main.c: 221:             if (((tecla) & (1<<(2))))
  1092  0008D4  A439               	btfss	_tecla^0,2,c
  1093  0008D6  EF6F  F004         	goto	u3321
  1094  0008DA  EF71  F004         	goto	u3320
  1095  0008DE                     u3321:
  1096  0008DE  EF20  F005         	goto	l2991
  1097  0008E2                     u3320:
  1098  0008E2                     
  1099                           ;main.c: 222:             {;main.c: 223:                 lcdCommand(0x80);
  1100  0008E2  0E80               	movlw	128
  1101  0008E4  ECC9  F012         	call	_lcdCommand
  1102                           
  1103                           ;main.c: 224:                 lcdCommand(0x01);
  1104  0008E8  0E01               	movlw	1
  1105  0008EA  ECC9  F012         	call	_lcdCommand
  1106  0008EE                     
  1107                           ;main.c: 226:                 if ((potenciaUpdate == 1)&&(nMensagem>5))
  1108  0008EE  0412               	decf	_potenciaUpdate^0,w,c
  1109  0008F0  A4D8               	btfss	status,2,c
  1110  0008F2  EF7D  F004         	goto	u3331
  1111  0008F6  EF7F  F004         	goto	u3330
  1112  0008FA                     u3331:
  1113  0008FA  EF8E  F004         	goto	l2947
  1114  0008FE                     u3330:
  1115  0008FE  0E05               	movlw	5
  1116  000900  6414               	cpfsgt	_nMensagem^0,c
  1117  000902  EF85  F004         	goto	u3341
  1118  000906  EF87  F004         	goto	u3340
  1119  00090A                     u3341:
  1120  00090A  EF8E  F004         	goto	l2947
  1121  00090E                     u3340:
  1122  00090E                     
  1123                           ;main.c: 227:                 {;main.c: 228:                     lcdCommand(0x01);
  1124  00090E  0E01               	movlw	1
  1125  000910  ECC9  F012         	call	_lcdCommand
  1126  000914                     
  1127                           ;main.c: 229:                     nMensagem = 0;
  1128  000914  0E00               	movlw	0
  1129  000916  6E14               	movwf	_nMensagem^0,c
  1130  000918                     
  1131                           ;main.c: 230:                     potenciaUpdate = 0;
  1132  000918  0E00               	movlw	0
  1133  00091A  6E12               	movwf	_potenciaUpdate^0,c
  1134  00091C                     l2947:
  1135                           
  1136                           ;main.c: 233:                 if ((nMensagem == 1) || (nMensagem == 2) || (nMensagem > 5
      +                          ))
  1137  00091C  0414               	decf	_nMensagem^0,w,c
  1138  00091E  B4D8               	btfsc	status,2,c
  1139  000920  EF94  F004         	goto	u3351
  1140  000924  EF96  F004         	goto	u3350
  1141  000928                     u3351:
  1142  000928  EFA7  F004         	goto	l2953
  1143  00092C                     u3350:
  1144  00092C  0E02               	movlw	2
  1145  00092E  1814               	xorwf	_nMensagem^0,w,c
  1146  000930  B4D8               	btfsc	status,2,c
  1147  000932  EF9D  F004         	goto	u3361
  1148  000936  EF9F  F004         	goto	u3360
  1149  00093A                     u3361:
  1150  00093A  EFA7  F004         	goto	l2953
  1151  00093E                     u3360:
  1152  00093E  0E05               	movlw	5
  1153  000940  6414               	cpfsgt	_nMensagem^0,c
  1154  000942  EFA5  F004         	goto	u3371
  1155  000946  EFA7  F004         	goto	u3370
  1156  00094A                     u3371:
  1157  00094A  EFDB  F004         	goto	l2971
  1158  00094E                     u3370:
  1159  00094E                     l2953:
  1160                           
  1161                           ;main.c: 234:                 {;main.c: 235:                     if (nMensagem == 1)
  1162  00094E  0414               	decf	_nMensagem^0,w,c
  1163  000950  A4D8               	btfss	status,2,c
  1164  000952  EFAD  F004         	goto	u3381
  1165  000956  EFAF  F004         	goto	u3380
  1166  00095A                     u3381:
  1167  00095A  EFB3  F004         	goto	l2957
  1168  00095E                     u3380:
  1169  00095E                     
  1170                           ;main.c: 236:                     {;main.c: 238:                         potenciaAux = 0
      +                          ;
  1171  00095E  0E00               	movlw	0
  1172  000960  6E13               	movwf	_potenciaAux^0,c
  1173                           
  1174                           ;main.c: 239:                     }
  1175  000962  EFBE  F004         	goto	l392
  1176  000966                     l2957:
  1177  000966  0E02               	movlw	2
  1178  000968  1814               	xorwf	_nMensagem^0,w,c
  1179  00096A  A4D8               	btfss	status,2,c
  1180  00096C  EFBA  F004         	goto	u3391
  1181  000970  EFBC  F004         	goto	u3390
  1182  000974                     u3391:
  1183  000974  EFBE  F004         	goto	l392
  1184  000978                     u3390:
  1185  000978                     
  1186                           ;main.c: 241:                     {;main.c: 243:                         potenciaAux = 1
      +                          ;
  1187  000978  0E01               	movlw	1
  1188  00097A  6E13               	movwf	_potenciaAux^0,c
  1189  00097C                     l392:
  1190                           
  1191                           ;main.c: 247:                     nMensagem = 7;
  1192  00097C  0E07               	movlw	7
  1193  00097E  6E14               	movwf	_nMensagem^0,c
  1194  000980                     
  1195                           ;main.c: 250:                     if (nMensagem > 5)
  1196  000980  0E05               	movlw	5
  1197  000982  6414               	cpfsgt	_nMensagem^0,c
  1198  000984  EFC6  F004         	goto	u3401
  1199  000988  EFC8  F004         	goto	u3400
  1200  00098C                     u3401:
  1201  00098C  EFDB  F004         	goto	l2971
  1202  000990                     u3400:
  1203  000990                     
  1204                           ;main.c: 251:                     {;main.c: 252:                         lcdCommand(0x01
      +                          );
  1205  000990  0E01               	movlw	1
  1206  000992  ECC9  F012         	call	_lcdCommand
  1207  000996                     
  1208                           ;main.c: 253:                         potenciaUpdate = 1;
  1209  000996  0E01               	movlw	1
  1210  000998  6E12               	movwf	_potenciaUpdate^0,c
  1211  00099A                     
  1212                           ;main.c: 256:                         if (potenciaAux == 0)
  1213  00099A  5013               	movf	_potenciaAux^0,w,c
  1214  00099C  A4D8               	btfss	status,2,c
  1215  00099E  EFD3  F004         	goto	u3411
  1216  0009A2  EFD5  F004         	goto	u3410
  1217  0009A6                     u3411:
  1218  0009A6  EFD9  F004         	goto	l395
  1219  0009AA                     u3410:
  1220  0009AA                     
  1221                           ;main.c: 257:                         {;main.c: 258:                             potenci
      +                          a = potenciaG;
  1222  0009AA  C03D  F03E         	movff	_potenciaG,_potencia
  1223                           
  1224                           ;main.c: 259:                         }
  1225  0009AE  EFDB  F004         	goto	l2971
  1226  0009B2                     l395:
  1227                           
  1228                           ;main.c: 261:                         {;main.c: 262:                             potenci
      +                          a = potenciaF;
  1229  0009B2  C03C  F03E         	movff	_potenciaF,_potencia
  1230  0009B6                     l2971:
  1231                           
  1232                           ;main.c: 268:                 if (nMensagem == 5)
  1233  0009B6  0E05               	movlw	5
  1234  0009B8  1814               	xorwf	_nMensagem^0,w,c
  1235  0009BA  A4D8               	btfss	status,2,c
  1236  0009BC  EFE2  F004         	goto	u3421
  1237  0009C0  EFE4  F004         	goto	u3420
  1238  0009C4                     u3421:
  1239  0009C4  EFF8  F004         	goto	l2979
  1240  0009C8                     u3420:
  1241  0009C8                     
  1242                           ;main.c: 269:                 {;main.c: 270:                     if (timer == 1)
  1243  0009C8  0417               	decf	_timer^0,w,c
  1244  0009CA  A4D8               	btfss	status,2,c
  1245  0009CC  EFEA  F004         	goto	u3431
  1246  0009D0  EFEC  F004         	goto	u3430
  1247  0009D4                     u3431:
  1248  0009D4  EFF0  F004         	goto	l2977
  1249  0009D8                     u3430:
  1250  0009D8                     
  1251                           ;main.c: 271:                     {;main.c: 272:                         potenciaG = 9;
  1252  0009D8  0E09               	movlw	9
  1253  0009DA  6E3D               	movwf	_potenciaG^0,c
  1254                           
  1255                           ;main.c: 273:                     }
  1256  0009DC  EFF2  F004         	goto	l399
  1257  0009E0                     l2977:
  1258                           
  1259                           ;main.c: 275:                     {;main.c: 276:                         potenciaF = 9;
  1260  0009E0  0E09               	movlw	9
  1261  0009E2  6E3C               	movwf	_potenciaF^0,c
  1262  0009E4                     l399:
  1263                           
  1264                           ;main.c: 279:                     cronOn = 2;
  1265  0009E4  0E02               	movlw	2
  1266  0009E6  6E16               	movwf	_cronOn^0,c
  1267                           
  1268                           ;main.c: 280:                     nMensagem = 0;
  1269  0009E8  0E00               	movlw	0
  1270  0009EA  6E14               	movwf	_nMensagem^0,c
  1271                           
  1272                           ;main.c: 281:                     timer = 0;
  1273  0009EC  0E00               	movlw	0
  1274  0009EE  6E17               	movwf	_timer^0,c
  1275  0009F0                     l2979:
  1276                           
  1277                           ;main.c: 284:                 if ((nMensagem == 3) || (nMensagem == 4))
  1278  0009F0  0E03               	movlw	3
  1279  0009F2  1814               	xorwf	_nMensagem^0,w,c
  1280  0009F4  B4D8               	btfsc	status,2,c
  1281  0009F6  EFFF  F004         	goto	u3441
  1282  0009FA  EF01  F005         	goto	u3440
  1283  0009FE                     u3441:
  1284  0009FE  EF0A  F005         	goto	l2983
  1285  000A02                     u3440:
  1286  000A02  0E04               	movlw	4
  1287  000A04  1814               	xorwf	_nMensagem^0,w,c
  1288  000A06  A4D8               	btfss	status,2,c
  1289  000A08  EF08  F005         	goto	u3451
  1290  000A0C  EF0A  F005         	goto	u3450
  1291  000A10                     u3451:
  1292  000A10  EF20  F005         	goto	l2991
  1293  000A14                     u3450:
  1294  000A14                     l2983:
  1295                           
  1296                           ;main.c: 285:                 {;main.c: 286:                     lcdCommand(0x01);
  1297  000A14  0E01               	movlw	1
  1298  000A16  ECC9  F012         	call	_lcdCommand
  1299  000A1A                     
  1300                           ;main.c: 287:                     if (nMensagem == 3)
  1301  000A1A  0E03               	movlw	3
  1302  000A1C  1814               	xorwf	_nMensagem^0,w,c
  1303  000A1E  A4D8               	btfss	status,2,c
  1304  000A20  EF14  F005         	goto	u3461
  1305  000A24  EF16  F005         	goto	u3460
  1306  000A28                     u3461:
  1307  000A28  EF1A  F005         	goto	l2989
  1308  000A2C                     u3460:
  1309  000A2C                     
  1310                           ;main.c: 288:                     {;main.c: 289:                         timer = 1;
  1311  000A2C  0E01               	movlw	1
  1312  000A2E  6E17               	movwf	_timer^0,c
  1313                           
  1314                           ;main.c: 290:                     }
  1315  000A30  EF1C  F005         	goto	l404
  1316  000A34                     l2989:
  1317                           
  1318                           ;main.c: 292:                     {;main.c: 293:                         timer = 2;
  1319  000A34  0E02               	movlw	2
  1320  000A36  6E17               	movwf	_timer^0,c
  1321  000A38                     l404:
  1322                           
  1323                           ;main.c: 295:                     cronOn = 1;
  1324  000A38  0E01               	movlw	1
  1325  000A3A  6E16               	movwf	_cronOn^0,c
  1326                           
  1327                           ;main.c: 296:                     nMensagem = 5;
  1328  000A3C  0E05               	movlw	5
  1329  000A3E  6E14               	movwf	_nMensagem^0,c
  1330  000A40                     l2991:
  1331                           
  1332                           ;main.c: 300:             if (((tecla) & (1<<(4))))
  1333  000A40  A839               	btfss	_tecla^0,4,c
  1334  000A42  EF25  F005         	goto	u3471
  1335  000A46  EF27  F005         	goto	u3470
  1336  000A4A                     u3471:
  1337  000A4A  EF29  F005         	goto	l2995
  1338  000A4E                     u3470:
  1339  000A4E                     
  1340                           ;main.c: 301:             {;main.c: 302:                 aberta = 1;
  1341  000A4E  0E01               	movlw	1
  1342  000A50  6E15               	movwf	_aberta^0,c
  1343  000A52                     l2995:
  1344                           
  1345                           ;main.c: 307:         ssdDigit(potenciaG - 5, 0);
  1346  000A52  0E00               	movlw	0
  1347  000A54  6E35               	movwf	ssdDigit@pos^0,c
  1348  000A56  503D               	movf	_potenciaG^0,w,c
  1349  000A58  0FFB               	addlw	251
  1350  000A5A  ECEC  F010         	call	_ssdDigit
  1351  000A5E                     
  1352                           ;main.c: 308:         ssdDigit(potenciaF - 5, 1);
  1353  000A5E  0E01               	movlw	1
  1354  000A60  6E35               	movwf	ssdDigit@pos^0,c
  1355  000A62  503C               	movf	_potenciaF^0,w,c
  1356  000A64  0FFB               	addlw	251
  1357  000A66  ECEC  F010         	call	_ssdDigit
  1358                           
  1359                           ;main.c: 310:         switch (cronOn) {
  1360  000A6A  EF39  F006         	goto	l3031
  1361  000A6E                     l2999:
  1362                           
  1363                           ;main.c: 312:                 ssdDigit(0, 2);
  1364  000A6E  0E02               	movlw	2
  1365  000A70  6E35               	movwf	ssdDigit@pos^0,c
  1366  000A72  0E00               	movlw	0
  1367  000A74  ECEC  F010         	call	_ssdDigit
  1368                           
  1369                           ;main.c: 313:                 ssdDigit(0, 3);
  1370  000A78  0E03               	movlw	3
  1371  000A7A  6E35               	movwf	ssdDigit@pos^0,c
  1372  000A7C  0E00               	movlw	0
  1373  000A7E  ECEC  F010         	call	_ssdDigit
  1374                           
  1375                           ;main.c: 314:                 break;
  1376  000A82  EF52  F006         	goto	l3033
  1377  000A86                     l3001:
  1378                           
  1379                           ;main.c: 316:                 m1 = adcRead(0)*9;
  1380  000A86  0E00               	movlw	0
  1381  000A88  6E20               	movwf	(adcRead@channel+1)^0,c
  1382  000A8A  0E00               	movlw	0
  1383  000A8C  6E1F               	movwf	adcRead@channel^0,c
  1384  000A8E  EC43  F011         	call	_adcRead	;wreg free
  1385  000A92  C01F  F023         	movff	?_adcRead,___wmul@multiplier
  1386  000A96  C020  F024         	movff	?_adcRead+1,___wmul@multiplier+1
  1387  000A9A  0E00               	movlw	0
  1388  000A9C  6E26               	movwf	(___wmul@multiplicand+1)^0,c
  1389  000A9E  0E09               	movlw	9
  1390  000AA0  6E25               	movwf	___wmul@multiplicand^0,c
  1391  000AA2  ECA7  F012         	call	___wmul	;wreg free
  1392  000AA6  C023  F005         	movff	?___wmul,_m1
  1393  000AAA  C024  F006         	movff	?___wmul+1,_m1+1
  1394  000AAE  0E00               	movlw	0
  1395  000AB0  BE06               	btfsc	(_m1+1)^0,7,c
  1396  000AB2  0EFF               	movlw	-1
  1397  000AB4  6E07               	movwf	(_m1+2)^0,c
  1398  000AB6  6E08               	movwf	(_m1+3)^0,c
  1399  000AB8                     
  1400                           ;main.c: 318:                 ssdDigit(((m1 / 1000) % 10), 2);
  1401  000AB8  0E02               	movlw	2
  1402  000ABA  6E35               	movwf	ssdDigit@pos^0,c
  1403  000ABC  0EE8               	movlw	232
  1404  000ABE  6E23               	movwf	___lldiv@divisor^0,c
  1405  000AC0  0E03               	movlw	3
  1406  000AC2  6E24               	movwf	(___lldiv@divisor+1)^0,c
  1407  000AC4  0E00               	movlw	0
  1408  000AC6  6E25               	movwf	(___lldiv@divisor+2)^0,c
  1409  000AC8  0E00               	movlw	0
  1410  000ACA  6E26               	movwf	(___lldiv@divisor+3)^0,c
  1411  000ACC  C005  F01F         	movff	_m1,___lldiv@dividend
  1412  000AD0  C006  F020         	movff	_m1+1,___lldiv@dividend+1
  1413  000AD4  C007  F021         	movff	_m1+2,___lldiv@dividend+2
  1414  000AD8  C008  F022         	movff	_m1+3,___lldiv@dividend+3
  1415  000ADC  EC48  F00F         	call	___lldiv	;wreg free
  1416  000AE0  C01F  F02C         	movff	?___lldiv,___llmod@dividend
  1417  000AE4  C020  F02D         	movff	?___lldiv+1,___llmod@dividend+1
  1418  000AE8  C021  F02E         	movff	?___lldiv+2,___llmod@dividend+2
  1419  000AEC  C022  F02F         	movff	?___lldiv+3,___llmod@dividend+3
  1420  000AF0  0E0A               	movlw	10
  1421  000AF2  6E30               	movwf	___llmod@divisor^0,c
  1422  000AF4  0E00               	movlw	0
  1423  000AF6  6E31               	movwf	(___llmod@divisor+1)^0,c
  1424  000AF8  0E00               	movlw	0
  1425  000AFA  6E32               	movwf	(___llmod@divisor+2)^0,c
  1426  000AFC  0E00               	movlw	0
  1427  000AFE  6E33               	movwf	(___llmod@divisor+3)^0,c
  1428  000B00  ECDE  F00F         	call	___llmod	;wreg free
  1429  000B04  502C               	movf	?___llmod^0,w,c
  1430  000B06  ECEC  F010         	call	_ssdDigit
  1431  000B0A                     
  1432                           ;main.c: 319:                 ssdDigit(((m1 / 100) % 10), 3);
  1433  000B0A  0E03               	movlw	3
  1434  000B0C  6E35               	movwf	ssdDigit@pos^0,c
  1435  000B0E  0E64               	movlw	100
  1436  000B10  6E23               	movwf	___lldiv@divisor^0,c
  1437  000B12  0E00               	movlw	0
  1438  000B14  6E24               	movwf	(___lldiv@divisor+1)^0,c
  1439  000B16  0E00               	movlw	0
  1440  000B18  6E25               	movwf	(___lldiv@divisor+2)^0,c
  1441  000B1A  0E00               	movlw	0
  1442  000B1C  6E26               	movwf	(___lldiv@divisor+3)^0,c
  1443  000B1E  C005  F01F         	movff	_m1,___lldiv@dividend
  1444  000B22  C006  F020         	movff	_m1+1,___lldiv@dividend+1
  1445  000B26  C007  F021         	movff	_m1+2,___lldiv@dividend+2
  1446  000B2A  C008  F022         	movff	_m1+3,___lldiv@dividend+3
  1447  000B2E  EC48  F00F         	call	___lldiv	;wreg free
  1448  000B32  C01F  F02C         	movff	?___lldiv,___llmod@dividend
  1449  000B36  C020  F02D         	movff	?___lldiv+1,___llmod@dividend+1
  1450  000B3A  C021  F02E         	movff	?___lldiv+2,___llmod@dividend+2
  1451  000B3E  C022  F02F         	movff	?___lldiv+3,___llmod@dividend+3
  1452  000B42  0E0A               	movlw	10
  1453  000B44  6E30               	movwf	___llmod@divisor^0,c
  1454  000B46  0E00               	movlw	0
  1455  000B48  6E31               	movwf	(___llmod@divisor+1)^0,c
  1456  000B4A  0E00               	movlw	0
  1457  000B4C  6E32               	movwf	(___llmod@divisor+2)^0,c
  1458  000B4E  0E00               	movlw	0
  1459  000B50  6E33               	movwf	(___llmod@divisor+3)^0,c
  1460  000B52  ECDE  F00F         	call	___llmod	;wreg free
  1461  000B56  502C               	movf	?___llmod^0,w,c
  1462  000B58  ECEC  F010         	call	_ssdDigit
  1463                           
  1464                           ;main.c: 320:                 break;
  1465  000B5C  EF52  F006         	goto	l3033
  1466  000B60                     l3007:
  1467                           
  1468                           ;main.c: 323:                 ssdDigit(((m1 / 1000) % 10), 2);
  1469  000B60  0E02               	movlw	2
  1470  000B62  6E35               	movwf	ssdDigit@pos^0,c
  1471  000B64  0EE8               	movlw	232
  1472  000B66  6E23               	movwf	___lldiv@divisor^0,c
  1473  000B68  0E03               	movlw	3
  1474  000B6A  6E24               	movwf	(___lldiv@divisor+1)^0,c
  1475  000B6C  0E00               	movlw	0
  1476  000B6E  6E25               	movwf	(___lldiv@divisor+2)^0,c
  1477  000B70  0E00               	movlw	0
  1478  000B72  6E26               	movwf	(___lldiv@divisor+3)^0,c
  1479  000B74  C005  F01F         	movff	_m1,___lldiv@dividend
  1480  000B78  C006  F020         	movff	_m1+1,___lldiv@dividend+1
  1481  000B7C  C007  F021         	movff	_m1+2,___lldiv@dividend+2
  1482  000B80  C008  F022         	movff	_m1+3,___lldiv@dividend+3
  1483  000B84  EC48  F00F         	call	___lldiv	;wreg free
  1484  000B88  C01F  F02C         	movff	?___lldiv,___llmod@dividend
  1485  000B8C  C020  F02D         	movff	?___lldiv+1,___llmod@dividend+1
  1486  000B90  C021  F02E         	movff	?___lldiv+2,___llmod@dividend+2
  1487  000B94  C022  F02F         	movff	?___lldiv+3,___llmod@dividend+3
  1488  000B98  0E0A               	movlw	10
  1489  000B9A  6E30               	movwf	___llmod@divisor^0,c
  1490  000B9C  0E00               	movlw	0
  1491  000B9E  6E31               	movwf	(___llmod@divisor+1)^0,c
  1492  000BA0  0E00               	movlw	0
  1493  000BA2  6E32               	movwf	(___llmod@divisor+2)^0,c
  1494  000BA4  0E00               	movlw	0
  1495  000BA6  6E33               	movwf	(___llmod@divisor+3)^0,c
  1496  000BA8  ECDE  F00F         	call	___llmod	;wreg free
  1497  000BAC  502C               	movf	?___llmod^0,w,c
  1498  000BAE  ECEC  F010         	call	_ssdDigit
  1499                           
  1500                           ;main.c: 324:                 ssdDigit(((m1 / 100) % 10), 3);
  1501  000BB2  0E03               	movlw	3
  1502  000BB4  6E35               	movwf	ssdDigit@pos^0,c
  1503  000BB6  0E64               	movlw	100
  1504  000BB8  6E23               	movwf	___lldiv@divisor^0,c
  1505  000BBA  0E00               	movlw	0
  1506  000BBC  6E24               	movwf	(___lldiv@divisor+1)^0,c
  1507  000BBE  0E00               	movlw	0
  1508  000BC0  6E25               	movwf	(___lldiv@divisor+2)^0,c
  1509  000BC2  0E00               	movlw	0
  1510  000BC4  6E26               	movwf	(___lldiv@divisor+3)^0,c
  1511  000BC6  C005  F01F         	movff	_m1,___lldiv@dividend
  1512  000BCA  C006  F020         	movff	_m1+1,___lldiv@dividend+1
  1513  000BCE  C007  F021         	movff	_m1+2,___lldiv@dividend+2
  1514  000BD2  C008  F022         	movff	_m1+3,___lldiv@dividend+3
  1515  000BD6  EC48  F00F         	call	___lldiv	;wreg free
  1516  000BDA  C01F  F02C         	movff	?___lldiv,___llmod@dividend
  1517  000BDE  C020  F02D         	movff	?___lldiv+1,___llmod@dividend+1
  1518  000BE2  C021  F02E         	movff	?___lldiv+2,___llmod@dividend+2
  1519  000BE6  C022  F02F         	movff	?___lldiv+3,___llmod@dividend+3
  1520  000BEA  0E0A               	movlw	10
  1521  000BEC  6E30               	movwf	___llmod@divisor^0,c
  1522  000BEE  0E00               	movlw	0
  1523  000BF0  6E31               	movwf	(___llmod@divisor+1)^0,c
  1524  000BF2  0E00               	movlw	0
  1525  000BF4  6E32               	movwf	(___llmod@divisor+2)^0,c
  1526  000BF6  0E00               	movlw	0
  1527  000BF8  6E33               	movwf	(___llmod@divisor+3)^0,c
  1528  000BFA  ECDE  F00F         	call	___llmod	;wreg free
  1529  000BFE  502C               	movf	?___llmod^0,w,c
  1530  000C00  ECEC  F010         	call	_ssdDigit
  1531  000C04                     
  1532                           ;main.c: 325:                 m1--;
  1533  000C04  0605               	decf	_m1^0,f,c
  1534  000C06  0E00               	movlw	0
  1535  000C08  5A06               	subwfb	(_m1+1)^0,f,c
  1536  000C0A  5A07               	subwfb	(_m1+2)^0,f,c
  1537  000C0C  5A08               	subwfb	(_m1+3)^0,f,c
  1538  000C0E                     
  1539                           ;main.c: 327:                 if (m1 == 0)
  1540  000C0E  5005               	movf	_m1^0,w,c
  1541  000C10  1006               	iorwf	(_m1+1)^0,w,c
  1542  000C12  1007               	iorwf	(_m1+2)^0,w,c
  1543  000C14  1008               	iorwf	(_m1+3)^0,w,c
  1544  000C16  A4D8               	btfss	status,2,c
  1545  000C18  EF10  F006         	goto	u3481
  1546  000C1C  EF12  F006         	goto	u3480
  1547  000C20                     u3481:
  1548  000C20  EF52  F006         	goto	l3033
  1549  000C24                     u3480:
  1550  000C24                     
  1551                           ;main.c: 328:                 {;main.c: 329:                     pwmSet(150);
  1552  000C24  0E96               	movlw	150
  1553  000C26  EC5C  F010         	call	_pwmSet
  1554  000C2A                     
  1555                           ;main.c: 330:                     tempoS(3);
  1556  000C2A  0E03               	movlw	3
  1557  000C2C  ECD8  F012         	call	_tempoS
  1558  000C30                     
  1559                           ;main.c: 331:                     pwmSet(0);
  1560  000C30  0E00               	movlw	0
  1561  000C32  EC5C  F010         	call	_pwmSet
  1562  000C36                     
  1563                           ;main.c: 332:                     cronOn = 0;
  1564  000C36  0E00               	movlw	0
  1565  000C38  6E16               	movwf	_cronOn^0,c
  1566  000C3A                     
  1567                           ;main.c: 334:                     if (potenciaG == 9)
  1568  000C3A  0E09               	movlw	9
  1569  000C3C  183D               	xorwf	_potenciaG^0,w,c
  1570  000C3E  A4D8               	btfss	status,2,c
  1571  000C40  EF24  F006         	goto	u3491
  1572  000C44  EF26  F006         	goto	u3490
  1573  000C48                     u3491:
  1574  000C48  EF2A  F006         	goto	l3025
  1575  000C4C                     u3490:
  1576  000C4C                     
  1577                           ;main.c: 335:                     {;main.c: 336:                         potenciaG = 7;
  1578  000C4C  0E07               	movlw	7
  1579  000C4E  6E3D               	movwf	_potenciaG^0,c
  1580                           
  1581                           ;main.c: 337:                     }
  1582  000C50  EF52  F006         	goto	l3033
  1583  000C54                     l3025:
  1584  000C54  0E09               	movlw	9
  1585  000C56  183C               	xorwf	_potenciaF^0,w,c
  1586  000C58  A4D8               	btfss	status,2,c
  1587  000C5A  EF31  F006         	goto	u3501
  1588  000C5E  EF33  F006         	goto	u3500
  1589  000C62                     u3501:
  1590  000C62  EF37  F006         	goto	l411
  1591  000C66                     u3500:
  1592  000C66                     
  1593                           ;main.c: 339:                     {;main.c: 340:                         potenciaF = 7;
  1594  000C66  0E07               	movlw	7
  1595  000C68  6E3C               	movwf	_potenciaF^0,c
  1596  000C6A  EF52  F006         	goto	l3033
  1597  000C6E                     l411:
  1598                           
  1599                           ;main.c: 343:                 break;
  1600  000C6E  EF52  F006         	goto	l3033
  1601  000C72                     l3031:
  1602  000C72  5016               	movf	_cronOn^0,w,c
  1603  000C74  6E37               	movwf	??_main^0,c
  1604  000C76  6A38               	clrf	(??_main+1)^0,c
  1605                           
  1606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1607                           ; Switch size 1, requested type "simple"
  1608                           ; Number of cases is 1, Range of values is 0 to 0
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte            4     3 (average)
  1612                           ;	Chosen strategy is simple_byte
  1613  000C78  5038               	movf	(??_main+1)^0,w,c
  1614  000C7A  0A00               	xorlw	0	; case 0
  1615  000C7C  B4D8               	btfsc	status,2,c
  1616  000C7E  EF43  F006         	goto	l3059
  1617  000C82  EF52  F006         	goto	l3033
  1618  000C86                     l3059:
  1619                           
  1620                           ; Switch size 1, requested type "simple"
  1621                           ; Number of cases is 3, Range of values is 0 to 2
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte           10     6 (average)
  1625                           ;	Chosen strategy is simple_byte
  1626  000C86  5037               	movf	??_main^0,w,c
  1627  000C88  0A00               	xorlw	0	; case 0
  1628  000C8A  B4D8               	btfsc	status,2,c
  1629  000C8C  EF37  F005         	goto	l2999
  1630  000C90  0A01               	xorlw	1	; case 1
  1631  000C92  B4D8               	btfsc	status,2,c
  1632  000C94  EF43  F005         	goto	l3001
  1633  000C98  0A03               	xorlw	3	; case 2
  1634  000C9A  B4D8               	btfsc	status,2,c
  1635  000C9C  EFB0  F005         	goto	l3007
  1636  000CA0  EF52  F006         	goto	l3033
  1637  000CA4                     l3033:
  1638                           
  1639                           ;main.c: 346:         ssdUpdate();
  1640  000CA4  EC5C  F00B         	call	_ssdUpdate	;wreg free
  1641  000CA8                     
  1642                           ;main.c: 347:         for (vtempo = 0; vtempo < 125; vtempo++);
  1643  000CA8  0E00               	movlw	0
  1644  000CAA  6E01               	movwf	_vtempo^0,c
  1645  000CAC  0E00               	movlw	0
  1646  000CAE  6E02               	movwf	(_vtempo+1)^0,c
  1647  000CB0  0E00               	movlw	0
  1648  000CB2  6E03               	movwf	(_vtempo+2)^0,c
  1649  000CB4  0E00               	movlw	0
  1650  000CB6  6E04               	movwf	(_vtempo+3)^0,c
  1651  000CB8  C001  F01F         	movff	_vtempo,___flge@ff1
  1652  000CBC  C002  F020         	movff	_vtempo+1,___flge@ff1+1
  1653  000CC0  C003  F021         	movff	_vtempo+2,___flge@ff1+2
  1654  000CC4  C004  F022         	movff	_vtempo+3,___flge@ff1+3
  1655  000CC8  0E00               	movlw	0
  1656  000CCA  6E23               	movwf	___flge@ff2^0,c
  1657  000CCC  0E00               	movlw	0
  1658  000CCE  6E24               	movwf	(___flge@ff2+1)^0,c
  1659  000CD0  0EFA               	movlw	250
  1660  000CD2  6E25               	movwf	(___flge@ff2+2)^0,c
  1661  000CD4  0E42               	movlw	66
  1662  000CD6  6E26               	movwf	(___flge@ff2+3)^0,c
  1663  000CD8  EC6C  F00E         	call	___flge	;wreg free
  1664  000CDC  A0D8               	btfss	status,0,c
  1665  000CDE  EF73  F006         	goto	u3511
  1666  000CE2  EF75  F006         	goto	u3510
  1667  000CE6                     u3511:
  1668  000CE6  EF77  F006         	goto	l3041
  1669  000CEA                     u3510:
  1670  000CEA  EF6F  F003         	goto	l362
  1671  000CEE                     l3041:
  1672  000CEE  C001  F01F         	movff	_vtempo,___fladd@b
  1673  000CF2  C002  F020         	movff	_vtempo+1,___fladd@b+1
  1674  000CF6  C003  F021         	movff	_vtempo+2,___fladd@b+2
  1675  000CFA  C004  F022         	movff	_vtempo+3,___fladd@b+3
  1676  000CFE  0E00               	movlw	0
  1677  000D00  6E23               	movwf	___fladd@a^0,c
  1678  000D02  0E00               	movlw	0
  1679  000D04  6E24               	movwf	(___fladd@a+1)^0,c
  1680  000D06  0E80               	movlw	128
  1681  000D08  6E25               	movwf	(___fladd@a+2)^0,c
  1682  000D0A  0E3F               	movlw	63
  1683  000D0C  6E26               	movwf	(___fladd@a+3)^0,c
  1684  000D0E  ECAE  F006         	call	___fladd	;wreg free
  1685  000D12  C01F  F001         	movff	?___fladd,_vtempo
  1686  000D16  C020  F002         	movff	?___fladd+1,_vtempo+1
  1687  000D1A  C021  F003         	movff	?___fladd+2,_vtempo+2
  1688  000D1E  C022  F004         	movff	?___fladd+3,_vtempo+3
  1689  000D22  C001  F01F         	movff	_vtempo,___flge@ff1
  1690  000D26  C002  F020         	movff	_vtempo+1,___flge@ff1+1
  1691  000D2A  C003  F021         	movff	_vtempo+2,___flge@ff1+2
  1692  000D2E  C004  F022         	movff	_vtempo+3,___flge@ff1+3
  1693  000D32  0E00               	movlw	0
  1694  000D34  6E23               	movwf	___flge@ff2^0,c
  1695  000D36  0E00               	movlw	0
  1696  000D38  6E24               	movwf	(___flge@ff2+1)^0,c
  1697  000D3A  0EFA               	movlw	250
  1698  000D3C  6E25               	movwf	(___flge@ff2+2)^0,c
  1699  000D3E  0E42               	movlw	66
  1700  000D40  6E26               	movwf	(___flge@ff2+3)^0,c
  1701  000D42  EC6C  F00E         	call	___flge	;wreg free
  1702  000D46  A0D8               	btfss	status,0,c
  1703  000D48  EFA8  F006         	goto	u3521
  1704  000D4C  EFAA  F006         	goto	u3520
  1705  000D50                     u3521:
  1706  000D50  EF77  F006         	goto	l3041
  1707  000D54                     u3520:
  1708  000D54  EF6F  F003         	goto	l362
  1709  000D58  EF00  F000         	goto	start
  1710  000D5C                     __end_of_main:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _ssdUpdate *****************
  1714 ;; Defined at:
  1715 ;;		line 50 in file "ssd.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1729 ;;      Params:         0       0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0
  1731 ;;      Temps:          2       0       0       0       0       0       0
  1732 ;;      Totals:         2       0       0       0       0       0       0
  1733 ;;Total ram usage:        2 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 3
  1736 ;; This function calls:
  1737 ;;		_digitalWrite
  1738 ;;		_soWrite
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text1
  1745  0016B8                     __ptext1:
  1746                           	callstack 0
  1747  0016B8                     _ssdUpdate:
  1748                           	callstack 27
  1749  0016B8                     
  1750                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1751  0016B8  0E00               	movlw	0
  1752  0016BA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1753  0016BC  0E18               	movlw	24
  1754  0016BE  6E1F               	movwf	digitalWrite@pin^0,c
  1755  0016C0  0E00               	movlw	0
  1756  0016C2  6E22               	movwf	(digitalWrite@value+1)^0,c
  1757  0016C4  0E00               	movlw	0
  1758  0016C6  6E21               	movwf	digitalWrite@value^0,c
  1759  0016C8  EC0E  F009         	call	_digitalWrite	;wreg free
  1760                           
  1761                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1762  0016CC  0E00               	movlw	0
  1763  0016CE  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1764  0016D0  0E19               	movlw	25
  1765  0016D2  6E1F               	movwf	digitalWrite@pin^0,c
  1766  0016D4  0E00               	movlw	0
  1767  0016D6  6E22               	movwf	(digitalWrite@value+1)^0,c
  1768  0016D8  0E00               	movlw	0
  1769  0016DA  6E21               	movwf	digitalWrite@value^0,c
  1770  0016DC  EC0E  F009         	call	_digitalWrite	;wreg free
  1771                           
  1772                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1773  0016E0  0E00               	movlw	0
  1774  0016E2  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1775  0016E4  0E1A               	movlw	26
  1776  0016E6  6E1F               	movwf	digitalWrite@pin^0,c
  1777  0016E8  0E00               	movlw	0
  1778  0016EA  6E22               	movwf	(digitalWrite@value+1)^0,c
  1779  0016EC  0E00               	movlw	0
  1780  0016EE  6E21               	movwf	digitalWrite@value^0,c
  1781  0016F0  EC0E  F009         	call	_digitalWrite	;wreg free
  1782                           
  1783                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1784  0016F4  0E00               	movlw	0
  1785  0016F6  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1786  0016F8  0E1B               	movlw	27
  1787  0016FA  6E1F               	movwf	digitalWrite@pin^0,c
  1788  0016FC  0E00               	movlw	0
  1789  0016FE  6E22               	movwf	(digitalWrite@value+1)^0,c
  1790  001700  0E00               	movlw	0
  1791  001702  6E21               	movwf	digitalWrite@value^0,c
  1792  001704  EC0E  F009         	call	_digitalWrite	;wreg free
  1793                           
  1794                           ;ssd.c: 60:     soWrite(0x00);
  1795  001708  0E00               	movlw	0
  1796  00170A  6E26               	movwf	(soWrite@value+1)^0,c
  1797  00170C  0E00               	movlw	0
  1798  00170E  6E25               	movwf	soWrite@value^0,c
  1799  001710  EC6B  F011         	call	_soWrite	;wreg free
  1800                           
  1801                           ;ssd.c: 62:     switch (display)
  1802  001714  EFF4  F00B         	goto	l2511
  1803  001718                     l2483:
  1804                           
  1805                           ;ssd.c: 65:             soWrite(valor[v0]);
  1806  001718  0E01               	movlw	low _valor
  1807  00171A  241C               	addwf	_v0^0,w,c
  1808  00171C  6EF6               	movwf	tblptrl,c
  1809  00171E  6AF7               	clrf	tblptrh,c
  1810  001720  0E06               	movlw	high _valor
  1811  001722  22F7               	addwfc	tblptrh,f,c
  1812  001724                     	if	0	;There are less than 3 active tblptr bytes
  1813  001724                     	endif
  1814  001724  0008               	tblrd		*
  1815  001726  50F5               	movf	tablat,w,c
  1816  001728  6E25               	movwf	soWrite@value^0,c
  1817  00172A  6A26               	clrf	(soWrite@value+1)^0,c
  1818  00172C  EC6B  F011         	call	_soWrite	;wreg free
  1819  001730                     
  1820                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1821  001730  0E00               	movlw	0
  1822  001732  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1823  001734  0E18               	movlw	24
  1824  001736  6E1F               	movwf	digitalWrite@pin^0,c
  1825  001738  0E00               	movlw	0
  1826  00173A  6E22               	movwf	(digitalWrite@value+1)^0,c
  1827  00173C  0E01               	movlw	1
  1828  00173E  6E21               	movwf	digitalWrite@value^0,c
  1829  001740  EC0E  F009         	call	_digitalWrite	;wreg free
  1830  001744                     
  1831                           ;ssd.c: 67:             display = 1;
  1832  001744  0E01               	movlw	1
  1833  001746  6E1D               	movwf	_display^0,c
  1834                           
  1835                           ;ssd.c: 68:             break;
  1836  001748  EF11  F00C         	goto	l248
  1837  00174C                     l2489:
  1838                           
  1839                           ;ssd.c: 71:             soWrite(valor[v1]);
  1840  00174C  0E01               	movlw	low _valor
  1841  00174E  241B               	addwf	_v1^0,w,c
  1842  001750  6EF6               	movwf	tblptrl,c
  1843  001752  6AF7               	clrf	tblptrh,c
  1844  001754  0E06               	movlw	high _valor
  1845  001756  22F7               	addwfc	tblptrh,f,c
  1846  001758                     	if	0	;There are less than 3 active tblptr bytes
  1847  001758                     	endif
  1848  001758  0008               	tblrd		*
  1849  00175A  50F5               	movf	tablat,w,c
  1850  00175C  6E25               	movwf	soWrite@value^0,c
  1851  00175E  6A26               	clrf	(soWrite@value+1)^0,c
  1852  001760  EC6B  F011         	call	_soWrite	;wreg free
  1853  001764                     
  1854                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1855  001764  0E00               	movlw	0
  1856  001766  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1857  001768  0E19               	movlw	25
  1858  00176A  6E1F               	movwf	digitalWrite@pin^0,c
  1859  00176C  0E00               	movlw	0
  1860  00176E  6E22               	movwf	(digitalWrite@value+1)^0,c
  1861  001770  0E01               	movlw	1
  1862  001772  6E21               	movwf	digitalWrite@value^0,c
  1863  001774  EC0E  F009         	call	_digitalWrite	;wreg free
  1864  001778                     
  1865                           ;ssd.c: 73:             display = 2;
  1866  001778  0E02               	movlw	2
  1867  00177A  6E1D               	movwf	_display^0,c
  1868                           
  1869                           ;ssd.c: 74:             break;
  1870  00177C  EF11  F00C         	goto	l248
  1871  001780                     l2495:
  1872                           
  1873                           ;ssd.c: 77:             soWrite(valor[v2]);
  1874  001780  0E01               	movlw	low _valor
  1875  001782  241A               	addwf	_v2^0,w,c
  1876  001784  6EF6               	movwf	tblptrl,c
  1877  001786  6AF7               	clrf	tblptrh,c
  1878  001788  0E06               	movlw	high _valor
  1879  00178A  22F7               	addwfc	tblptrh,f,c
  1880  00178C                     	if	0	;There are less than 3 active tblptr bytes
  1881  00178C                     	endif
  1882  00178C  0008               	tblrd		*
  1883  00178E  50F5               	movf	tablat,w,c
  1884  001790  6E25               	movwf	soWrite@value^0,c
  1885  001792  6A26               	clrf	(soWrite@value+1)^0,c
  1886  001794  EC6B  F011         	call	_soWrite	;wreg free
  1887  001798                     
  1888                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1889  001798  0E00               	movlw	0
  1890  00179A  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1891  00179C  0E1A               	movlw	26
  1892  00179E  6E1F               	movwf	digitalWrite@pin^0,c
  1893  0017A0  0E00               	movlw	0
  1894  0017A2  6E22               	movwf	(digitalWrite@value+1)^0,c
  1895  0017A4  0E01               	movlw	1
  1896  0017A6  6E21               	movwf	digitalWrite@value^0,c
  1897  0017A8  EC0E  F009         	call	_digitalWrite	;wreg free
  1898  0017AC                     
  1899                           ;ssd.c: 79:             display = 3;
  1900  0017AC  0E03               	movlw	3
  1901  0017AE  6E1D               	movwf	_display^0,c
  1902                           
  1903                           ;ssd.c: 80:             break;
  1904  0017B0  EF11  F00C         	goto	l248
  1905  0017B4                     l2501:
  1906                           
  1907                           ;ssd.c: 83:             soWrite(valor[v3]);
  1908  0017B4  0E01               	movlw	low _valor
  1909  0017B6  2419               	addwf	_v3^0,w,c
  1910  0017B8  6EF6               	movwf	tblptrl,c
  1911  0017BA  6AF7               	clrf	tblptrh,c
  1912  0017BC  0E06               	movlw	high _valor
  1913  0017BE  22F7               	addwfc	tblptrh,f,c
  1914  0017C0                     	if	0	;There are less than 3 active tblptr bytes
  1915  0017C0                     	endif
  1916  0017C0  0008               	tblrd		*
  1917  0017C2  50F5               	movf	tablat,w,c
  1918  0017C4  6E25               	movwf	soWrite@value^0,c
  1919  0017C6  6A26               	clrf	(soWrite@value+1)^0,c
  1920  0017C8  EC6B  F011         	call	_soWrite	;wreg free
  1921  0017CC                     
  1922                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1923  0017CC  0E00               	movlw	0
  1924  0017CE  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1925  0017D0  0E1B               	movlw	27
  1926  0017D2  6E1F               	movwf	digitalWrite@pin^0,c
  1927  0017D4  0E00               	movlw	0
  1928  0017D6  6E22               	movwf	(digitalWrite@value+1)^0,c
  1929  0017D8  0E01               	movlw	1
  1930  0017DA  6E21               	movwf	digitalWrite@value^0,c
  1931  0017DC  EC0E  F009         	call	_digitalWrite	;wreg free
  1932  0017E0                     l2505:
  1933                           
  1934                           ;ssd.c: 85:             display = 0;
  1935  0017E0  0E00               	movlw	0
  1936  0017E2  6E1D               	movwf	_display^0,c
  1937                           
  1938                           ;ssd.c: 86:             break;
  1939  0017E4  EF11  F00C         	goto	l248
  1940  0017E8                     l2511:
  1941  0017E8  501D               	movf	_display^0,w,c
  1942  0017EA  6E28               	movwf	??_ssdUpdate^0,c
  1943  0017EC  6A29               	clrf	(??_ssdUpdate+1)^0,c
  1944                           
  1945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1946                           ; Switch size 1, requested type "simple"
  1947                           ; Number of cases is 1, Range of values is 0 to 0
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte            4     3 (average)
  1951                           ;	Chosen strategy is simple_byte
  1952  0017EE  5029               	movf	(??_ssdUpdate+1)^0,w,c
  1953  0017F0  0A00               	xorlw	0	; case 0
  1954  0017F2  B4D8               	btfsc	status,2,c
  1955  0017F4  EFFE  F00B         	goto	l3061
  1956  0017F8  EFF0  F00B         	goto	l2505
  1957  0017FC                     l3061:
  1958                           
  1959                           ; Switch size 1, requested type "simple"
  1960                           ; Number of cases is 4, Range of values is 0 to 3
  1961                           ; switch strategies available:
  1962                           ; Name         Instructions Cycles
  1963                           ; simple_byte           13     7 (average)
  1964                           ;	Chosen strategy is simple_byte
  1965  0017FC  5028               	movf	??_ssdUpdate^0,w,c
  1966  0017FE  0A00               	xorlw	0	; case 0
  1967  001800  B4D8               	btfsc	status,2,c
  1968  001802  EF8C  F00B         	goto	l2483
  1969  001806  0A01               	xorlw	1	; case 1
  1970  001808  B4D8               	btfsc	status,2,c
  1971  00180A  EFA6  F00B         	goto	l2489
  1972  00180E  0A03               	xorlw	3	; case 2
  1973  001810  B4D8               	btfsc	status,2,c
  1974  001812  EFC0  F00B         	goto	l2495
  1975  001816  0A01               	xorlw	1	; case 3
  1976  001818  B4D8               	btfsc	status,2,c
  1977  00181A  EFDA  F00B         	goto	l2501
  1978  00181E  EFF0  F00B         	goto	l2505
  1979  001822                     l248:
  1980  001822  0012               	return		;funcret
  1981  001824                     __end_of_ssdUpdate:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _ssdInit *****************
  1985 ;; Defined at:
  1986 ;;		line 94 in file "ssd.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2000 ;;      Params:         0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 2
  2007 ;; This function calls:
  2008 ;;		_pinMode
  2009 ;;		_soInit
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text2
  2016  002230                     __ptext2:
  2017                           	callstack 0
  2018  002230                     _ssdInit:
  2019                           	callstack 28
  2020  002230                     
  2021                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  2022  002230  0E00               	movlw	0
  2023  002232  6E20               	movwf	(pinMode@pin+1)^0,c
  2024  002234  0E18               	movlw	24
  2025  002236  6E1F               	movwf	pinMode@pin^0,c
  2026  002238  0E00               	movlw	0
  2027  00223A  6E22               	movwf	(pinMode@type+1)^0,c
  2028  00223C  0E00               	movlw	0
  2029  00223E  6E21               	movwf	pinMode@type^0,c
  2030  002240  EC35  F00A         	call	_pinMode	;wreg free
  2031                           
  2032                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  2033  002244  0E00               	movlw	0
  2034  002246  6E20               	movwf	(pinMode@pin+1)^0,c
  2035  002248  0E19               	movlw	25
  2036  00224A  6E1F               	movwf	pinMode@pin^0,c
  2037  00224C  0E00               	movlw	0
  2038  00224E  6E22               	movwf	(pinMode@type+1)^0,c
  2039  002250  0E00               	movlw	0
  2040  002252  6E21               	movwf	pinMode@type^0,c
  2041  002254  EC35  F00A         	call	_pinMode	;wreg free
  2042                           
  2043                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  2044  002258  0E00               	movlw	0
  2045  00225A  6E20               	movwf	(pinMode@pin+1)^0,c
  2046  00225C  0E1A               	movlw	26
  2047  00225E  6E1F               	movwf	pinMode@pin^0,c
  2048  002260  0E00               	movlw	0
  2049  002262  6E22               	movwf	(pinMode@type+1)^0,c
  2050  002264  0E00               	movlw	0
  2051  002266  6E21               	movwf	pinMode@type^0,c
  2052  002268  EC35  F00A         	call	_pinMode	;wreg free
  2053                           
  2054                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  2055  00226C  0E00               	movlw	0
  2056  00226E  6E20               	movwf	(pinMode@pin+1)^0,c
  2057  002270  0E1B               	movlw	27
  2058  002272  6E1F               	movwf	pinMode@pin^0,c
  2059  002274  0E00               	movlw	0
  2060  002276  6E22               	movwf	(pinMode@type+1)^0,c
  2061  002278  0E00               	movlw	0
  2062  00227A  6E21               	movwf	pinMode@type^0,c
  2063  00227C  EC35  F00A         	call	_pinMode	;wreg free
  2064                           
  2065                           ;ssd.c: 102:     soInit();
  2066  002280  ECD7  F011         	call	_soInit	;wreg free
  2067  002284  0012               	return		;funcret
  2068  002286                     __end_of_ssdInit:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _ssdDigit *****************
  2072 ;; Defined at:
  2073 ;;		line 34 in file "ssd.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  val             1    wreg     unsigned char 
  2076 ;;  pos             1   22[COMRAM] unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  val             1   23[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2088 ;;      Params:         1       0       0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0
  2091 ;;      Totals:         2       0       0       0       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text3
  2102  0021D8                     __ptext3:
  2103                           	callstack 0
  2104  0021D8                     _ssdDigit:
  2105                           	callstack 30
  2106                           
  2107                           ;incstack = 0
  2108                           ;ssdDigit@val stored from wreg
  2109  0021D8  6E36               	movwf	ssdDigit@val^0,c
  2110  0021DA                     
  2111                           ;ssd.c: 35:     if (pos == 0) {
  2112  0021DA  5035               	movf	ssdDigit@pos^0,w,c
  2113  0021DC  A4D8               	btfss	status,2,c
  2114  0021DE  EFF3  F010         	goto	u2541
  2115  0021E2  EFF5  F010         	goto	u2540
  2116  0021E6                     u2541:
  2117  0021E6  EFF7  F010         	goto	l2469
  2118  0021EA                     u2540:
  2119  0021EA                     
  2120                           ;ssd.c: 36:         v0 = val;
  2121  0021EA  C036  F01C         	movff	ssdDigit@val,_v0
  2122  0021EE                     l2469:
  2123                           
  2124                           ;ssd.c: 38:     if (pos == 1) {
  2125  0021EE  0435               	decf	ssdDigit@pos^0,w,c
  2126  0021F0  A4D8               	btfss	status,2,c
  2127  0021F2  EFFD  F010         	goto	u2551
  2128  0021F6  EFFF  F010         	goto	u2550
  2129  0021FA                     u2551:
  2130  0021FA  EF01  F011         	goto	l2473
  2131  0021FE                     u2550:
  2132  0021FE                     
  2133                           ;ssd.c: 39:         v1 = val;
  2134  0021FE  C036  F01B         	movff	ssdDigit@val,_v1
  2135  002202                     l2473:
  2136                           
  2137                           ;ssd.c: 41:     if (pos == 2) {
  2138  002202  0E02               	movlw	2
  2139  002204  1835               	xorwf	ssdDigit@pos^0,w,c
  2140  002206  A4D8               	btfss	status,2,c
  2141  002208  EF08  F011         	goto	u2561
  2142  00220C  EF0A  F011         	goto	u2560
  2143  002210                     u2561:
  2144  002210  EF0C  F011         	goto	l2477
  2145  002214                     u2560:
  2146  002214                     
  2147                           ;ssd.c: 42:         v2 = val;
  2148  002214  C036  F01A         	movff	ssdDigit@val,_v2
  2149  002218                     l2477:
  2150                           
  2151                           ;ssd.c: 44:     if (pos == 3) {
  2152  002218  0E03               	movlw	3
  2153  00221A  1835               	xorwf	ssdDigit@pos^0,w,c
  2154  00221C  A4D8               	btfss	status,2,c
  2155  00221E  EF13  F011         	goto	u2571
  2156  002222  EF15  F011         	goto	u2570
  2157  002226                     u2571:
  2158  002226  EF17  F011         	goto	l238
  2159  00222A                     u2570:
  2160  00222A                     
  2161                           ;ssd.c: 45:         v3 = val;
  2162  00222A  C036  F019         	movff	ssdDigit@val,_v3
  2163  00222E                     l238:
  2164  00222E  0012               	return		;funcret
  2165  002230                     __end_of_ssdDigit:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _pwmInit *****************
  2169 ;; Defined at:
  2170 ;;		line 51 in file "pwm.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2184 ;;      Params:         0       0       0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0
  2187 ;;      Totals:         0       0       0       0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 2
  2191 ;; This function calls:
  2192 ;;		_pwmFrequency
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text4
  2199  0025CE                     __ptext4:
  2200                           	callstack 0
  2201  0025CE                     _pwmInit:
  2202                           	callstack 28
  2203  0025CE                     
  2204                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2205  0025CE  9294               	bcf	148,1,c	;volatile
  2206  0025D0                     
  2207                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2208  0025D0  0E03               	movlw	3
  2209  0025D2  12CA               	iorwf	202,f,c	;volatile
  2210  0025D4                     
  2211                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2212  0025D4  84CA               	bsf	202,2,c	;volatile
  2213  0025D6                     
  2214                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2215  0025D6  0E0C               	movlw	12
  2216  0025D8  6EBA               	movwf	186,c	;volatile
  2217  0025DA                     
  2218                           ;pwm.c: 60:     pwmFrequency(100);
  2219  0025DA  0E00               	movlw	0
  2220  0025DC  6E2E               	movwf	(pwmFrequency@freq+1)^0,c
  2221  0025DE  0E64               	movlw	100
  2222  0025E0  6E2D               	movwf	pwmFrequency@freq^0,c
  2223  0025E2  EC81  F012         	call	_pwmFrequency	;wreg free
  2224  0025E6  0012               	return		;funcret
  2225  0025E8                     __end_of_pwmInit:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _pwmFrequency *****************
  2229 ;; Defined at:
  2230 ;;		line 44 in file "pwm.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  freq            2   14[COMRAM] unsigned int 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2244 ;;      Params:         2       0       0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0
  2247 ;;      Totals:         2       0       0       0       0       0       0
  2248 ;;Total ram usage:        2 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 1
  2251 ;; This function calls:
  2252 ;;		___aldiv
  2253 ;; This function is called by:
  2254 ;;		_pwmInit
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text5
  2259  002502                     __ptext5:
  2260                           	callstack 0
  2261  002502                     _pwmFrequency:
  2262                           	callstack 28
  2263  002502                     
  2264                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2265  002502  0E48               	movlw	72
  2266  002504  6E1F               	movwf	___aldiv@dividend^0,c
  2267  002506  0EE8               	movlw	232
  2268  002508  6E20               	movwf	(___aldiv@dividend+1)^0,c
  2269  00250A  0E01               	movlw	1
  2270  00250C  6E21               	movwf	(___aldiv@dividend+2)^0,c
  2271  00250E  0E00               	movlw	0
  2272  002510  6E22               	movwf	(___aldiv@dividend+3)^0,c
  2273  002512  C02D  F023         	movff	pwmFrequency@freq,___aldiv@divisor
  2274  002516  C02E  F024         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2275  00251A  6A25               	clrf	(___aldiv@divisor+2)^0,c
  2276  00251C  6A26               	clrf	(___aldiv@divisor+3)^0,c
  2277  00251E  EC62  F00D         	call	___aldiv	;wreg free
  2278  002522  041F               	decf	?___aldiv^0,w,c
  2279  002524  6ECB               	movwf	203,c	;volatile
  2280  002526  0012               	return		;funcret
  2281  002528                     __end_of_pwmFrequency:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function ___aldiv *****************
  2285 ;; Defined at:
  2286 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  dividend        4    0[COMRAM] long 
  2289 ;;  divisor         4    4[COMRAM] long 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  quotient        4   10[COMRAM] long 
  2292 ;;  sign            1    9[COMRAM] unsigned char 
  2293 ;;  counter         1    8[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  4    0[COMRAM] long 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2303 ;;      Params:         8       0       0       0       0       0       0
  2304 ;;      Locals:         6       0       0       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0
  2306 ;;      Totals:        14       0       0       0       0       0       0
  2307 ;;Total ram usage:       14 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_pwmFrequency
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text6
  2317  001AC4                     __ptext6:
  2318                           	callstack 0
  2319  001AC4                     ___aldiv:
  2320                           	callstack 28
  2321  001AC4  0E00               	movlw	0
  2322  001AC6  6E28               	movwf	___aldiv@sign^0,c
  2323  001AC8  BE26               	btfsc	(___aldiv@divisor+3)^0,7,c
  2324  001ACA  EF6B  F00D         	goto	u2230
  2325  001ACE  EF69  F00D         	goto	u2231
  2326  001AD2                     u2231:
  2327  001AD2  EF75  F00D         	goto	l2267
  2328  001AD6                     u2230:
  2329  001AD6  1E26               	comf	(___aldiv@divisor+3)^0,f,c
  2330  001AD8  1E25               	comf	(___aldiv@divisor+2)^0,f,c
  2331  001ADA  1E24               	comf	(___aldiv@divisor+1)^0,f,c
  2332  001ADC  6C23               	negf	___aldiv@divisor^0,c
  2333  001ADE  0E00               	movlw	0
  2334  001AE0  2224               	addwfc	(___aldiv@divisor+1)^0,f,c
  2335  001AE2  2225               	addwfc	(___aldiv@divisor+2)^0,f,c
  2336  001AE4  2226               	addwfc	(___aldiv@divisor+3)^0,f,c
  2337  001AE6  0E01               	movlw	1
  2338  001AE8  6E28               	movwf	___aldiv@sign^0,c
  2339  001AEA                     l2267:
  2340  001AEA  BE22               	btfsc	(___aldiv@dividend+3)^0,7,c
  2341  001AEC  EF7C  F00D         	goto	u2240
  2342  001AF0  EF7A  F00D         	goto	u2241
  2343  001AF4                     u2241:
  2344  001AF4  EF86  F00D         	goto	l2273
  2345  001AF8                     u2240:
  2346  001AF8  1E22               	comf	(___aldiv@dividend+3)^0,f,c
  2347  001AFA  1E21               	comf	(___aldiv@dividend+2)^0,f,c
  2348  001AFC  1E20               	comf	(___aldiv@dividend+1)^0,f,c
  2349  001AFE  6C1F               	negf	___aldiv@dividend^0,c
  2350  001B00  0E00               	movlw	0
  2351  001B02  2220               	addwfc	(___aldiv@dividend+1)^0,f,c
  2352  001B04  2221               	addwfc	(___aldiv@dividend+2)^0,f,c
  2353  001B06  2222               	addwfc	(___aldiv@dividend+3)^0,f,c
  2354  001B08  0E01               	movlw	1
  2355  001B0A  1A28               	xorwf	___aldiv@sign^0,f,c
  2356  001B0C                     l2273:
  2357  001B0C  0E00               	movlw	0
  2358  001B0E  6E29               	movwf	___aldiv@quotient^0,c
  2359  001B10  0E00               	movlw	0
  2360  001B12  6E2A               	movwf	(___aldiv@quotient+1)^0,c
  2361  001B14  0E00               	movlw	0
  2362  001B16  6E2B               	movwf	(___aldiv@quotient+2)^0,c
  2363  001B18  0E00               	movlw	0
  2364  001B1A  6E2C               	movwf	(___aldiv@quotient+3)^0,c
  2365  001B1C  5023               	movf	___aldiv@divisor^0,w,c
  2366  001B1E  1024               	iorwf	(___aldiv@divisor+1)^0,w,c
  2367  001B20  1025               	iorwf	(___aldiv@divisor+2)^0,w,c
  2368  001B22  1026               	iorwf	(___aldiv@divisor+3)^0,w,c
  2369  001B24  B4D8               	btfsc	status,2,c
  2370  001B26  EF97  F00D         	goto	u2251
  2371  001B2A  EF99  F00D         	goto	u2250
  2372  001B2E                     u2251:
  2373  001B2E  EFCF  F00D         	goto	l2295
  2374  001B32                     u2250:
  2375  001B32  0E01               	movlw	1
  2376  001B34  6E27               	movwf	___aldiv@counter^0,c
  2377  001B36  EFA3  F00D         	goto	l2281
  2378  001B3A                     l2279:
  2379  001B3A  90D8               	bcf	status,0,c
  2380  001B3C  3623               	rlcf	___aldiv@divisor^0,f,c
  2381  001B3E  3624               	rlcf	(___aldiv@divisor+1)^0,f,c
  2382  001B40  3625               	rlcf	(___aldiv@divisor+2)^0,f,c
  2383  001B42  3626               	rlcf	(___aldiv@divisor+3)^0,f,c
  2384  001B44  2A27               	incf	___aldiv@counter^0,f,c
  2385  001B46                     l2281:
  2386  001B46  AE26               	btfss	(___aldiv@divisor+3)^0,7,c
  2387  001B48  EFA8  F00D         	goto	u2261
  2388  001B4C  EFAA  F00D         	goto	u2260
  2389  001B50                     u2261:
  2390  001B50  EF9D  F00D         	goto	l2279
  2391  001B54                     u2260:
  2392  001B54                     l2283:
  2393  001B54  90D8               	bcf	status,0,c
  2394  001B56  3629               	rlcf	___aldiv@quotient^0,f,c
  2395  001B58  362A               	rlcf	(___aldiv@quotient+1)^0,f,c
  2396  001B5A  362B               	rlcf	(___aldiv@quotient+2)^0,f,c
  2397  001B5C  362C               	rlcf	(___aldiv@quotient+3)^0,f,c
  2398  001B5E  5023               	movf	___aldiv@divisor^0,w,c
  2399  001B60  5C1F               	subwf	___aldiv@dividend^0,w,c
  2400  001B62  5024               	movf	(___aldiv@divisor+1)^0,w,c
  2401  001B64  5820               	subwfb	(___aldiv@dividend+1)^0,w,c
  2402  001B66  5025               	movf	(___aldiv@divisor+2)^0,w,c
  2403  001B68  5821               	subwfb	(___aldiv@dividend+2)^0,w,c
  2404  001B6A  5026               	movf	(___aldiv@divisor+3)^0,w,c
  2405  001B6C  5822               	subwfb	(___aldiv@dividend+3)^0,w,c
  2406  001B6E  A0D8               	btfss	status,0,c
  2407  001B70  EFBC  F00D         	goto	u2271
  2408  001B74  EFBE  F00D         	goto	u2270
  2409  001B78                     u2271:
  2410  001B78  EFC7  F00D         	goto	l2291
  2411  001B7C                     u2270:
  2412  001B7C  5023               	movf	___aldiv@divisor^0,w,c
  2413  001B7E  5E1F               	subwf	___aldiv@dividend^0,f,c
  2414  001B80  5024               	movf	(___aldiv@divisor+1)^0,w,c
  2415  001B82  5A20               	subwfb	(___aldiv@dividend+1)^0,f,c
  2416  001B84  5025               	movf	(___aldiv@divisor+2)^0,w,c
  2417  001B86  5A21               	subwfb	(___aldiv@dividend+2)^0,f,c
  2418  001B88  5026               	movf	(___aldiv@divisor+3)^0,w,c
  2419  001B8A  5A22               	subwfb	(___aldiv@dividend+3)^0,f,c
  2420  001B8C  8029               	bsf	___aldiv@quotient^0,0,c
  2421  001B8E                     l2291:
  2422  001B8E  90D8               	bcf	status,0,c
  2423  001B90  3226               	rrcf	(___aldiv@divisor+3)^0,f,c
  2424  001B92  3225               	rrcf	(___aldiv@divisor+2)^0,f,c
  2425  001B94  3224               	rrcf	(___aldiv@divisor+1)^0,f,c
  2426  001B96  3223               	rrcf	___aldiv@divisor^0,f,c
  2427  001B98  2E27               	decfsz	___aldiv@counter^0,f,c
  2428  001B9A  EFAA  F00D         	goto	l2283
  2429  001B9E                     l2295:
  2430  001B9E  5028               	movf	___aldiv@sign^0,w,c
  2431  001BA0  B4D8               	btfsc	status,2,c
  2432  001BA2  EFD5  F00D         	goto	u2281
  2433  001BA6  EFD7  F00D         	goto	u2280
  2434  001BAA                     u2281:
  2435  001BAA  EFDF  F00D         	goto	l2299
  2436  001BAE                     u2280:
  2437  001BAE  1E2C               	comf	(___aldiv@quotient+3)^0,f,c
  2438  001BB0  1E2B               	comf	(___aldiv@quotient+2)^0,f,c
  2439  001BB2  1E2A               	comf	(___aldiv@quotient+1)^0,f,c
  2440  001BB4  6C29               	negf	___aldiv@quotient^0,c
  2441  001BB6  0E00               	movlw	0
  2442  001BB8  222A               	addwfc	(___aldiv@quotient+1)^0,f,c
  2443  001BBA  222B               	addwfc	(___aldiv@quotient+2)^0,f,c
  2444  001BBC  222C               	addwfc	(___aldiv@quotient+3)^0,f,c
  2445  001BBE                     l2299:
  2446  001BBE  C029  F01F         	movff	___aldiv@quotient,?___aldiv
  2447  001BC2  C02A  F020         	movff	___aldiv@quotient+1,?___aldiv+1
  2448  001BC6  C02B  F021         	movff	___aldiv@quotient+2,?___aldiv+2
  2449  001BCA  C02C  F022         	movff	___aldiv@quotient+3,?___aldiv+3
  2450  001BCE  0012               	return		;funcret
  2451  001BD0                     __end_of___aldiv:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _msg *****************
  2455 ;; Defined at:
  2456 ;;		line 51 in file "main.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2470 ;;      Params:         0       0       0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0
  2472 ;;      Temps:          2       0       0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 6
  2477 ;; This function calls:
  2478 ;;		_lcdString
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text7
  2485  001BD0                     __ptext7:
  2486                           	callstack 0
  2487  001BD0                     _msg:
  2488                           	callstack 24
  2489  001BD0                     
  2490                           ;main.c: 53:     switch (nMensagem)
  2491  001BD0  EF3A  F00E         	goto	l2543
  2492  001BD4                     l2521:
  2493                           
  2494                           ;main.c: 56:             lcdString("INICIO");
  2495  001BD4  0EBE               	movlw	low STR_1
  2496  001BD6  6E2D               	movwf	lcdString@msg^0,c
  2497  001BD8  0E06               	movlw	high STR_1
  2498  001BDA  6E2E               	movwf	(lcdString@msg+1)^0,c
  2499  001BDC  EC9A  F00F         	call	_lcdString	;wreg free
  2500                           
  2501                           ;main.c: 57:             break;
  2502  001BE0  EF6B  F00E         	goto	l353
  2503  001BE4                     l2523:
  2504                           
  2505                           ;main.c: 59:             lcdString(" Potencia\n Geladeira");
  2506  001BE4  0E3C               	movlw	low STR_2
  2507  001BE6  6E2D               	movwf	lcdString@msg^0,c
  2508  001BE8  0E06               	movlw	high STR_2
  2509  001BEA  6E2E               	movwf	(lcdString@msg+1)^0,c
  2510  001BEC  EC9A  F00F         	call	_lcdString	;wreg free
  2511                           
  2512                           ;main.c: 60:             break;
  2513  001BF0  EF6B  F00E         	goto	l353
  2514  001BF4                     l2525:
  2515                           
  2516                           ;main.c: 62:             lcdString(" Potencia\n Freezer");
  2517  001BF4  0E77               	movlw	low STR_3
  2518  001BF6  6E2D               	movwf	lcdString@msg^0,c
  2519  001BF8  0E06               	movlw	high STR_3
  2520  001BFA  6E2E               	movwf	(lcdString@msg+1)^0,c
  2521  001BFC  EC9A  F00F         	call	_lcdString	;wreg free
  2522                           
  2523                           ;main.c: 63:             break;
  2524  001C00  EF6B  F00E         	goto	l353
  2525  001C04                     l2527:
  2526                           
  2527                           ;main.c: 65:             lcdString(" Timer\n Geladeira");
  2528  001C04  0E9C               	movlw	low STR_4
  2529  001C06  6E2D               	movwf	lcdString@msg^0,c
  2530  001C08  0E06               	movlw	high STR_4
  2531  001C0A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2532  001C0C  EC9A  F00F         	call	_lcdString	;wreg free
  2533                           
  2534                           ;main.c: 66:             break;
  2535  001C10  EF6B  F00E         	goto	l353
  2536  001C14                     l2529:
  2537                           
  2538                           ;main.c: 68:             lcdString(" Timer\n Freezer");
  2539  001C14  0EAE               	movlw	low STR_5
  2540  001C16  6E2D               	movwf	lcdString@msg^0,c
  2541  001C18  0E06               	movlw	high STR_5
  2542  001C1A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2543  001C1C  EC9A  F00F         	call	_lcdString	;wreg free
  2544                           
  2545                           ;main.c: 69:             break;
  2546  001C20  EF6B  F00E         	goto	l353
  2547  001C24                     l2531:
  2548                           
  2549                           ;main.c: 71:             lcdString(" Defina o tempo:\n(potenciometro)");
  2550  001C24  0E1B               	movlw	low STR_6
  2551  001C26  6E2D               	movwf	lcdString@msg^0,c
  2552  001C28  0E06               	movlw	high STR_6
  2553  001C2A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2554  001C2C  EC9A  F00F         	call	_lcdString	;wreg free
  2555                           
  2556                           ;main.c: 72:             break;
  2557  001C30  EF6B  F00E         	goto	l353
  2558  001C34                     l2533:
  2559                           
  2560                           ;main.c: 74:             lcdString(" Potencia:\n MINIMO");
  2561  001C34  0E51               	movlw	low STR_7
  2562  001C36  6E2D               	movwf	lcdString@msg^0,c
  2563  001C38  0E06               	movlw	high STR_7
  2564  001C3A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2565  001C3C  EC9A  F00F         	call	_lcdString	;wreg free
  2566                           
  2567                           ;main.c: 75:             break;
  2568  001C40  EF6B  F00E         	goto	l353
  2569  001C44                     l2535:
  2570                           
  2571                           ;main.c: 77:             lcdString(" Potencia:\n MEDIO");
  2572  001C44  0E8A               	movlw	low STR_8
  2573  001C46  6E2D               	movwf	lcdString@msg^0,c
  2574  001C48  0E06               	movlw	high STR_8
  2575  001C4A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2576  001C4C  EC9A  F00F         	call	_lcdString	;wreg free
  2577                           
  2578                           ;main.c: 78:             break;
  2579  001C50  EF6B  F00E         	goto	l353
  2580  001C54                     l2537:
  2581                           
  2582                           ;main.c: 80:             lcdString(" Potencia:\n MAXIMO");
  2583  001C54  0E64               	movlw	low STR_9
  2584  001C56  6E2D               	movwf	lcdString@msg^0,c
  2585  001C58  0E06               	movlw	high STR_9
  2586  001C5A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2587  001C5C  EC9A  F00F         	call	_lcdString	;wreg free
  2588                           
  2589                           ;main.c: 81:             break;
  2590  001C60  EF6B  F00E         	goto	l353
  2591  001C64                     l2539:
  2592                           
  2593                           ;main.c: 83:             lcdString("");
  2594  001C64  0E3B               	movlw	low (STR_6+32)
  2595  001C66  6E2D               	movwf	lcdString@msg^0,c
  2596  001C68  0E06               	movlw	high (STR_6+32)
  2597  001C6A  6E2E               	movwf	(lcdString@msg+1)^0,c
  2598  001C6C  EC9A  F00F         	call	_lcdString	;wreg free
  2599                           
  2600                           ;main.c: 84:             break;
  2601  001C70  EF6B  F00E         	goto	l353
  2602  001C74                     l2543:
  2603  001C74  5014               	movf	_nMensagem^0,w,c
  2604  001C76  6E33               	movwf	??_msg^0,c
  2605  001C78  6A34               	clrf	(??_msg+1)^0,c
  2606                           
  2607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2608                           ; Switch size 1, requested type "simple"
  2609                           ; Number of cases is 1, Range of values is 0 to 0
  2610                           ; switch strategies available:
  2611                           ; Name         Instructions Cycles
  2612                           ; simple_byte            4     3 (average)
  2613                           ;	Chosen strategy is simple_byte
  2614  001C7A  5034               	movf	(??_msg+1)^0,w,c
  2615  001C7C  0A00               	xorlw	0	; case 0
  2616  001C7E  B4D8               	btfsc	status,2,c
  2617  001C80  EF44  F00E         	goto	l3063
  2618  001C84  EF32  F00E         	goto	l2539
  2619  001C88                     l3063:
  2620                           
  2621                           ; Switch size 1, requested type "simple"
  2622                           ; Number of cases is 9, Range of values is 0 to 8
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte           28    15 (average)
  2626                           ;	Chosen strategy is simple_byte
  2627  001C88  5033               	movf	??_msg^0,w,c
  2628  001C8A  0A00               	xorlw	0	; case 0
  2629  001C8C  B4D8               	btfsc	status,2,c
  2630  001C8E  EFEA  F00D         	goto	l2521
  2631  001C92  0A01               	xorlw	1	; case 1
  2632  001C94  B4D8               	btfsc	status,2,c
  2633  001C96  EFF2  F00D         	goto	l2523
  2634  001C9A  0A03               	xorlw	3	; case 2
  2635  001C9C  B4D8               	btfsc	status,2,c
  2636  001C9E  EFFA  F00D         	goto	l2525
  2637  001CA2  0A01               	xorlw	1	; case 3
  2638  001CA4  B4D8               	btfsc	status,2,c
  2639  001CA6  EF02  F00E         	goto	l2527
  2640  001CAA  0A07               	xorlw	7	; case 4
  2641  001CAC  B4D8               	btfsc	status,2,c
  2642  001CAE  EF0A  F00E         	goto	l2529
  2643  001CB2  0A01               	xorlw	1	; case 5
  2644  001CB4  B4D8               	btfsc	status,2,c
  2645  001CB6  EF12  F00E         	goto	l2531
  2646  001CBA  0A03               	xorlw	3	; case 6
  2647  001CBC  B4D8               	btfsc	status,2,c
  2648  001CBE  EF1A  F00E         	goto	l2533
  2649  001CC2  0A01               	xorlw	1	; case 7
  2650  001CC4  B4D8               	btfsc	status,2,c
  2651  001CC6  EF22  F00E         	goto	l2535
  2652  001CCA  0A0F               	xorlw	15	; case 8
  2653  001CCC  B4D8               	btfsc	status,2,c
  2654  001CCE  EF2A  F00E         	goto	l2537
  2655  001CD2  EF32  F00E         	goto	l2539
  2656  001CD6                     l353:
  2657  001CD6  0012               	return		;funcret
  2658  001CD8                     __end_of_msg:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function _lcdString *****************
  2662 ;; Defined at:
  2663 ;;		line 65 in file "lcd.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2666 ;;		 -> STR_10(1), STR_9(19), STR_8(18), STR_7(19), 
  2667 ;;		 -> STR_6(33), STR_5(16), STR_4(18), STR_3(19), 
  2668 ;;		 -> STR_2(21), STR_1(7), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  i               2   18[COMRAM] int 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2680 ;;      Params:         2       0       0       0       0       0       0
  2681 ;;      Locals:         2       0       0       0       0       0       0
  2682 ;;      Temps:          2       0       0       0       0       0       0
  2683 ;;      Totals:         6       0       0       0       0       0       0
  2684 ;;Total ram usage:        6 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 5
  2687 ;; This function calls:
  2688 ;;		_lcdChar
  2689 ;;		_lcdCommand
  2690 ;; This function is called by:
  2691 ;;		_msg
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text8
  2696  001F34                     __ptext8:
  2697                           	callstack 0
  2698  001F34                     _lcdString:
  2699                           	callstack 24
  2700  001F34                     
  2701                           ;lcd.c: 66:     int i = 0;
  2702  001F34  0E00               	movlw	0
  2703  001F36  6E32               	movwf	(lcdString@i+1)^0,c
  2704  001F38  0E00               	movlw	0
  2705  001F3A  6E31               	movwf	lcdString@i^0,c
  2706                           
  2707                           ;lcd.c: 67:     while (msg[i] != 0) {
  2708  001F3C  EFC9  F00F         	goto	l2379
  2709  001F40                     l2369:
  2710                           
  2711                           ;lcd.c: 69:         if (msg[i] == '\n') {
  2712  001F40  5031               	movf	lcdString@i^0,w,c
  2713  001F42  242D               	addwf	lcdString@msg^0,w,c
  2714  001F44  6E2F               	movwf	??_lcdString^0,c
  2715  001F46  5032               	movf	(lcdString@i+1)^0,w,c
  2716  001F48  202E               	addwfc	(lcdString@msg+1)^0,w,c
  2717  001F4A  6E30               	movwf	(??_lcdString+1)^0,c
  2718  001F4C  C02F  FFF6         	movff	??_lcdString,tblptrl
  2719  001F50  C030  FFF7         	movff	??_lcdString+1,tblptrh
  2720  001F54                     	if	0	;tblptru may be non-zero
  2721  001F54                     	endif
  2722  001F54                     	if	0	;tblptru may be non-zero
  2723  001F54                     	endif
  2724  001F54  0008               	tblrd		*
  2725  001F56  50F5               	movf	tablat,w,c
  2726  001F58  0A0A               	xorlw	10
  2727  001F5A  A4D8               	btfss	status,2,c
  2728  001F5C  EFB2  F00F         	goto	u2421
  2729  001F60  EFB4  F00F         	goto	u2420
  2730  001F64                     u2421:
  2731  001F64  EFB9  F00F         	goto	l2375
  2732  001F68                     u2420:
  2733  001F68                     
  2734                           ;lcd.c: 70:             lcdCommand(0xC0);
  2735  001F68  0EC0               	movlw	192
  2736  001F6A  ECC9  F012         	call	_lcdCommand
  2737  001F6E                     
  2738                           ;lcd.c: 71:             i++;
  2739  001F6E  4A31               	infsnz	lcdString@i^0,f,c
  2740  001F70  2A32               	incf	(lcdString@i+1)^0,f,c
  2741  001F72                     l2375:
  2742                           
  2743                           ;lcd.c: 73:         lcdChar(msg[i]);
  2744  001F72  5031               	movf	lcdString@i^0,w,c
  2745  001F74  242D               	addwf	lcdString@msg^0,w,c
  2746  001F76  6E2F               	movwf	??_lcdString^0,c
  2747  001F78  5032               	movf	(lcdString@i+1)^0,w,c
  2748  001F7A  202E               	addwfc	(lcdString@msg+1)^0,w,c
  2749  001F7C  6E30               	movwf	(??_lcdString+1)^0,c
  2750  001F7E  C02F  FFF6         	movff	??_lcdString,tblptrl
  2751  001F82  C030  FFF7         	movff	??_lcdString+1,tblptrh
  2752  001F86                     	if	0	;tblptru may be non-zero
  2753  001F86                     	endif
  2754  001F86                     	if	0	;tblptru may be non-zero
  2755  001F86                     	endif
  2756  001F86  0008               	tblrd		*
  2757  001F88  50F5               	movf	tablat,w,c
  2758  001F8A  ECBA  F012         	call	_lcdChar
  2759  001F8E                     
  2760                           ;lcd.c: 74:         i++;
  2761  001F8E  4A31               	infsnz	lcdString@i^0,f,c
  2762  001F90  2A32               	incf	(lcdString@i+1)^0,f,c
  2763  001F92                     l2379:
  2764                           
  2765                           ;lcd.c: 67:     while (msg[i] != 0) {
  2766  001F92  5031               	movf	lcdString@i^0,w,c
  2767  001F94  242D               	addwf	lcdString@msg^0,w,c
  2768  001F96  6E2F               	movwf	??_lcdString^0,c
  2769  001F98  5032               	movf	(lcdString@i+1)^0,w,c
  2770  001F9A  202E               	addwfc	(lcdString@msg+1)^0,w,c
  2771  001F9C  6E30               	movwf	(??_lcdString+1)^0,c
  2772  001F9E  C02F  FFF6         	movff	??_lcdString,tblptrl
  2773  001FA2  C030  FFF7         	movff	??_lcdString+1,tblptrh
  2774  001FA6                     	if	0	;tblptru may be non-zero
  2775  001FA6                     	endif
  2776  001FA6                     	if	0	;tblptru may be non-zero
  2777  001FA6                     	endif
  2778  001FA6  0008               	tblrd		*
  2779  001FA8  50F5               	movf	tablat,w,c
  2780  001FAA  0900               	iorlw	0
  2781  001FAC  A4D8               	btfss	status,2,c
  2782  001FAE  EFDB  F00F         	goto	u2431
  2783  001FB2  EFDD  F00F         	goto	u2430
  2784  001FB6                     u2431:
  2785  001FB6  EFA0  F00F         	goto	l2369
  2786  001FBA                     u2430:
  2787  001FBA  0012               	return		;funcret
  2788  001FBC                     __end_of_lcdString:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _lcdChar *****************
  2792 ;; Defined at:
  2793 ;;		line 59 in file "lcd.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  value           1    wreg     unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  value           1   13[COMRAM] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2807 ;;      Params:         0       0       0       0       0       0       0
  2808 ;;      Locals:         1       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0
  2810 ;;      Totals:         1       0       0       0       0       0       0
  2811 ;;Total ram usage:        1 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 4
  2814 ;; This function calls:
  2815 ;;		_delayMicro
  2816 ;;		_pushByte
  2817 ;; This function is called by:
  2818 ;;		_lcdString
  2819 ;;		_lcdNumber
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text9
  2824  002574                     __ptext9:
  2825                           	callstack 0
  2826  002574                     _lcdChar:
  2827                           	callstack 24
  2828                           
  2829                           ;incstack = 0
  2830                           ;lcdChar@value stored from wreg
  2831  002574  6E2C               	movwf	lcdChar@value^0,c
  2832  002576                     
  2833                           ;lcd.c: 60:     pushByte(value, 1);
  2834  002576  0E00               	movlw	0
  2835  002578  6E29               	movwf	(pushByte@rs+1)^0,c
  2836  00257A  0E01               	movlw	1
  2837  00257C  6E28               	movwf	pushByte@rs^0,c
  2838  00257E  502C               	movf	lcdChar@value^0,w,c
  2839  002580  EC92  F010         	call	_pushByte
  2840  002584                     
  2841                           ;lcd.c: 61:     delayMicro(80);
  2842  002584  0E00               	movlw	0
  2843  002586  6E20               	movwf	(delayMicro@a+1)^0,c
  2844  002588  0E50               	movlw	80
  2845  00258A  6E1F               	movwf	delayMicro@a^0,c
  2846  00258C  ECFC  F012         	call	_delayMicro	;wreg free
  2847  002590  0012               	return		;funcret
  2848  002592                     __end_of_lcdChar:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _lcdInit *****************
  2852 ;; Defined at:
  2853 ;;		line 87 in file "lcd.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2867 ;;      Params:         0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 5
  2874 ;; This function calls:
  2875 ;;		_delayMicro
  2876 ;;		_delayMili
  2877 ;;		_lcdCommand
  2878 ;;		_pinMode
  2879 ;;		_pushNibble
  2880 ;;		_soInit
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text10
  2887  001DDC                     __ptext10:
  2888                           	callstack 0
  2889  001DDC                     _lcdInit:
  2890                           	callstack 25
  2891  001DDC                     
  2892                           ;lcd.c: 88:     pinMode(PIN_D4, 0);
  2893  001DDC  0E00               	movlw	0
  2894  001DDE  6E20               	movwf	(pinMode@pin+1)^0,c
  2895  001DE0  0E1C               	movlw	28
  2896  001DE2  6E1F               	movwf	pinMode@pin^0,c
  2897  001DE4  0E00               	movlw	0
  2898  001DE6  6E22               	movwf	(pinMode@type+1)^0,c
  2899  001DE8  0E00               	movlw	0
  2900  001DEA  6E21               	movwf	pinMode@type^0,c
  2901  001DEC  EC35  F00A         	call	_pinMode	;wreg free
  2902                           
  2903                           ;lcd.c: 89:     pinMode(PIN_D5, 0);
  2904  001DF0  0E00               	movlw	0
  2905  001DF2  6E20               	movwf	(pinMode@pin+1)^0,c
  2906  001DF4  0E1D               	movlw	29
  2907  001DF6  6E1F               	movwf	pinMode@pin^0,c
  2908  001DF8  0E00               	movlw	0
  2909  001DFA  6E22               	movwf	(pinMode@type+1)^0,c
  2910  001DFC  0E00               	movlw	0
  2911  001DFE  6E21               	movwf	pinMode@type^0,c
  2912  001E00  EC35  F00A         	call	_pinMode	;wreg free
  2913                           
  2914                           ;lcd.c: 90:     soInit();
  2915  001E04  ECD7  F011         	call	_soInit	;wreg free
  2916                           
  2917                           ;lcd.c: 91:     delayMili(15);
  2918  001E08  0E00               	movlw	0
  2919  001E0A  6E20               	movwf	(delayMili@a+1)^0,c
  2920  001E0C  0E0F               	movlw	15
  2921  001E0E  6E1F               	movwf	delayMili@a^0,c
  2922  001E10  EC2A  F012         	call	_delayMili	;wreg free
  2923                           
  2924                           ;lcd.c: 93:     pushNibble(0x03, 0);
  2925  001E14  0E00               	movlw	0
  2926  001E16  6E29               	movwf	(pushNibble@rs+1)^0,c
  2927  001E18  0E00               	movlw	0
  2928  001E1A  6E28               	movwf	pushNibble@rs^0,c
  2929  001E1C  0E03               	movlw	3
  2930  001E1E  EC94  F012         	call	_pushNibble
  2931                           
  2932                           ;lcd.c: 94:     delayMili(5);
  2933  001E22  0E00               	movlw	0
  2934  001E24  6E20               	movwf	(delayMili@a+1)^0,c
  2935  001E26  0E05               	movlw	5
  2936  001E28  6E1F               	movwf	delayMili@a^0,c
  2937  001E2A  EC2A  F012         	call	_delayMili	;wreg free
  2938                           
  2939                           ;lcd.c: 95:     pushNibble(0x03, 0);
  2940  001E2E  0E00               	movlw	0
  2941  001E30  6E29               	movwf	(pushNibble@rs+1)^0,c
  2942  001E32  0E00               	movlw	0
  2943  001E34  6E28               	movwf	pushNibble@rs^0,c
  2944  001E36  0E03               	movlw	3
  2945  001E38  EC94  F012         	call	_pushNibble
  2946  001E3C                     
  2947                           ;lcd.c: 96:     delayMicro(160);
  2948  001E3C  0E00               	movlw	0
  2949  001E3E  6E20               	movwf	(delayMicro@a+1)^0,c
  2950  001E40  0EA0               	movlw	160
  2951  001E42  6E1F               	movwf	delayMicro@a^0,c
  2952  001E44  ECFC  F012         	call	_delayMicro	;wreg free
  2953  001E48                     
  2954                           ;lcd.c: 97:     pushNibble(0x03, 0);
  2955  001E48  0E00               	movlw	0
  2956  001E4A  6E29               	movwf	(pushNibble@rs+1)^0,c
  2957  001E4C  0E00               	movlw	0
  2958  001E4E  6E28               	movwf	pushNibble@rs^0,c
  2959  001E50  0E03               	movlw	3
  2960  001E52  EC94  F012         	call	_pushNibble
  2961                           
  2962                           ;lcd.c: 98:     delayMicro(160);
  2963  001E56  0E00               	movlw	0
  2964  001E58  6E20               	movwf	(delayMicro@a+1)^0,c
  2965  001E5A  0EA0               	movlw	160
  2966  001E5C  6E1F               	movwf	delayMicro@a^0,c
  2967  001E5E  ECFC  F012         	call	_delayMicro	;wreg free
  2968  001E62                     
  2969                           ;lcd.c: 100:     pushNibble(0x02, 0);
  2970  001E62  0E00               	movlw	0
  2971  001E64  6E29               	movwf	(pushNibble@rs+1)^0,c
  2972  001E66  0E00               	movlw	0
  2973  001E68  6E28               	movwf	pushNibble@rs^0,c
  2974  001E6A  0E02               	movlw	2
  2975  001E6C  EC94  F012         	call	_pushNibble
  2976  001E70                     
  2977                           ;lcd.c: 101:     delayMili(10);
  2978  001E70  0E00               	movlw	0
  2979  001E72  6E20               	movwf	(delayMili@a+1)^0,c
  2980  001E74  0E0A               	movlw	10
  2981  001E76  6E1F               	movwf	delayMili@a^0,c
  2982  001E78  EC2A  F012         	call	_delayMili	;wreg free
  2983  001E7C                     
  2984                           ;lcd.c: 103:     lcdCommand(0x28);
  2985  001E7C  0E28               	movlw	40
  2986  001E7E  ECC9  F012         	call	_lcdCommand
  2987  001E82                     
  2988                           ;lcd.c: 104:     lcdCommand(0x08 + 0x04);
  2989  001E82  0E0C               	movlw	12
  2990  001E84  ECC9  F012         	call	_lcdCommand
  2991  001E88                     
  2992                           ;lcd.c: 105:     lcdCommand(0x01);
  2993  001E88  0E01               	movlw	1
  2994  001E8A  ECC9  F012         	call	_lcdCommand
  2995  001E8E  0012               	return		;funcret
  2996  001E90                     __end_of_lcdInit:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _pushNibble *****************
  3000 ;; Defined at:
  3001 ;;		line 28 in file "lcd.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  value           1    wreg     unsigned char 
  3004 ;;  rs              2    9[COMRAM] int 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  value           1   11[COMRAM] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3016 ;;      Params:         2       0       0       0       0       0       0
  3017 ;;      Locals:         1       0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0
  3019 ;;      Totals:         3       0       0       0       0       0       0
  3020 ;;Total ram usage:        3 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 3
  3023 ;; This function calls:
  3024 ;;		_digitalWrite
  3025 ;;		_pulseEnablePin
  3026 ;;		_soWrite
  3027 ;; This function is called by:
  3028 ;;		_lcdInit
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text11
  3033  002528                     __ptext11:
  3034                           	callstack 0
  3035  002528                     _pushNibble:
  3036                           	callstack 26
  3037                           
  3038                           ;incstack = 0
  3039                           ;pushNibble@value stored from wreg
  3040  002528  6E2A               	movwf	pushNibble@value^0,c
  3041  00252A                     
  3042                           ;lcd.c: 29:     soWrite(value);
  3043  00252A  C02A  F025         	movff	pushNibble@value,soWrite@value
  3044  00252E  6A26               	clrf	(soWrite@value+1)^0,c
  3045  002530  EC6B  F011         	call	_soWrite	;wreg free
  3046                           
  3047                           ;lcd.c: 30:     digitalWrite(PIN_D5, rs);
  3048  002534  0E00               	movlw	0
  3049  002536  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3050  002538  0E1D               	movlw	29
  3051  00253A  6E1F               	movwf	digitalWrite@pin^0,c
  3052  00253C  C028  F021         	movff	pushNibble@rs,digitalWrite@value
  3053  002540  C029  F022         	movff	pushNibble@rs+1,digitalWrite@value+1
  3054  002544  EC0E  F009         	call	_digitalWrite	;wreg free
  3055                           
  3056                           ;lcd.c: 31:     pulseEnablePin();
  3057  002548  ECB6  F011         	call	_pulseEnablePin	;wreg free
  3058  00254C  0012               	return		;funcret
  3059  00254E                     __end_of_pushNibble:
  3060                           	callstack 0
  3061                           
  3062 ;; *************** function _lcdCommand *****************
  3063 ;; Defined at:
  3064 ;;		line 45 in file "lcd.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  value           1    wreg     unsigned char 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  value           1   13[COMRAM] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3078 ;;      Params:         0       0       0       0       0       0       0
  3079 ;;      Locals:         1       0       0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0
  3081 ;;      Totals:         1       0       0       0       0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 4
  3085 ;; This function calls:
  3086 ;;		_delayMili
  3087 ;;		_pushByte
  3088 ;; This function is called by:
  3089 ;;		_lcdString
  3090 ;;		_lcdInit
  3091 ;;		_main
  3092 ;;		_lcdPosition
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text12
  3097  002592                     __ptext12:
  3098                           	callstack 0
  3099  002592                     _lcdCommand:
  3100                           	callstack 24
  3101                           
  3102                           ;incstack = 0
  3103                           ;lcdCommand@value stored from wreg
  3104  002592  6E2C               	movwf	lcdCommand@value^0,c
  3105  002594                     
  3106                           ;lcd.c: 46:     pushByte(value, 0);
  3107  002594  0E00               	movlw	0
  3108  002596  6E29               	movwf	(pushByte@rs+1)^0,c
  3109  002598  0E00               	movlw	0
  3110  00259A  6E28               	movwf	pushByte@rs^0,c
  3111  00259C  502C               	movf	lcdCommand@value^0,w,c
  3112  00259E  EC92  F010         	call	_pushByte
  3113                           
  3114                           ;lcd.c: 47:     delayMili(2);
  3115  0025A2  0E00               	movlw	0
  3116  0025A4  6E20               	movwf	(delayMili@a+1)^0,c
  3117  0025A6  0E02               	movlw	2
  3118  0025A8  6E1F               	movwf	delayMili@a^0,c
  3119  0025AA  EC2A  F012         	call	_delayMili	;wreg free
  3120  0025AE  0012               	return		;funcret
  3121  0025B0                     __end_of_lcdCommand:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _pushByte *****************
  3125 ;; Defined at:
  3126 ;;		line 35 in file "lcd.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  value           1    wreg     unsigned char 
  3129 ;;  rs              2    9[COMRAM] int 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  value           1   12[COMRAM] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3141 ;;      Params:         2       0       0       0       0       0       0
  3142 ;;      Locals:         1       0       0       0       0       0       0
  3143 ;;      Temps:          1       0       0       0       0       0       0
  3144 ;;      Totals:         4       0       0       0       0       0       0
  3145 ;;Total ram usage:        4 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 3
  3148 ;; This function calls:
  3149 ;;		_digitalWrite
  3150 ;;		_pulseEnablePin
  3151 ;;		_soWrite
  3152 ;; This function is called by:
  3153 ;;		_lcdCommand
  3154 ;;		_lcdChar
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text13
  3159  002124                     __ptext13:
  3160                           	callstack 0
  3161  002124                     _pushByte:
  3162                           	callstack 24
  3163                           
  3164                           ;incstack = 0
  3165                           ;pushByte@value stored from wreg
  3166  002124  6E2B               	movwf	pushByte@value^0,c
  3167  002126                     
  3168                           ;lcd.c: 36:     soWrite(value >> 4);
  3169  002126  C02B  F02A         	movff	pushByte@value,??_pushByte
  3170  00212A  3A2A               	swapf	??_pushByte^0,f,c
  3171  00212C  0E0F               	movlw	15
  3172  00212E  162A               	andwf	??_pushByte^0,f,c
  3173  002130  502A               	movf	??_pushByte^0,w,c
  3174  002132  6E25               	movwf	soWrite@value^0,c
  3175  002134  6A26               	clrf	(soWrite@value+1)^0,c
  3176  002136  EC6B  F011         	call	_soWrite	;wreg free
  3177                           
  3178                           ;lcd.c: 37:     digitalWrite(PIN_D5, rs);
  3179  00213A  0E00               	movlw	0
  3180  00213C  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3181  00213E  0E1D               	movlw	29
  3182  002140  6E1F               	movwf	digitalWrite@pin^0,c
  3183  002142  C028  F021         	movff	pushByte@rs,digitalWrite@value
  3184  002146  C029  F022         	movff	pushByte@rs+1,digitalWrite@value+1
  3185  00214A  EC0E  F009         	call	_digitalWrite	;wreg free
  3186                           
  3187                           ;lcd.c: 38:     pulseEnablePin();
  3188  00214E  ECB6  F011         	call	_pulseEnablePin	;wreg free
  3189                           
  3190                           ;lcd.c: 40:     soWrite(value & 0x0F);
  3191  002152  C02B  F02A         	movff	pushByte@value,??_pushByte
  3192  002156  0E0F               	movlw	15
  3193  002158  162A               	andwf	??_pushByte^0,f,c
  3194  00215A  502A               	movf	??_pushByte^0,w,c
  3195  00215C  6E25               	movwf	soWrite@value^0,c
  3196  00215E  6A26               	clrf	(soWrite@value+1)^0,c
  3197  002160  EC6B  F011         	call	_soWrite	;wreg free
  3198                           
  3199                           ;lcd.c: 41:     digitalWrite(PIN_D5, rs);
  3200  002164  0E00               	movlw	0
  3201  002166  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3202  002168  0E1D               	movlw	29
  3203  00216A  6E1F               	movwf	digitalWrite@pin^0,c
  3204  00216C  C028  F021         	movff	pushByte@rs,digitalWrite@value
  3205  002170  C029  F022         	movff	pushByte@rs+1,digitalWrite@value+1
  3206  002174  EC0E  F009         	call	_digitalWrite	;wreg free
  3207                           
  3208                           ;lcd.c: 42:     pulseEnablePin();
  3209  002178  ECB6  F011         	call	_pulseEnablePin	;wreg free
  3210  00217C  0012               	return		;funcret
  3211  00217E                     __end_of_pushByte:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _pulseEnablePin *****************
  3215 ;; Defined at:
  3216 ;;		line 20 in file "lcd.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3230 ;;      Params:         0       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 1
  3237 ;; This function calls:
  3238 ;;		_delayMicro
  3239 ;;		_digitalWrite
  3240 ;; This function is called by:
  3241 ;;		_pushNibble
  3242 ;;		_pushByte
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text14
  3247  00236C                     __ptext14:
  3248                           	callstack 0
  3249  00236C                     _pulseEnablePin:
  3250                           	callstack 25
  3251  00236C                     
  3252                           ;lcd.c: 21:     digitalWrite(PIN_D4, 1);
  3253  00236C  0E00               	movlw	0
  3254  00236E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3255  002370  0E1C               	movlw	28
  3256  002372  6E1F               	movwf	digitalWrite@pin^0,c
  3257  002374  0E00               	movlw	0
  3258  002376  6E22               	movwf	(digitalWrite@value+1)^0,c
  3259  002378  0E01               	movlw	1
  3260  00237A  6E21               	movwf	digitalWrite@value^0,c
  3261  00237C  EC0E  F009         	call	_digitalWrite	;wreg free
  3262  002380                     
  3263                           ;lcd.c: 22:     delayMicro(5);
  3264  002380  0E00               	movlw	0
  3265  002382  6E20               	movwf	(delayMicro@a+1)^0,c
  3266  002384  0E05               	movlw	5
  3267  002386  6E1F               	movwf	delayMicro@a^0,c
  3268  002388  ECFC  F012         	call	_delayMicro	;wreg free
  3269  00238C                     
  3270                           ;lcd.c: 23:     digitalWrite(PIN_D4, 0);
  3271  00238C  0E00               	movlw	0
  3272  00238E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3273  002390  0E1C               	movlw	28
  3274  002392  6E1F               	movwf	digitalWrite@pin^0,c
  3275  002394  0E00               	movlw	0
  3276  002396  6E22               	movwf	(digitalWrite@value+1)^0,c
  3277  002398  0E00               	movlw	0
  3278  00239A  6E21               	movwf	digitalWrite@value^0,c
  3279  00239C  EC0E  F009         	call	_digitalWrite	;wreg free
  3280                           
  3281                           ;lcd.c: 24:     delayMicro(5);
  3282  0023A0  0E00               	movlw	0
  3283  0023A2  6E20               	movwf	(delayMicro@a+1)^0,c
  3284  0023A4  0E05               	movlw	5
  3285  0023A6  6E1F               	movwf	delayMicro@a^0,c
  3286  0023A8  ECFC  F012         	call	_delayMicro	;wreg free
  3287  0023AC  0012               	return		;funcret
  3288  0023AE                     __end_of_pulseEnablePin:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _delayMicro *****************
  3292 ;; Defined at:
  3293 ;;		line 5 in file "lcd.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  a               2    0[COMRAM] int 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  i               2    0        volatile int 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		None
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3307 ;;      Params:         2       0       0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0
  3310 ;;      Totals:         2       0       0       0       0       0       0
  3311 ;;Total ram usage:        2 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_pulseEnablePin
  3317 ;;		_lcdChar
  3318 ;;		_lcdInit
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text15
  3323  0025F8                     __ptext15:
  3324                           	callstack 0
  3325  0025F8                     _delayMicro:
  3326                           	callstack 25
  3327  0025F8  0012               	return		;funcret
  3328  0025FA                     __end_of_delayMicro:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _delayMili *****************
  3332 ;; Defined at:
  3333 ;;		line 11 in file "lcd.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  a               2    0[COMRAM] int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  i               2    3[COMRAM] volatile int 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3347 ;;      Params:         2       0       0       0       0       0       0
  3348 ;;      Locals:         2       0       0       0       0       0       0
  3349 ;;      Temps:          1       0       0       0       0       0       0
  3350 ;;      Totals:         5       0       0       0       0       0       0
  3351 ;;Total ram usage:        5 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_lcdCommand
  3357 ;;		_lcdInit
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text16
  3362  002454                     __ptext16:
  3363                           	callstack 0
  3364  002454                     _delayMili:
  3365                           	callstack 27
  3366  002454                     
  3367                           ;lcd.c: 12:     volatile int i;;lcd.c: 13:     for (i = 0; i < a; i++) {
  3368  002454  0E00               	movlw	0
  3369  002456  6E23               	movwf	(delayMili@i+1)^0,c	;volatile
  3370  002458  0E00               	movlw	0
  3371  00245A  6E22               	movwf	delayMili@i^0,c	;volatile
  3372  00245C  EF32  F012         	goto	l2203
  3373  002460                     l2201:
  3374                           
  3375                           ;lcd.c: 16:     }
  3376  002460  4A22               	infsnz	delayMili@i^0,f,c	;volatile
  3377  002462  2A23               	incf	(delayMili@i+1)^0,f,c	;volatile
  3378  002464                     l2203:
  3379  002464  501F               	movf	delayMili@a^0,w,c
  3380  002466  5C22               	subwf	delayMili@i^0,w,c	;volatile
  3381  002468  5023               	movf	(delayMili@i+1)^0,w,c	;volatile
  3382  00246A  0A80               	xorlw	128
  3383  00246C  6E21               	movwf	??_delayMili^0,c
  3384  00246E  5020               	movf	(delayMili@a+1)^0,w,c
  3385  002470  0A80               	xorlw	128
  3386  002472  5821               	subwfb	??_delayMili^0,w,c
  3387  002474  A0D8               	btfss	status,0,c
  3388  002476  EF3F  F012         	goto	u2021
  3389  00247A  EF41  F012         	goto	u2020
  3390  00247E                     u2021:
  3391  00247E  EF30  F012         	goto	l2201
  3392  002482                     u2020:
  3393  002482  0012               	return		;funcret
  3394  002484                     __end_of_delayMili:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _kpRead *****************
  3398 ;; Defined at:
  3399 ;;		line 14 in file "keypad.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2    0[COMRAM] unsigned int 
  3406 ;; Registers used:
  3407 ;;		None
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3413 ;;      Params:         2       0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0
  3416 ;;      Totals:         2       0       0       0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text17
  3427  0025E8                     __ptext17:
  3428                           	callstack 0
  3429  0025E8                     _kpRead:
  3430                           	callstack 30
  3431  0025E8                     
  3432                           ;keypad.c: 15:     return keys;
  3433  0025E8  C00F  F01F         	movff	_keys,?_kpRead
  3434  0025EC  C010  F020         	movff	_keys+1,?_kpRead+1
  3435  0025F0  0012               	return		;funcret
  3436  0025F2                     __end_of_kpRead:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _kpInit *****************
  3440 ;; Defined at:
  3441 ;;		line 54 in file "keypad.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 2
  3462 ;; This function calls:
  3463 ;;		_pinMode
  3464 ;;		_soInit
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text18
  3471  002422                     __ptext18:
  3472                           	callstack 0
  3473  002422                     _kpInit:
  3474                           	callstack 28
  3475  002422                     
  3476                           ;keypad.c: 55:   soInit();
  3477  002422  ECD7  F011         	call	_soInit	;wreg free
  3478                           
  3479                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3480  002426  0E00               	movlw	0
  3481  002428  6E20               	movwf	(pinMode@pin+1)^0,c
  3482  00242A  0E0A               	movlw	10
  3483  00242C  6E1F               	movwf	pinMode@pin^0,c
  3484  00242E  0E00               	movlw	0
  3485  002430  6E22               	movwf	(pinMode@type+1)^0,c
  3486  002432  0E01               	movlw	1
  3487  002434  6E21               	movwf	pinMode@type^0,c
  3488  002436  EC35  F00A         	call	_pinMode	;wreg free
  3489                           
  3490                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3491  00243A  0E00               	movlw	0
  3492  00243C  6E20               	movwf	(pinMode@pin+1)^0,c
  3493  00243E  0E09               	movlw	9
  3494  002440  6E1F               	movwf	pinMode@pin^0,c
  3495  002442  0E00               	movlw	0
  3496  002444  6E22               	movwf	(pinMode@type+1)^0,c
  3497  002446  0E01               	movlw	1
  3498  002448  6E21               	movwf	pinMode@type^0,c
  3499  00244A  EC35  F00A         	call	_pinMode	;wreg free
  3500  00244E                     
  3501                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3502  00244E  0E0C               	movlw	12
  3503  002450  6EC1               	movwf	193,c	;volatile
  3504  002452  0012               	return		;funcret
  3505  002454                     __end_of_kpInit:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _soInit *****************
  3509 ;; Defined at:
  3510 ;;		line 3 in file "so.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:         0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 1
  3531 ;; This function calls:
  3532 ;;		_pinMode
  3533 ;; This function is called by:
  3534 ;;		_kpInit
  3535 ;;		_lcdInit
  3536 ;;		_ssdInit
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text19
  3542  0023AE                     __ptext19:
  3543                           	callstack 0
  3544  0023AE                     _soInit:
  3545                           	callstack 28
  3546  0023AE                     
  3547                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3548  0023AE  0E00               	movlw	0
  3549  0023B0  6E20               	movwf	(pinMode@pin+1)^0,c
  3550  0023B2  0E1F               	movlw	31
  3551  0023B4  6E1F               	movwf	pinMode@pin^0,c
  3552  0023B6  0E00               	movlw	0
  3553  0023B8  6E22               	movwf	(pinMode@type+1)^0,c
  3554  0023BA  0E00               	movlw	0
  3555  0023BC  6E21               	movwf	pinMode@type^0,c
  3556  0023BE  EC35  F00A         	call	_pinMode	;wreg free
  3557                           
  3558                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3559  0023C2  0E00               	movlw	0
  3560  0023C4  6E20               	movwf	(pinMode@pin+1)^0,c
  3561  0023C6  0E08               	movlw	8
  3562  0023C8  6E1F               	movwf	pinMode@pin^0,c
  3563  0023CA  0E00               	movlw	0
  3564  0023CC  6E22               	movwf	(pinMode@type+1)^0,c
  3565  0023CE  0E00               	movlw	0
  3566  0023D0  6E21               	movwf	pinMode@type^0,c
  3567  0023D2  EC35  F00A         	call	_pinMode	;wreg free
  3568                           
  3569                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3570  0023D6  0E00               	movlw	0
  3571  0023D8  6E20               	movwf	(pinMode@pin+1)^0,c
  3572  0023DA  0E1E               	movlw	30
  3573  0023DC  6E1F               	movwf	pinMode@pin^0,c
  3574  0023DE  0E00               	movlw	0
  3575  0023E0  6E22               	movwf	(pinMode@type+1)^0,c
  3576  0023E2  0E00               	movlw	0
  3577  0023E4  6E21               	movwf	pinMode@type^0,c
  3578  0023E6  EC35  F00A         	call	_pinMode	;wreg free
  3579  0023EA  0012               	return		;funcret
  3580  0023EC                     __end_of_soInit:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _kpDebounce *****************
  3584 ;; Defined at:
  3585 ;;		line 27 in file "keypad.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  i               2   12[COMRAM] int 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3599 ;;      Params:         0       0       0       0       0       0       0
  3600 ;;      Locals:         2       0       0       0       0       0       0
  3601 ;;      Temps:          3       0       0       0       0       0       0
  3602 ;;      Totals:         5       0       0       0       0       0       0
  3603 ;;Total ram usage:        5 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 3
  3606 ;; This function calls:
  3607 ;;		_digitalRead
  3608 ;;		_soWrite
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text20
  3615  00198E                     __ptext20:
  3616                           	callstack 0
  3617  00198E                     _kpDebounce:
  3618                           	callstack 27
  3619  00198E                     
  3620                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3621  00198E  0E00               	movlw	0
  3622  001990  6E0E               	movwf	(kpDebounce@newRead+1)^0,c
  3623  001992  0E00               	movlw	0
  3624  001994  6E0D               	movwf	kpDebounce@newRead^0,c
  3625                           
  3626                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3627  001996  0E00               	movlw	0
  3628  001998  6E2C               	movwf	(kpDebounce@i+1)^0,c
  3629  00199A  0E00               	movlw	0
  3630  00199C  6E2B               	movwf	kpDebounce@i^0,c
  3631  00199E                     l2419:
  3632  00199E  BE2C               	btfsc	(kpDebounce@i+1)^0,7,c
  3633  0019A0  EFDB  F00C         	goto	u2461
  3634  0019A4  502C               	movf	(kpDebounce@i+1)^0,w,c
  3635  0019A6  E109               	bnz	u2460
  3636  0019A8  0E05               	movlw	5
  3637  0019AA  5C2B               	subwf	kpDebounce@i^0,w,c
  3638  0019AC  A0D8               	btfss	status,0,c
  3639  0019AE  EFDB  F00C         	goto	u2461
  3640  0019B2  EFDD  F00C         	goto	u2460
  3641  0019B6                     u2461:
  3642  0019B6  EFDF  F00C         	goto	l2423
  3643  0019BA                     u2460:
  3644  0019BA  EF40  F00D         	goto	l2435
  3645  0019BE                     l2423:
  3646                           
  3647                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3648  0019BE  C02B  F028         	movff	kpDebounce@i,??_kpDebounce
  3649  0019C2  0E03               	movlw	3
  3650  0019C4  2628               	addwf	??_kpDebounce^0,f,c
  3651  0019C6  0E01               	movlw	1
  3652  0019C8  6E29               	movwf	(??_kpDebounce+1)^0,c
  3653  0019CA  0E00               	movlw	0
  3654  0019CC  6E2A               	movwf	(??_kpDebounce+2)^0,c
  3655  0019CE  2A28               	incf	??_kpDebounce^0,f,c
  3656  0019D0  EFED  F00C         	goto	u2474
  3657  0019D4                     u2475:
  3658  0019D4  90D8               	bcf	status,0,c
  3659  0019D6  3629               	rlcf	(??_kpDebounce+1)^0,f,c
  3660  0019D8  362A               	rlcf	(??_kpDebounce+2)^0,f,c
  3661  0019DA                     u2474:
  3662  0019DA  2E28               	decfsz	??_kpDebounce^0,f,c
  3663  0019DC  EFEA  F00C         	goto	u2475
  3664  0019E0  C029  F025         	movff	??_kpDebounce+1,soWrite@value
  3665  0019E4  C02A  F026         	movff	??_kpDebounce+2,soWrite@value+1
  3666  0019E8  EC6B  F011         	call	_soWrite	;wreg free
  3667                           
  3668                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3669  0019EC  0E00               	movlw	0
  3670  0019EE  6E20               	movwf	(digitalRead@pin+1)^0,c
  3671  0019F0  0E0A               	movlw	10
  3672  0019F2  6E1F               	movwf	digitalRead@pin^0,c
  3673  0019F4  EC12  F00C         	call	_digitalRead	;wreg free
  3674  0019F8  501F               	movf	?_digitalRead^0,w,c
  3675  0019FA  1020               	iorwf	(?_digitalRead+1)^0,w,c
  3676  0019FC  B4D8               	btfsc	status,2,c
  3677  0019FE  EF03  F00D         	goto	u2481
  3678  001A02  EF05  F00D         	goto	u2480
  3679  001A06                     u2481:
  3680  001A06  EF18  F00D         	goto	l2427
  3681  001A0A                     u2480:
  3682  001A0A                     
  3683                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3684  001A0A  C02B  F028         	movff	kpDebounce@i,??_kpDebounce
  3685  001A0E  0E01               	movlw	1
  3686  001A10  6E29               	movwf	(??_kpDebounce+1)^0,c
  3687  001A12  0E00               	movlw	0
  3688  001A14  6E2A               	movwf	(??_kpDebounce+2)^0,c
  3689  001A16  2A28               	incf	??_kpDebounce^0,f,c
  3690  001A18  EF11  F00D         	goto	u2494
  3691  001A1C                     u2495:
  3692  001A1C  90D8               	bcf	status,0,c
  3693  001A1E  3629               	rlcf	(??_kpDebounce+1)^0,f,c
  3694  001A20  362A               	rlcf	(??_kpDebounce+2)^0,f,c
  3695  001A22                     u2494:
  3696  001A22  2E28               	decfsz	??_kpDebounce^0,f,c
  3697  001A24  EF0E  F00D         	goto	u2495
  3698  001A28  5029               	movf	(??_kpDebounce+1)^0,w,c
  3699  001A2A  120D               	iorwf	kpDebounce@newRead^0,f,c
  3700  001A2C  502A               	movf	(??_kpDebounce+2)^0,w,c
  3701  001A2E  120E               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3702  001A30                     l2427:
  3703                           
  3704                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3705  001A30  0E00               	movlw	0
  3706  001A32  6E20               	movwf	(digitalRead@pin+1)^0,c
  3707  001A34  0E09               	movlw	9
  3708  001A36  6E1F               	movwf	digitalRead@pin^0,c
  3709  001A38  EC12  F00C         	call	_digitalRead	;wreg free
  3710  001A3C  501F               	movf	?_digitalRead^0,w,c
  3711  001A3E  1020               	iorwf	(?_digitalRead+1)^0,w,c
  3712  001A40  B4D8               	btfsc	status,2,c
  3713  001A42  EF25  F00D         	goto	u2501
  3714  001A46  EF27  F00D         	goto	u2500
  3715  001A4A                     u2501:
  3716  001A4A  EF3C  F00D         	goto	l2431
  3717  001A4E                     u2500:
  3718  001A4E                     
  3719                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3720  001A4E  C02B  F028         	movff	kpDebounce@i,??_kpDebounce
  3721  001A52  0E05               	movlw	5
  3722  001A54  2628               	addwf	??_kpDebounce^0,f,c
  3723  001A56  0E01               	movlw	1
  3724  001A58  6E29               	movwf	(??_kpDebounce+1)^0,c
  3725  001A5A  0E00               	movlw	0
  3726  001A5C  6E2A               	movwf	(??_kpDebounce+2)^0,c
  3727  001A5E  2A28               	incf	??_kpDebounce^0,f,c
  3728  001A60  EF35  F00D         	goto	u2514
  3729  001A64                     u2515:
  3730  001A64  90D8               	bcf	status,0,c
  3731  001A66  3629               	rlcf	(??_kpDebounce+1)^0,f,c
  3732  001A68  362A               	rlcf	(??_kpDebounce+2)^0,f,c
  3733  001A6A                     u2514:
  3734  001A6A  2E28               	decfsz	??_kpDebounce^0,f,c
  3735  001A6C  EF32  F00D         	goto	u2515
  3736  001A70  5029               	movf	(??_kpDebounce+1)^0,w,c
  3737  001A72  120D               	iorwf	kpDebounce@newRead^0,f,c
  3738  001A74  502A               	movf	(??_kpDebounce+2)^0,w,c
  3739  001A76  120E               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3740  001A78                     l2431:
  3741                           
  3742                           ;keypad.c: 42:     }
  3743  001A78  4A2B               	infsnz	kpDebounce@i^0,f,c
  3744  001A7A  2A2C               	incf	(kpDebounce@i+1)^0,f,c
  3745  001A7C  EFCF  F00C         	goto	l2419
  3746  001A80                     l2435:
  3747                           
  3748                           ;keypad.c: 43:     if (oldRead == newRead) {
  3749  001A80  500D               	movf	kpDebounce@newRead^0,w,c
  3750  001A82  180B               	xorwf	kpDebounce@oldRead^0,w,c
  3751  001A84  E107               	bnz	u2521
  3752  001A86  500E               	movf	(kpDebounce@newRead+1)^0,w,c
  3753  001A88  180C               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3754  001A8A  A4D8               	btfss	status,2,c
  3755  001A8C  EF4A  F00D         	goto	u2521
  3756  001A90  EF4C  F00D         	goto	u2520
  3757  001A94                     u2521:
  3758  001A94  EF4F  F00D         	goto	l2439
  3759  001A98                     u2520:
  3760  001A98                     
  3761                           ;keypad.c: 44:         tempo--;
  3762  001A98  061E               	decf	kpDebounce@tempo^0,f,c
  3763                           
  3764                           ;keypad.c: 45:     } else {
  3765  001A9A  EF55  F00D         	goto	l135
  3766  001A9E                     l2439:
  3767                           
  3768                           ;keypad.c: 46:         tempo = 1;
  3769  001A9E  0E01               	movlw	1
  3770  001AA0  6E1E               	movwf	kpDebounce@tempo^0,c
  3771  001AA2                     
  3772                           ;keypad.c: 47:         oldRead = newRead;
  3773  001AA2  C00D  F00B         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3774  001AA6  C00E  F00C         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3775  001AAA                     l135:
  3776                           
  3777                           ;keypad.c: 49:     if (tempo == 0) {
  3778  001AAA  501E               	movf	kpDebounce@tempo^0,w,c
  3779  001AAC  A4D8               	btfss	status,2,c
  3780  001AAE  EF5B  F00D         	goto	u2531
  3781  001AB2  EF5D  F00D         	goto	u2530
  3782  001AB6                     u2531:
  3783  001AB6  EF61  F00D         	goto	l137
  3784  001ABA                     u2530:
  3785  001ABA                     
  3786                           ;keypad.c: 50:         keys = oldRead;
  3787  001ABA  C00B  F00F         	movff	kpDebounce@oldRead,_keys
  3788  001ABE  C00C  F010         	movff	kpDebounce@oldRead+1,_keys+1
  3789  001AC2                     l137:
  3790  001AC2  0012               	return		;funcret
  3791  001AC4                     __end_of_kpDebounce:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _soWrite *****************
  3795 ;; Defined at:
  3796 ;;		line 18 in file "so.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  value           2    6[COMRAM] int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  i               1    8[COMRAM] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         2       0       0       0       0       0       0
  3811 ;;      Locals:         1       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         3       0       0       0       0       0       0
  3814 ;;Total ram usage:        3 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 2
  3817 ;; This function calls:
  3818 ;;		_PulseClockData
  3819 ;;		_PulseEnClock
  3820 ;;		_digitalWrite
  3821 ;; This function is called by:
  3822 ;;		_kpDebounce
  3823 ;;		_pushNibble
  3824 ;;		_pushByte
  3825 ;;		_ssdUpdate
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text21
  3830  0022D6                     __ptext21:
  3831                           	callstack 0
  3832  0022D6                     _soWrite:
  3833                           	callstack 27
  3834  0022D6                     
  3835                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3836  0022D6  0E00               	movlw	0
  3837  0022D8  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3838  0022DA  0E08               	movlw	8
  3839  0022DC  6E1F               	movwf	digitalWrite@pin^0,c
  3840  0022DE  0E00               	movlw	0
  3841  0022E0  6E22               	movwf	(digitalWrite@value+1)^0,c
  3842  0022E2  0E00               	movlw	0
  3843  0022E4  6E21               	movwf	digitalWrite@value^0,c
  3844  0022E6  EC0E  F009         	call	_digitalWrite	;wreg free
  3845  0022EA                     
  3846                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3847  0022EA  0E00               	movlw	0
  3848  0022EC  6E27               	movwf	soWrite@i^0,c
  3849  0022EE                     l2183:
  3850                           
  3851                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3852  0022EE  0E00               	movlw	0
  3853  0022F0  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3854  0022F2  0E1E               	movlw	30
  3855  0022F4  6E1F               	movwf	digitalWrite@pin^0,c
  3856  0022F6  0E80               	movlw	128
  3857  0022F8  1425               	andwf	soWrite@value^0,w,c
  3858  0022FA  6E21               	movwf	digitalWrite@value^0,c
  3859  0022FC  6A22               	clrf	(digitalWrite@value+1)^0,c
  3860  0022FE  EC0E  F009         	call	_digitalWrite	;wreg free
  3861                           
  3862                           ;so.c: 23:   PulseClockData();
  3863  002302  EC57  F012         	call	_PulseClockData	;wreg free
  3864  002306                     
  3865                           ;so.c: 24:   value <<= 1;
  3866  002306  90D8               	bcf	status,0,c
  3867  002308  3625               	rlcf	soWrite@value^0,f,c
  3868  00230A  3626               	rlcf	(soWrite@value+1)^0,f,c
  3869  00230C                     
  3870                           ;so.c: 25:  }
  3871  00230C  2A27               	incf	soWrite@i^0,f,c
  3872  00230E  0E07               	movlw	7
  3873  002310  6427               	cpfsgt	soWrite@i^0,c
  3874  002312  EF8D  F011         	goto	u2011
  3875  002316  EF8F  F011         	goto	u2010
  3876  00231A                     u2011:
  3877  00231A  EF77  F011         	goto	l2183
  3878  00231E                     u2010:
  3879  00231E                     
  3880                           ;so.c: 26:  PulseEnClock();
  3881  00231E  EC42  F012         	call	_PulseEnClock	;wreg free
  3882  002322  0012               	return		;funcret
  3883  002324                     __end_of_soWrite:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _PulseEnClock *****************
  3887 ;; Defined at:
  3888 ;;		line 9 in file "so.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3902 ;;      Params:         0       0       0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 1
  3909 ;; This function calls:
  3910 ;;		_digitalWrite
  3911 ;; This function is called by:
  3912 ;;		_soWrite
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text22
  3917  002484                     __ptext22:
  3918                           	callstack 0
  3919  002484                     _PulseEnClock:
  3920                           	callstack 27
  3921  002484                     
  3922                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3923  002484  0E00               	movlw	0
  3924  002486  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3925  002488  0E1F               	movlw	31
  3926  00248A  6E1F               	movwf	digitalWrite@pin^0,c
  3927  00248C  0E00               	movlw	0
  3928  00248E  6E22               	movwf	(digitalWrite@value+1)^0,c
  3929  002490  0E01               	movlw	1
  3930  002492  6E21               	movwf	digitalWrite@value^0,c
  3931  002494  EC0E  F009         	call	_digitalWrite	;wreg free
  3932                           
  3933                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3934  002498  0E00               	movlw	0
  3935  00249A  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3936  00249C  0E1F               	movlw	31
  3937  00249E  6E1F               	movwf	digitalWrite@pin^0,c
  3938  0024A0  0E00               	movlw	0
  3939  0024A2  6E22               	movwf	(digitalWrite@value+1)^0,c
  3940  0024A4  0E00               	movlw	0
  3941  0024A6  6E21               	movwf	digitalWrite@value^0,c
  3942  0024A8  EC0E  F009         	call	_digitalWrite	;wreg free
  3943  0024AC  0012               	return		;funcret
  3944  0024AE                     __end_of_PulseEnClock:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _PulseClockData *****************
  3948 ;; Defined at:
  3949 ;;		line 14 in file "so.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3963 ;;      Params:         0       0       0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 1
  3970 ;; This function calls:
  3971 ;;		_digitalWrite
  3972 ;; This function is called by:
  3973 ;;		_soWrite
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text23
  3978  0024AE                     __ptext23:
  3979                           	callstack 0
  3980  0024AE                     _PulseClockData:
  3981                           	callstack 27
  3982  0024AE                     
  3983                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3984  0024AE  0E00               	movlw	0
  3985  0024B0  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3986  0024B2  0E08               	movlw	8
  3987  0024B4  6E1F               	movwf	digitalWrite@pin^0,c
  3988  0024B6  0E00               	movlw	0
  3989  0024B8  6E22               	movwf	(digitalWrite@value+1)^0,c
  3990  0024BA  0E01               	movlw	1
  3991  0024BC  6E21               	movwf	digitalWrite@value^0,c
  3992  0024BE  EC0E  F009         	call	_digitalWrite	;wreg free
  3993                           
  3994                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3995  0024C2  0E00               	movlw	0
  3996  0024C4  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3997  0024C6  0E08               	movlw	8
  3998  0024C8  6E1F               	movwf	digitalWrite@pin^0,c
  3999  0024CA  0E00               	movlw	0
  4000  0024CC  6E22               	movwf	(digitalWrite@value+1)^0,c
  4001  0024CE  0E00               	movlw	0
  4002  0024D0  6E21               	movwf	digitalWrite@value^0,c
  4003  0024D2  EC0E  F009         	call	_digitalWrite	;wreg free
  4004  0024D6  0012               	return		;funcret
  4005  0024D8                     __end_of_PulseClockData:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _digitalWrite *****************
  4009 ;; Defined at:
  4010 ;;		line 14 in file "io.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  pin             2    0[COMRAM] int 
  4013 ;;  value           2    2[COMRAM] int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4025 ;;      Params:         4       0       0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0
  4027 ;;      Temps:          2       0       0       0       0       0       0
  4028 ;;      Totals:         6       0       0       0       0       0       0
  4029 ;;Total ram usage:        6 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_pulseEnablePin
  4035 ;;		_pushNibble
  4036 ;;		_pushByte
  4037 ;;		_PulseEnClock
  4038 ;;		_PulseClockData
  4039 ;;		_soWrite
  4040 ;;		_ssdUpdate
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text24
  4045  00121C                     __ptext24:
  4046                           	callstack 0
  4047  00121C                     _digitalWrite:
  4048                           	callstack 28
  4049  00121C                     
  4050                           ;io.c: 16:     if(pin <8){
  4051  00121C  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  4052  00121E  EF1C  F009         	goto	u1810
  4053  001222  5020               	movf	(digitalWrite@pin+1)^0,w,c
  4054  001224  E107               	bnz	u1811
  4055  001226  0E08               	movlw	8
  4056  001228  5C1F               	subwf	digitalWrite@pin^0,w,c
  4057  00122A  B0D8               	btfsc	status,0,c
  4058  00122C  EF1A  F009         	goto	u1811
  4059  001230  EF1C  F009         	goto	u1810
  4060  001234                     u1811:
  4061  001234  EF46  F009         	goto	l2139
  4062  001238                     u1810:
  4063  001238                     
  4064                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4065  001238  5021               	movf	digitalWrite@value^0,w,c
  4066  00123A  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  4067  00123C  B4D8               	btfsc	status,2,c
  4068  00123E  EF23  F009         	goto	u1821
  4069  001242  EF25  F009         	goto	u1820
  4070  001246                     u1821:
  4071  001246  EF35  F009         	goto	l2137
  4072  00124A                     u1820:
  4073  00124A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4074  00124E  0E01               	movlw	1
  4075  001250  6E24               	movwf	(??_digitalWrite+1)^0,c
  4076  001252  2A23               	incf	??_digitalWrite^0,f,c
  4077  001254  EF2E  F009         	goto	u1834
  4078  001258                     u1835:
  4079  001258  90D8               	bcf	status,0,c
  4080  00125A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4081  00125C                     u1834:
  4082  00125C  2E23               	decfsz	??_digitalWrite^0,f,c
  4083  00125E  EF2C  F009         	goto	u1835
  4084  001262  5024               	movf	(??_digitalWrite+1)^0,w,c
  4085  001264  1280               	iorwf	128,f,c	;volatile
  4086  001266  EF34  F00A         	goto	l64
  4087  00126A                     l2137:
  4088  00126A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4089  00126E  0E01               	movlw	1
  4090  001270  6E24               	movwf	(??_digitalWrite+1)^0,c
  4091  001272  2A23               	incf	??_digitalWrite^0,f,c
  4092  001274  EF3E  F009         	goto	u1844
  4093  001278                     u1845:
  4094  001278  90D8               	bcf	status,0,c
  4095  00127A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4096  00127C                     u1844:
  4097  00127C  2E23               	decfsz	??_digitalWrite^0,f,c
  4098  00127E  EF3C  F009         	goto	u1845
  4099  001282  5024               	movf	(??_digitalWrite+1)^0,w,c
  4100  001284  0AFF               	xorlw	255
  4101  001286  1680               	andwf	128,f,c	;volatile
  4102  001288  EF34  F00A         	goto	l64
  4103  00128C                     l2139:
  4104  00128C  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  4105  00128E  EF54  F009         	goto	u1850
  4106  001292  5020               	movf	(digitalWrite@pin+1)^0,w,c
  4107  001294  E107               	bnz	u1851
  4108  001296  0E10               	movlw	16
  4109  001298  5C1F               	subwf	digitalWrite@pin^0,w,c
  4110  00129A  B0D8               	btfsc	status,0,c
  4111  00129C  EF52  F009         	goto	u1851
  4112  0012A0  EF54  F009         	goto	u1850
  4113  0012A4                     u1851:
  4114  0012A4  EF82  F009         	goto	l2147
  4115  0012A8                     u1850:
  4116  0012A8                     
  4117                           ;io.c: 20:         pin -=8;
  4118  0012A8  0EF8               	movlw	248
  4119  0012AA  261F               	addwf	digitalWrite@pin^0,f,c
  4120  0012AC  0EFF               	movlw	255
  4121  0012AE  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  4122                           
  4123                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4124  0012B0  5021               	movf	digitalWrite@value^0,w,c
  4125  0012B2  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  4126  0012B4  B4D8               	btfsc	status,2,c
  4127  0012B6  EF5F  F009         	goto	u1861
  4128  0012BA  EF61  F009         	goto	u1860
  4129  0012BE                     u1861:
  4130  0012BE  EF71  F009         	goto	l2145
  4131  0012C2                     u1860:
  4132  0012C2  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4133  0012C6  0E01               	movlw	1
  4134  0012C8  6E24               	movwf	(??_digitalWrite+1)^0,c
  4135  0012CA  2A23               	incf	??_digitalWrite^0,f,c
  4136  0012CC  EF6A  F009         	goto	u1874
  4137  0012D0                     u1875:
  4138  0012D0  90D8               	bcf	status,0,c
  4139  0012D2  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4140  0012D4                     u1874:
  4141  0012D4  2E23               	decfsz	??_digitalWrite^0,f,c
  4142  0012D6  EF68  F009         	goto	u1875
  4143  0012DA  5024               	movf	(??_digitalWrite+1)^0,w,c
  4144  0012DC  1281               	iorwf	129,f,c	;volatile
  4145  0012DE  EF34  F00A         	goto	l64
  4146  0012E2                     l2145:
  4147  0012E2  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4148  0012E6  0E01               	movlw	1
  4149  0012E8  6E24               	movwf	(??_digitalWrite+1)^0,c
  4150  0012EA  2A23               	incf	??_digitalWrite^0,f,c
  4151  0012EC  EF7A  F009         	goto	u1884
  4152  0012F0                     u1885:
  4153  0012F0  90D8               	bcf	status,0,c
  4154  0012F2  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4155  0012F4                     u1884:
  4156  0012F4  2E23               	decfsz	??_digitalWrite^0,f,c
  4157  0012F6  EF78  F009         	goto	u1885
  4158  0012FA  5024               	movf	(??_digitalWrite+1)^0,w,c
  4159  0012FC  0AFF               	xorlw	255
  4160  0012FE  1681               	andwf	129,f,c	;volatile
  4161  001300  EF34  F00A         	goto	l64
  4162  001304                     l2147:
  4163  001304  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  4164  001306  EF90  F009         	goto	u1890
  4165  00130A  5020               	movf	(digitalWrite@pin+1)^0,w,c
  4166  00130C  E107               	bnz	u1891
  4167  00130E  0E18               	movlw	24
  4168  001310  5C1F               	subwf	digitalWrite@pin^0,w,c
  4169  001312  B0D8               	btfsc	status,0,c
  4170  001314  EF8E  F009         	goto	u1891
  4171  001318  EF90  F009         	goto	u1890
  4172  00131C                     u1891:
  4173  00131C  EFBE  F009         	goto	l2155
  4174  001320                     u1890:
  4175  001320                     
  4176                           ;io.c: 24:         pin -=16;
  4177  001320  0EF0               	movlw	240
  4178  001322  261F               	addwf	digitalWrite@pin^0,f,c
  4179  001324  0EFF               	movlw	255
  4180  001326  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  4181                           
  4182                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4183  001328  5021               	movf	digitalWrite@value^0,w,c
  4184  00132A  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  4185  00132C  B4D8               	btfsc	status,2,c
  4186  00132E  EF9B  F009         	goto	u1901
  4187  001332  EF9D  F009         	goto	u1900
  4188  001336                     u1901:
  4189  001336  EFAD  F009         	goto	l2153
  4190  00133A                     u1900:
  4191  00133A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4192  00133E  0E01               	movlw	1
  4193  001340  6E24               	movwf	(??_digitalWrite+1)^0,c
  4194  001342  2A23               	incf	??_digitalWrite^0,f,c
  4195  001344  EFA6  F009         	goto	u1914
  4196  001348                     u1915:
  4197  001348  90D8               	bcf	status,0,c
  4198  00134A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4199  00134C                     u1914:
  4200  00134C  2E23               	decfsz	??_digitalWrite^0,f,c
  4201  00134E  EFA4  F009         	goto	u1915
  4202  001352  5024               	movf	(??_digitalWrite+1)^0,w,c
  4203  001354  1282               	iorwf	130,f,c	;volatile
  4204  001356  EF34  F00A         	goto	l64
  4205  00135A                     l2153:
  4206  00135A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4207  00135E  0E01               	movlw	1
  4208  001360  6E24               	movwf	(??_digitalWrite+1)^0,c
  4209  001362  2A23               	incf	??_digitalWrite^0,f,c
  4210  001364  EFB6  F009         	goto	u1924
  4211  001368                     u1925:
  4212  001368  90D8               	bcf	status,0,c
  4213  00136A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4214  00136C                     u1924:
  4215  00136C  2E23               	decfsz	??_digitalWrite^0,f,c
  4216  00136E  EFB4  F009         	goto	u1925
  4217  001372  5024               	movf	(??_digitalWrite+1)^0,w,c
  4218  001374  0AFF               	xorlw	255
  4219  001376  1682               	andwf	130,f,c	;volatile
  4220  001378  EF34  F00A         	goto	l64
  4221  00137C                     l2155:
  4222  00137C  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  4223  00137E  EFCC  F009         	goto	u1930
  4224  001382  5020               	movf	(digitalWrite@pin+1)^0,w,c
  4225  001384  E107               	bnz	u1931
  4226  001386  0E20               	movlw	32
  4227  001388  5C1F               	subwf	digitalWrite@pin^0,w,c
  4228  00138A  B0D8               	btfsc	status,0,c
  4229  00138C  EFCA  F009         	goto	u1931
  4230  001390  EFCC  F009         	goto	u1930
  4231  001394                     u1931:
  4232  001394  EFFA  F009         	goto	l2163
  4233  001398                     u1930:
  4234  001398                     
  4235                           ;io.c: 28:         pin -=24;
  4236  001398  0EE8               	movlw	232
  4237  00139A  261F               	addwf	digitalWrite@pin^0,f,c
  4238  00139C  0EFF               	movlw	255
  4239  00139E  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  4240                           
  4241                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4242  0013A0  5021               	movf	digitalWrite@value^0,w,c
  4243  0013A2  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  4244  0013A4  B4D8               	btfsc	status,2,c
  4245  0013A6  EFD7  F009         	goto	u1941
  4246  0013AA  EFD9  F009         	goto	u1940
  4247  0013AE                     u1941:
  4248  0013AE  EFE9  F009         	goto	l2161
  4249  0013B2                     u1940:
  4250  0013B2  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4251  0013B6  0E01               	movlw	1
  4252  0013B8  6E24               	movwf	(??_digitalWrite+1)^0,c
  4253  0013BA  2A23               	incf	??_digitalWrite^0,f,c
  4254  0013BC  EFE2  F009         	goto	u1954
  4255  0013C0                     u1955:
  4256  0013C0  90D8               	bcf	status,0,c
  4257  0013C2  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4258  0013C4                     u1954:
  4259  0013C4  2E23               	decfsz	??_digitalWrite^0,f,c
  4260  0013C6  EFE0  F009         	goto	u1955
  4261  0013CA  5024               	movf	(??_digitalWrite+1)^0,w,c
  4262  0013CC  1283               	iorwf	131,f,c	;volatile
  4263  0013CE  EF34  F00A         	goto	l64
  4264  0013D2                     l2161:
  4265  0013D2  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4266  0013D6  0E01               	movlw	1
  4267  0013D8  6E24               	movwf	(??_digitalWrite+1)^0,c
  4268  0013DA  2A23               	incf	??_digitalWrite^0,f,c
  4269  0013DC  EFF2  F009         	goto	u1964
  4270  0013E0                     u1965:
  4271  0013E0  90D8               	bcf	status,0,c
  4272  0013E2  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4273  0013E4                     u1964:
  4274  0013E4  2E23               	decfsz	??_digitalWrite^0,f,c
  4275  0013E6  EFF0  F009         	goto	u1965
  4276  0013EA  5024               	movf	(??_digitalWrite+1)^0,w,c
  4277  0013EC  0AFF               	xorlw	255
  4278  0013EE  1683               	andwf	131,f,c	;volatile
  4279  0013F0  EF34  F00A         	goto	l64
  4280  0013F4                     l2163:
  4281  0013F4  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  4282  0013F6  EF08  F00A         	goto	u1970
  4283  0013FA  5020               	movf	(digitalWrite@pin+1)^0,w,c
  4284  0013FC  E107               	bnz	u1971
  4285  0013FE  0E28               	movlw	40
  4286  001400  5C1F               	subwf	digitalWrite@pin^0,w,c
  4287  001402  B0D8               	btfsc	status,0,c
  4288  001404  EF06  F00A         	goto	u1971
  4289  001408  EF08  F00A         	goto	u1970
  4290  00140C                     u1971:
  4291  00140C  EF34  F00A         	goto	l64
  4292  001410                     u1970:
  4293  001410                     
  4294                           ;io.c: 32:         pin -=32;
  4295  001410  0EE0               	movlw	224
  4296  001412  261F               	addwf	digitalWrite@pin^0,f,c
  4297  001414  0EFF               	movlw	255
  4298  001416  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  4299                           
  4300                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4301  001418  5021               	movf	digitalWrite@value^0,w,c
  4302  00141A  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  4303  00141C  B4D8               	btfsc	status,2,c
  4304  00141E  EF13  F00A         	goto	u1981
  4305  001422  EF15  F00A         	goto	u1980
  4306  001426                     u1981:
  4307  001426  EF25  F00A         	goto	l2169
  4308  00142A                     u1980:
  4309  00142A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4310  00142E  0E01               	movlw	1
  4311  001430  6E24               	movwf	(??_digitalWrite+1)^0,c
  4312  001432  2A23               	incf	??_digitalWrite^0,f,c
  4313  001434  EF1E  F00A         	goto	u1994
  4314  001438                     u1995:
  4315  001438  90D8               	bcf	status,0,c
  4316  00143A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4317  00143C                     u1994:
  4318  00143C  2E23               	decfsz	??_digitalWrite^0,f,c
  4319  00143E  EF1C  F00A         	goto	u1995
  4320  001442  5024               	movf	(??_digitalWrite+1)^0,w,c
  4321  001444  1284               	iorwf	132,f,c	;volatile
  4322  001446  EF34  F00A         	goto	l64
  4323  00144A                     l2169:
  4324  00144A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  4325  00144E  0E01               	movlw	1
  4326  001450  6E24               	movwf	(??_digitalWrite+1)^0,c
  4327  001452  2A23               	incf	??_digitalWrite^0,f,c
  4328  001454  EF2E  F00A         	goto	u2004
  4329  001458                     u2005:
  4330  001458  90D8               	bcf	status,0,c
  4331  00145A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  4332  00145C                     u2004:
  4333  00145C  2E23               	decfsz	??_digitalWrite^0,f,c
  4334  00145E  EF2C  F00A         	goto	u2005
  4335  001462  5024               	movf	(??_digitalWrite+1)^0,w,c
  4336  001464  0AFF               	xorlw	255
  4337  001466  1684               	andwf	132,f,c	;volatile
  4338  001468                     l64:
  4339  001468  0012               	return		;funcret
  4340  00146A                     __end_of_digitalWrite:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _digitalRead *****************
  4344 ;; Defined at:
  4345 ;;		line 39 in file "io.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  pin             2    0[COMRAM] int 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  2    0[COMRAM] int 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4359 ;;      Params:         2       0       0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0
  4361 ;;      Temps:          3       0       0       0       0       0       0
  4362 ;;      Totals:         5       0       0       0       0       0       0
  4363 ;;Total ram usage:        5 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_kpDebounce
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text25
  4373  001824                     __ptext25:
  4374                           	callstack 0
  4375  001824                     _digitalRead:
  4376                           	callstack 29
  4377  001824                     
  4378                           ;io.c: 40:     if(pin <8){
  4379  001824  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  4380  001826  EF20  F00C         	goto	u2320
  4381  00182A  5020               	movf	(digitalRead@pin+1)^0,w,c
  4382  00182C  E107               	bnz	u2321
  4383  00182E  0E08               	movlw	8
  4384  001830  5C1F               	subwf	digitalRead@pin^0,w,c
  4385  001832  B0D8               	btfsc	status,0,c
  4386  001834  EF1E  F00C         	goto	u2321
  4387  001838  EF20  F00C         	goto	u2320
  4388  00183C                     u2321:
  4389  00183C  EF34  F00C         	goto	l2333
  4390  001840                     u2320:
  4391  001840                     
  4392                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4393  001840  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  4394  001844  0E01               	movlw	1
  4395  001846  6E22               	movwf	(??_digitalRead+1)^0,c
  4396  001848  2A21               	incf	??_digitalRead^0,f,c
  4397  00184A  EF29  F00C         	goto	u2334
  4398  00184E                     u2335:
  4399  00184E  90D8               	bcf	status,0,c
  4400  001850  3622               	rlcf	(??_digitalRead+1)^0,f,c
  4401  001852                     u2334:
  4402  001852  2E21               	decfsz	??_digitalRead^0,f,c
  4403  001854  EF27  F00C         	goto	u2335
  4404  001858  5022               	movf	(??_digitalRead+1)^0,w,c
  4405  00185A  1480               	andwf	128,w,c	;volatile
  4406  00185C  6E23               	movwf	(??_digitalRead+2)^0,c
  4407  00185E  5023               	movf	(??_digitalRead+2)^0,w,c
  4408  001860  6E1F               	movwf	?_digitalRead^0,c
  4409  001862  6A20               	clrf	(?_digitalRead+1)^0,c
  4410  001864  EFC6  F00C         	goto	l68
  4411  001868                     l2333:
  4412  001868  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  4413  00186A  EF42  F00C         	goto	u2340
  4414  00186E  5020               	movf	(digitalRead@pin+1)^0,w,c
  4415  001870  E107               	bnz	u2341
  4416  001872  0E10               	movlw	16
  4417  001874  5C1F               	subwf	digitalRead@pin^0,w,c
  4418  001876  B0D8               	btfsc	status,0,c
  4419  001878  EF40  F00C         	goto	u2341
  4420  00187C  EF42  F00C         	goto	u2340
  4421  001880                     u2341:
  4422  001880  EF58  F00C         	goto	l2341
  4423  001884                     u2340:
  4424  001884                     
  4425                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4426  001884  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  4427  001888  0EF8               	movlw	-8
  4428  00188A  2621               	addwf	??_digitalRead^0,f,c
  4429  00188C  0E01               	movlw	1
  4430  00188E  6E22               	movwf	(??_digitalRead+1)^0,c
  4431  001890  2A21               	incf	??_digitalRead^0,f,c
  4432  001892  EF4D  F00C         	goto	u2354
  4433  001896                     u2355:
  4434  001896  90D8               	bcf	status,0,c
  4435  001898  3622               	rlcf	(??_digitalRead+1)^0,f,c
  4436  00189A                     u2354:
  4437  00189A  2E21               	decfsz	??_digitalRead^0,f,c
  4438  00189C  EF4B  F00C         	goto	u2355
  4439  0018A0  5022               	movf	(??_digitalRead+1)^0,w,c
  4440  0018A2  1481               	andwf	129,w,c	;volatile
  4441  0018A4  6E23               	movwf	(??_digitalRead+2)^0,c
  4442  0018A6  5023               	movf	(??_digitalRead+2)^0,w,c
  4443  0018A8  6E1F               	movwf	?_digitalRead^0,c
  4444  0018AA  6A20               	clrf	(?_digitalRead+1)^0,c
  4445  0018AC  EFC6  F00C         	goto	l68
  4446  0018B0                     l2341:
  4447  0018B0  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  4448  0018B2  EF66  F00C         	goto	u2360
  4449  0018B6  5020               	movf	(digitalRead@pin+1)^0,w,c
  4450  0018B8  E107               	bnz	u2361
  4451  0018BA  0E18               	movlw	24
  4452  0018BC  5C1F               	subwf	digitalRead@pin^0,w,c
  4453  0018BE  B0D8               	btfsc	status,0,c
  4454  0018C0  EF64  F00C         	goto	u2361
  4455  0018C4  EF66  F00C         	goto	u2360
  4456  0018C8                     u2361:
  4457  0018C8  EF7C  F00C         	goto	l2349
  4458  0018CC                     u2360:
  4459  0018CC                     
  4460                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4461  0018CC  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  4462  0018D0  0EF0               	movlw	-16
  4463  0018D2  2621               	addwf	??_digitalRead^0,f,c
  4464  0018D4  0E01               	movlw	1
  4465  0018D6  6E22               	movwf	(??_digitalRead+1)^0,c
  4466  0018D8  2A21               	incf	??_digitalRead^0,f,c
  4467  0018DA  EF71  F00C         	goto	u2374
  4468  0018DE                     u2375:
  4469  0018DE  90D8               	bcf	status,0,c
  4470  0018E0  3622               	rlcf	(??_digitalRead+1)^0,f,c
  4471  0018E2                     u2374:
  4472  0018E2  2E21               	decfsz	??_digitalRead^0,f,c
  4473  0018E4  EF6F  F00C         	goto	u2375
  4474  0018E8  5022               	movf	(??_digitalRead+1)^0,w,c
  4475  0018EA  1482               	andwf	130,w,c	;volatile
  4476  0018EC  6E23               	movwf	(??_digitalRead+2)^0,c
  4477  0018EE  5023               	movf	(??_digitalRead+2)^0,w,c
  4478  0018F0  6E1F               	movwf	?_digitalRead^0,c
  4479  0018F2  6A20               	clrf	(?_digitalRead+1)^0,c
  4480  0018F4  EFC6  F00C         	goto	l68
  4481  0018F8                     l2349:
  4482  0018F8  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  4483  0018FA  EF8A  F00C         	goto	u2380
  4484  0018FE  5020               	movf	(digitalRead@pin+1)^0,w,c
  4485  001900  E107               	bnz	u2381
  4486  001902  0E20               	movlw	32
  4487  001904  5C1F               	subwf	digitalRead@pin^0,w,c
  4488  001906  B0D8               	btfsc	status,0,c
  4489  001908  EF88  F00C         	goto	u2381
  4490  00190C  EF8A  F00C         	goto	u2380
  4491  001910                     u2381:
  4492  001910  EFA0  F00C         	goto	l2357
  4493  001914                     u2380:
  4494  001914                     
  4495                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4496  001914  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  4497  001918  0EE8               	movlw	-24
  4498  00191A  2621               	addwf	??_digitalRead^0,f,c
  4499  00191C  0E01               	movlw	1
  4500  00191E  6E22               	movwf	(??_digitalRead+1)^0,c
  4501  001920  2A21               	incf	??_digitalRead^0,f,c
  4502  001922  EF95  F00C         	goto	u2394
  4503  001926                     u2395:
  4504  001926  90D8               	bcf	status,0,c
  4505  001928  3622               	rlcf	(??_digitalRead+1)^0,f,c
  4506  00192A                     u2394:
  4507  00192A  2E21               	decfsz	??_digitalRead^0,f,c
  4508  00192C  EF93  F00C         	goto	u2395
  4509  001930  5022               	movf	(??_digitalRead+1)^0,w,c
  4510  001932  1483               	andwf	131,w,c	;volatile
  4511  001934  6E23               	movwf	(??_digitalRead+2)^0,c
  4512  001936  5023               	movf	(??_digitalRead+2)^0,w,c
  4513  001938  6E1F               	movwf	?_digitalRead^0,c
  4514  00193A  6A20               	clrf	(?_digitalRead+1)^0,c
  4515  00193C  EFC6  F00C         	goto	l68
  4516  001940                     l2357:
  4517  001940  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  4518  001942  EFAE  F00C         	goto	u2400
  4519  001946  5020               	movf	(digitalRead@pin+1)^0,w,c
  4520  001948  E107               	bnz	u2401
  4521  00194A  0E28               	movlw	40
  4522  00194C  5C1F               	subwf	digitalRead@pin^0,w,c
  4523  00194E  B0D8               	btfsc	status,0,c
  4524  001950  EFAC  F00C         	goto	u2401
  4525  001954  EFAE  F00C         	goto	u2400
  4526  001958                     u2401:
  4527  001958  EFC4  F00C         	goto	l73
  4528  00195C                     u2400:
  4529  00195C                     
  4530                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4531  00195C  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  4532  001960  0EE0               	movlw	-32
  4533  001962  2621               	addwf	??_digitalRead^0,f,c
  4534  001964  0E01               	movlw	1
  4535  001966  6E22               	movwf	(??_digitalRead+1)^0,c
  4536  001968  2A21               	incf	??_digitalRead^0,f,c
  4537  00196A  EFB9  F00C         	goto	u2414
  4538  00196E                     u2415:
  4539  00196E  90D8               	bcf	status,0,c
  4540  001970  3622               	rlcf	(??_digitalRead+1)^0,f,c
  4541  001972                     u2414:
  4542  001972  2E21               	decfsz	??_digitalRead^0,f,c
  4543  001974  EFB7  F00C         	goto	u2415
  4544  001978  5022               	movf	(??_digitalRead+1)^0,w,c
  4545  00197A  1484               	andwf	132,w,c	;volatile
  4546  00197C  6E23               	movwf	(??_digitalRead+2)^0,c
  4547  00197E  5023               	movf	(??_digitalRead+2)^0,w,c
  4548  001980  6E1F               	movwf	?_digitalRead^0,c
  4549  001982  6A20               	clrf	(?_digitalRead+1)^0,c
  4550  001984  EFC6  F00C         	goto	l68
  4551  001988                     l73:
  4552  001988                     
  4553                           ;io.c: 51:     return -1;
  4554  001988  681F               	setf	?_digitalRead^0,c
  4555  00198A  6820               	setf	(?_digitalRead+1)^0,c
  4556  00198C                     l68:
  4557  00198C  0012               	return		;funcret
  4558  00198E                     __end_of_digitalRead:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _geladeiraAberta *****************
  4562 ;; Defined at:
  4563 ;;		line 88 in file "main.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4577 ;;      Params:         0       0       0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 2
  4584 ;; This function calls:
  4585 ;;		_pwmSet
  4586 ;;		_tempo
  4587 ;;		_tempoS
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text26
  4594  0024D8                     __ptext26:
  4595                           	callstack 0
  4596  0024D8                     _geladeiraAberta:
  4597                           	callstack 28
  4598  0024D8                     
  4599                           ;main.c: 89:     if (aberta == 1) {
  4600  0024D8  0415               	decf	_aberta^0,w,c
  4601  0024DA  A4D8               	btfss	status,2,c
  4602  0024DC  EF72  F012         	goto	u2581
  4603  0024E0  EF74  F012         	goto	u2580
  4604  0024E4                     u2581:
  4605  0024E4  EF80  F012         	goto	l357
  4606  0024E8                     u2580:
  4607  0024E8                     
  4608                           ;main.c: 90:         pwmSet(100);
  4609  0024E8  0E64               	movlw	100
  4610  0024EA  EC5C  F010         	call	_pwmSet
  4611  0024EE                     
  4612                           ;main.c: 91:         tempo(250);
  4613  0024EE  0EFA               	movlw	250
  4614  0024F0  ECBF  F010         	call	_tempo
  4615  0024F4                     
  4616                           ;main.c: 92:         pwmSet(0);
  4617  0024F4  0E00               	movlw	0
  4618  0024F6  EC5C  F010         	call	_pwmSet
  4619                           
  4620                           ;main.c: 93:         tempoS(2);
  4621  0024FA  0E02               	movlw	2
  4622  0024FC  ECD8  F012         	call	_tempoS
  4623  002500                     l357:
  4624  002500  0012               	return		;funcret
  4625  002502                     __end_of_geladeiraAberta:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _tempoS *****************
  4629 ;; Defined at:
  4630 ;;		line 16 in file "delay.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  i               1    wreg     unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  i               1    3[COMRAM] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4644 ;;      Params:         0       0       0       0       0       0       0
  4645 ;;      Locals:         1       0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0
  4647 ;;      Totals:         1       0       0       0       0       0       0
  4648 ;;Total ram usage:        1 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 1
  4651 ;; This function calls:
  4652 ;;		_tempo
  4653 ;; This function is called by:
  4654 ;;		_geladeiraAberta
  4655 ;;		_main
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text27
  4660  0025B0                     __ptext27:
  4661                           	callstack 0
  4662  0025B0                     _tempoS:
  4663                           	callstack 29
  4664  0025B0                     
  4665                           ;delay.c: 16: void tempoS(unsigned char i);delay.c: 17: {;delay.c: 18:     for (i=0;i<4;
      +                          i++)
  4666  0025B0  0E00               	movlw	0
  4667  0025B2  6E22               	movwf	tempoS@i^0,c
  4668  0025B4                     l1421:
  4669                           
  4670                           ;delay.c: 19:     {;delay.c: 20:         tempo(250);
  4671  0025B4  0EFA               	movlw	250
  4672  0025B6  ECBF  F010         	call	_tempo
  4673  0025BA                     
  4674                           ;delay.c: 21:     }
  4675  0025BA  2A22               	incf	tempoS@i^0,f,c
  4676  0025BC  0E03               	movlw	3
  4677  0025BE  6422               	cpfsgt	tempoS@i^0,c
  4678  0025C0  EFE4  F012         	goto	u671
  4679  0025C4  EFE6  F012         	goto	u670
  4680  0025C8                     u671:
  4681  0025C8  EFDA  F012         	goto	l1421
  4682  0025CC                     u670:
  4683  0025CC  0012               	return		;funcret
  4684  0025CE                     __end_of_tempoS:
  4685                           	callstack 0
  4686                           
  4687 ;; *************** function _tempo *****************
  4688 ;; Defined at:
  4689 ;;		line 4 in file "delay.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  i               1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  i               1    0[COMRAM] unsigned char 
  4694 ;;  k               1    2[COMRAM] volatile unsigned char 
  4695 ;;  j               1    1[COMRAM] volatile unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4705 ;;      Params:         0       0       0       0       0       0       0
  4706 ;;      Locals:         3       0       0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0
  4708 ;;      Totals:         3       0       0       0       0       0       0
  4709 ;;Total ram usage:        3 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_geladeiraAberta
  4715 ;;		_tempoS
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text28
  4720  00217E                     __ptext28:
  4721                           	callstack 0
  4722  00217E                     _tempo:
  4723                           	callstack 29
  4724                           
  4725                           ;incstack = 0
  4726                           ;tempo@i stored from wreg
  4727  00217E  6E1F               	movwf	tempo@i^0,c
  4728  002180                     l1249:
  4729  002180  501F               	movf	tempo@i^0,w,c
  4730  002182  A4D8               	btfss	status,2,c
  4731  002184  EFC6  F010         	goto	u431
  4732  002188  EFC8  F010         	goto	u430
  4733  00218C                     u431:
  4734  00218C  EFCA  F010         	goto	l1253
  4735  002190                     u430:
  4736  002190  EFEB  F010         	goto	l446
  4737  002194                     l1253:
  4738                           
  4739                           ;delay.c: 7:     {;delay.c: 8:         volatile unsigned char j, k;;delay.c: 9:         
      +                          for (j = 0; j < 41; j++)
  4740  002194  0E00               	movlw	0
  4741  002196  6E20               	movwf	tempo@j^0,c	;volatile
  4742  002198                     l1255:
  4743  002198  0E28               	movlw	40
  4744  00219A  6420               	cpfsgt	tempo@j^0,c	;volatile
  4745  00219C  EFD2  F010         	goto	u441
  4746  0021A0  EFD4  F010         	goto	u440
  4747  0021A4                     u441:
  4748  0021A4  EFD6  F010         	goto	l1259
  4749  0021A8                     u440:
  4750  0021A8  EFE8  F010         	goto	l1273
  4751  0021AC                     l1259:
  4752                           
  4753                           ;delay.c: 10:         {;delay.c: 11:             for (k = 0; k < 3; k++);
  4754  0021AC  0E00               	movlw	0
  4755  0021AE  6E21               	movwf	tempo@k^0,c	;volatile
  4756  0021B0                     l1261:
  4757  0021B0  0E02               	movlw	2
  4758  0021B2  6421               	cpfsgt	tempo@k^0,c	;volatile
  4759  0021B4  EFDE  F010         	goto	u451
  4760  0021B8  EFE0  F010         	goto	u450
  4761  0021BC                     u451:
  4762  0021BC  EFE2  F010         	goto	l1265
  4763  0021C0                     u450:
  4764  0021C0  EFE5  F010         	goto	l1269
  4765  0021C4                     l1265:
  4766  0021C4  2A21               	incf	tempo@k^0,f,c	;volatile
  4767  0021C6  EFD8  F010         	goto	l1261
  4768  0021CA                     l1269:
  4769                           
  4770                           ;delay.c: 12:         }
  4771  0021CA  2A20               	incf	tempo@j^0,f,c	;volatile
  4772  0021CC  EFCC  F010         	goto	l1255
  4773  0021D0                     l1273:
  4774                           
  4775                           ;delay.c: 13:     }
  4776  0021D0  061F               	decf	tempo@i^0,f,c
  4777  0021D2  EFC0  F010         	goto	l1249
  4778  0021D6                     l446:
  4779  0021D6  0012               	return		;funcret
  4780  0021D8                     __end_of_tempo:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _pwmSet *****************
  4784 ;; Defined at:
  4785 ;;		line 24 in file "pwm.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  porcento        1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  porcento        1   12[COMRAM] unsigned char 
  4790 ;;  val             2   13[COMRAM] unsigned int 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4800 ;;      Params:         0       0       0       0       0       0       0
  4801 ;;      Locals:         3       0       0       0       0       0       0
  4802 ;;      Temps:          2       0       0       0       0       0       0
  4803 ;;      Totals:         5       0       0       0       0       0       0
  4804 ;;Total ram usage:        5 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 1
  4807 ;; This function calls:
  4808 ;;		___lwdiv
  4809 ;;		___wmul
  4810 ;; This function is called by:
  4811 ;;		_geladeiraAberta
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text29
  4817  0020B8                     __ptext29:
  4818                           	callstack 0
  4819  0020B8                     _pwmSet:
  4820                           	callstack 29
  4821                           
  4822                           ;incstack = 0
  4823                           ;pwmSet@porcento stored from wreg
  4824  0020B8  6E2B               	movwf	pwmSet@porcento^0,c
  4825  0020BA                     
  4826                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  4827  0020BA  0E01               	movlw	1
  4828  0020BC  24CB               	addwf	203,w,c	;volatile
  4829  0020BE  6E23               	movwf	___wmul@multiplier^0,c
  4830  0020C0  6A24               	clrf	(___wmul@multiplier+1)^0,c
  4831  0020C2  0E00               	movlw	0
  4832  0020C4  2224               	addwfc	(___wmul@multiplier+1)^0,f,c
  4833  0020C6  C02B  F025         	movff	pwmSet@porcento,___wmul@multiplicand
  4834  0020CA  6A26               	clrf	(___wmul@multiplicand+1)^0,c
  4835  0020CC  ECA7  F012         	call	___wmul	;wreg free
  4836  0020D0  C023  F02C         	movff	?___wmul,pwmSet@val
  4837  0020D4  C024  F02D         	movff	?___wmul+1,pwmSet@val+1
  4838  0020D8                     
  4839                           ;pwm.c: 33:     val = val / 25;
  4840  0020D8  C02C  F01F         	movff	pwmSet@val,___lwdiv@dividend
  4841  0020DC  C02D  F020         	movff	pwmSet@val+1,___lwdiv@dividend+1
  4842  0020E0  0E00               	movlw	0
  4843  0020E2  6E22               	movwf	(___lwdiv@divisor+1)^0,c
  4844  0020E4  0E19               	movlw	25
  4845  0020E6  6E21               	movwf	___lwdiv@divisor^0,c
  4846  0020E8  EC22  F010         	call	___lwdiv	;wreg free
  4847  0020EC  C01F  F02C         	movff	?___lwdiv,pwmSet@val
  4848  0020F0  C020  F02D         	movff	?___lwdiv+1,pwmSet@val+1
  4849  0020F4                     
  4850                           ;pwm.c: 35:  val &= 0x03ff;
  4851  0020F4  0EFF               	movlw	255
  4852  0020F6  162C               	andwf	pwmSet@val^0,f,c
  4853  0020F8  0E03               	movlw	3
  4854  0020FA  162D               	andwf	(pwmSet@val+1)^0,f,c
  4855  0020FC                     
  4856                           ;pwm.c: 37:  CCPR2L = val >> 2;
  4857  0020FC  C02C  F029         	movff	pwmSet@val,??_pwmSet
  4858  002100  C02D  F02A         	movff	pwmSet@val+1,??_pwmSet+1
  4859  002104  90D8               	bcf	status,0,c
  4860  002106  322A               	rrcf	(??_pwmSet+1)^0,f,c
  4861  002108  3229               	rrcf	??_pwmSet^0,f,c
  4862  00210A  90D8               	bcf	status,0,c
  4863  00210C  322A               	rrcf	(??_pwmSet+1)^0,f,c
  4864  00210E  3229               	rrcf	??_pwmSet^0,f,c
  4865  002110  5029               	movf	??_pwmSet^0,w,c
  4866  002112  6EBB               	movwf	187,c	;volatile
  4867  002114                     
  4868                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  4869  002114  C02C  F029         	movff	pwmSet@val,??_pwmSet	;volatile
  4870  002118  0E03               	movlw	3
  4871  00211A  1629               	andwf	??_pwmSet^0,f,c
  4872  00211C  3829               	swapf	??_pwmSet^0,w,c
  4873  00211E  0BF0               	andlw	240
  4874  002120  12BA               	iorwf	186,f,c	;volatile
  4875  002122  0012               	return		;funcret
  4876  002124                     __end_of_pwmSet:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function ___wmul *****************
  4880 ;; Defined at:
  4881 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  multiplier      2    4[COMRAM] unsigned int 
  4884 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  product         2    8[COMRAM] unsigned int 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  2    4[COMRAM] unsigned int 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, prodl, prodh
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4896 ;;      Params:         4       0       0       0       0       0       0
  4897 ;;      Locals:         2       0       0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0
  4899 ;;      Totals:         6       0       0       0       0       0       0
  4900 ;;Total ram usage:        6 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_main
  4906 ;;		_pwmSet
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text30
  4911  00254E                     __ptext30:
  4912                           	callstack 0
  4913  00254E                     ___wmul:
  4914                           	callstack 29
  4915  00254E  5023               	movf	___wmul@multiplier^0,w,c
  4916  002550  0225               	mulwf	___wmul@multiplicand^0,c
  4917  002552  CFF3 F027          	movff	prodl,___wmul@product
  4918  002556  CFF4 F028          	movff	prodh,___wmul@product+1
  4919  00255A  5023               	movf	___wmul@multiplier^0,w,c
  4920  00255C  0226               	mulwf	(___wmul@multiplicand+1)^0,c
  4921  00255E  50F3               	movf	243,w,c
  4922  002560  2628               	addwf	(___wmul@product+1)^0,f,c
  4923  002562  5024               	movf	(___wmul@multiplier+1)^0,w,c
  4924  002564  0225               	mulwf	___wmul@multiplicand^0,c
  4925  002566  50F3               	movf	243,w,c
  4926  002568  2628               	addwf	(___wmul@product+1)^0,f,c
  4927  00256A  C027  F023         	movff	___wmul@product,?___wmul
  4928  00256E  C028  F024         	movff	___wmul@product+1,?___wmul+1
  4929  002572  0012               	return		;funcret
  4930  002574                     __end_of___wmul:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function ___lwdiv *****************
  4934 ;; Defined at:
  4935 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  dividend        2    0[COMRAM] unsigned int 
  4938 ;;  divisor         2    2[COMRAM] unsigned int 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  quotient        2    4[COMRAM] unsigned int 
  4941 ;;  counter         1    6[COMRAM] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  2    0[COMRAM] unsigned int 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4951 ;;      Params:         4       0       0       0       0       0       0
  4952 ;;      Locals:         3       0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0
  4954 ;;      Totals:         7       0       0       0       0       0       0
  4955 ;;Total ram usage:        7 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_pwmSet
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text31
  4965  002044                     __ptext31:
  4966                           	callstack 0
  4967  002044                     ___lwdiv:
  4968                           	callstack 29
  4969  002044  0E00               	movlw	0
  4970  002046  6E24               	movwf	(___lwdiv@quotient+1)^0,c
  4971  002048  0E00               	movlw	0
  4972  00204A  6E23               	movwf	___lwdiv@quotient^0,c
  4973  00204C  5021               	movf	___lwdiv@divisor^0,w,c
  4974  00204E  1022               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4975  002050  B4D8               	btfsc	status,2,c
  4976  002052  EF2D  F010         	goto	u2291
  4977  002056  EF2F  F010         	goto	u2290
  4978  00205A                     u2291:
  4979  00205A  EF57  F010         	goto	l945
  4980  00205E                     u2290:
  4981  00205E  0E01               	movlw	1
  4982  002060  6E25               	movwf	___lwdiv@counter^0,c
  4983  002062  EF37  F010         	goto	l2311
  4984  002066                     l2309:
  4985  002066  90D8               	bcf	status,0,c
  4986  002068  3621               	rlcf	___lwdiv@divisor^0,f,c
  4987  00206A  3622               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4988  00206C  2A25               	incf	___lwdiv@counter^0,f,c
  4989  00206E                     l2311:
  4990  00206E  AE22               	btfss	(___lwdiv@divisor+1)^0,7,c
  4991  002070  EF3C  F010         	goto	u2301
  4992  002074  EF3E  F010         	goto	u2300
  4993  002078                     u2301:
  4994  002078  EF33  F010         	goto	l2309
  4995  00207C                     u2300:
  4996  00207C                     l2313:
  4997  00207C  90D8               	bcf	status,0,c
  4998  00207E  3623               	rlcf	___lwdiv@quotient^0,f,c
  4999  002080  3624               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5000  002082  5021               	movf	___lwdiv@divisor^0,w,c
  5001  002084  5C1F               	subwf	___lwdiv@dividend^0,w,c
  5002  002086  5022               	movf	(___lwdiv@divisor+1)^0,w,c
  5003  002088  5820               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5004  00208A  A0D8               	btfss	status,0,c
  5005  00208C  EF4A  F010         	goto	u2311
  5006  002090  EF4C  F010         	goto	u2310
  5007  002094                     u2311:
  5008  002094  EF51  F010         	goto	l2321
  5009  002098                     u2310:
  5010  002098  5021               	movf	___lwdiv@divisor^0,w,c
  5011  00209A  5E1F               	subwf	___lwdiv@dividend^0,f,c
  5012  00209C  5022               	movf	(___lwdiv@divisor+1)^0,w,c
  5013  00209E  5A20               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5014  0020A0  8023               	bsf	___lwdiv@quotient^0,0,c
  5015  0020A2                     l2321:
  5016  0020A2  90D8               	bcf	status,0,c
  5017  0020A4  3222               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5018  0020A6  3221               	rrcf	___lwdiv@divisor^0,f,c
  5019  0020A8  2E25               	decfsz	___lwdiv@counter^0,f,c
  5020  0020AA  EF3E  F010         	goto	l2313
  5021  0020AE                     l945:
  5022  0020AE  C023  F01F         	movff	___lwdiv@quotient,?___lwdiv
  5023  0020B2  C024  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5024  0020B6  0012               	return		;funcret
  5025  0020B8                     __end_of___lwdiv:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _adcRead *****************
  5029 ;; Defined at:
  5030 ;;		line 38 in file "adc.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  channel         2    0[COMRAM] unsigned int 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  ADvalor         2    2[COMRAM] unsigned int 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  2    0[COMRAM] int 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5044 ;;      Params:         2       0       0       0       0       0       0
  5045 ;;      Locals:         2       0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0
  5047 ;;      Totals:         4       0       0       0       0       0       0
  5048 ;;Total ram usage:        4 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text32
  5058  002286                     __ptext32:
  5059                           	callstack 0
  5060  002286                     _adcRead:
  5061                           	callstack 30
  5062  002286                     
  5063                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  5064  002286  0EC3               	movlw	195
  5065  002288  16C2               	andwf	194,f,c	;volatile
  5066                           
  5067                           ;adc.c: 41:     if (channel < 3) {
  5068  00228A  5020               	movf	(adcRead@channel+1)^0,w,c
  5069  00228C  E107               	bnz	u2441
  5070  00228E  0E03               	movlw	3
  5071  002290  5C1F               	subwf	adcRead@channel^0,w,c
  5072  002292  B0D8               	btfsc	status,0,c
  5073  002294  EF4E  F011         	goto	u2441
  5074  002298  EF50  F011         	goto	u2440
  5075  00229C                     u2441:
  5076  00229C  EF54  F011         	goto	l2405
  5077  0022A0                     u2440:
  5078  0022A0                     
  5079                           ;adc.c: 42:         ADCON0 |= channel << 2;
  5080  0022A0  441F               	rlncf	adcRead@channel^0,w,c	;volatile
  5081  0022A2  46E8               	rlncf	wreg,f,c
  5082  0022A4  0BFC               	andlw	252
  5083  0022A6  12C2               	iorwf	194,f,c	;volatile
  5084  0022A8                     l2405:
  5085                           
  5086                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  5087  0022A8  82C2               	bsf	194,1,c	;volatile
  5088  0022AA                     l19:
  5089  0022AA  B2C2               	btfsc	194,1,c	;volatile
  5090  0022AC  EF5A  F011         	goto	u2451
  5091  0022B0  EF5C  F011         	goto	u2450
  5092  0022B4                     u2451:
  5093  0022B4  EF55  F011         	goto	l19
  5094  0022B8                     u2450:
  5095  0022B8                     
  5096                           ;adc.c: 49:     ADvalor = ADRESH;
  5097  0022B8  CFC4 F021          	movff	4036,adcRead@ADvalor	;volatile
  5098  0022BC  6A22               	clrf	(adcRead@ADvalor+1)^0,c
  5099  0022BE                     
  5100                           ;adc.c: 50:     ADvalor <<= 8;
  5101  0022BE  5021               	movf	adcRead@ADvalor^0,w,c
  5102  0022C0  6E22               	movwf	(adcRead@ADvalor+1)^0,c
  5103  0022C2  6A21               	clrf	adcRead@ADvalor^0,c
  5104  0022C4                     
  5105                           ;adc.c: 51:     ADvalor += ADRESL;
  5106  0022C4  50C3               	movf	195,w,c	;volatile
  5107  0022C6  2621               	addwf	adcRead@ADvalor^0,f,c
  5108  0022C8  0E00               	movlw	0
  5109  0022CA  2222               	addwfc	(adcRead@ADvalor+1)^0,f,c
  5110  0022CC                     
  5111                           ;adc.c: 52:     return ADvalor;
  5112  0022CC  C021  F01F         	movff	adcRead@ADvalor,?_adcRead
  5113  0022D0  C022  F020         	movff	adcRead@ADvalor+1,?_adcRead+1
  5114  0022D4  0012               	return		;funcret
  5115  0022D6                     __end_of_adcRead:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _adcInit *****************
  5119 ;; Defined at:
  5120 ;;		line 25 in file "adc.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5134 ;;      Params:         0       0       0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0
  5137 ;;      Totals:         0       0       0       0       0       0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 1
  5141 ;; This function calls:
  5142 ;;		_pinMode
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text33
  5149  002324                     __ptext33:
  5150                           	callstack 0
  5151  002324                     _adcInit:
  5152                           	callstack 29
  5153  002324                     
  5154                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  5155  002324  0E00               	movlw	0
  5156  002326  6E20               	movwf	(pinMode@pin+1)^0,c
  5157  002328  0E00               	movlw	0
  5158  00232A  6E1F               	movwf	pinMode@pin^0,c
  5159  00232C  0E00               	movlw	0
  5160  00232E  6E22               	movwf	(pinMode@type+1)^0,c
  5161  002330  0E01               	movlw	1
  5162  002332  6E21               	movwf	pinMode@type^0,c
  5163  002334  EC35  F00A         	call	_pinMode	;wreg free
  5164                           
  5165                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  5166  002338  0E00               	movlw	0
  5167  00233A  6E20               	movwf	(pinMode@pin+1)^0,c
  5168  00233C  0E01               	movlw	1
  5169  00233E  6E1F               	movwf	pinMode@pin^0,c
  5170  002340  0E00               	movlw	0
  5171  002342  6E22               	movwf	(pinMode@type+1)^0,c
  5172  002344  0E01               	movlw	1
  5173  002346  6E21               	movwf	pinMode@type^0,c
  5174  002348  EC35  F00A         	call	_pinMode	;wreg free
  5175                           
  5176                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  5177  00234C  0E00               	movlw	0
  5178  00234E  6E20               	movwf	(pinMode@pin+1)^0,c
  5179  002350  0E02               	movlw	2
  5180  002352  6E1F               	movwf	pinMode@pin^0,c
  5181  002354  0E00               	movlw	0
  5182  002356  6E22               	movwf	(pinMode@type+1)^0,c
  5183  002358  0E01               	movlw	1
  5184  00235A  6E21               	movwf	pinMode@type^0,c
  5185  00235C  EC35  F00A         	call	_pinMode	;wreg free
  5186  002360                     
  5187                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  5188  002360  80C2               	bsf	194,0,c	;volatile
  5189  002362                     
  5190                           ;adc.c: 33:     ADCON1 = 0b00001100;
  5191  002362  0E0C               	movlw	12
  5192  002364  6EC1               	movwf	193,c	;volatile
  5193  002366                     
  5194                           ;adc.c: 34:     ADCON2 = 0b10101010;
  5195  002366  0EAA               	movlw	170
  5196  002368  6EC0               	movwf	192,c	;volatile
  5197  00236A  0012               	return		;funcret
  5198  00236C                     __end_of_adcInit:
  5199                           	callstack 0
  5200                           
  5201 ;; *************** function _pinMode *****************
  5202 ;; Defined at:
  5203 ;;		line 54 in file "io.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  pin             2    0[COMRAM] int 
  5206 ;;  type            2    2[COMRAM] int 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5218 ;;      Params:         4       0       0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0
  5220 ;;      Temps:          2       0       0       0       0       0       0
  5221 ;;      Totals:         6       0       0       0       0       0       0
  5222 ;;Total ram usage:        6 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_adcInit
  5228 ;;		_kpInit
  5229 ;;		_lcdInit
  5230 ;;		_soInit
  5231 ;;		_ssdInit
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text34
  5236  00146A                     __ptext34:
  5237                           	callstack 0
  5238  00146A                     _pinMode:
  5239                           	callstack 28
  5240  00146A                     
  5241                           ;io.c: 56:     if(pin <8){
  5242  00146A  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  5243  00146C  EF43  F00A         	goto	u2030
  5244  001470  5020               	movf	(pinMode@pin+1)^0,w,c
  5245  001472  E107               	bnz	u2031
  5246  001474  0E08               	movlw	8
  5247  001476  5C1F               	subwf	pinMode@pin^0,w,c
  5248  001478  B0D8               	btfsc	status,0,c
  5249  00147A  EF41  F00A         	goto	u2031
  5250  00147E  EF43  F00A         	goto	u2030
  5251  001482                     u2031:
  5252  001482  EF6D  F00A         	goto	l2215
  5253  001486                     u2030:
  5254  001486                     
  5255                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5256  001486  5021               	movf	pinMode@type^0,w,c
  5257  001488  1022               	iorwf	(pinMode@type+1)^0,w,c
  5258  00148A  B4D8               	btfsc	status,2,c
  5259  00148C  EF4A  F00A         	goto	u2041
  5260  001490  EF4C  F00A         	goto	u2040
  5261  001494                     u2041:
  5262  001494  EF5C  F00A         	goto	l2213
  5263  001498                     u2040:
  5264  001498  C01F  F023         	movff	pinMode@pin,??_pinMode
  5265  00149C  0E01               	movlw	1
  5266  00149E  6E24               	movwf	(??_pinMode+1)^0,c
  5267  0014A0  2A23               	incf	??_pinMode^0,f,c
  5268  0014A2  EF55  F00A         	goto	u2054
  5269  0014A6                     u2055:
  5270  0014A6  90D8               	bcf	status,0,c
  5271  0014A8  3624               	rlcf	(??_pinMode+1)^0,f,c
  5272  0014AA                     u2054:
  5273  0014AA  2E23               	decfsz	??_pinMode^0,f,c
  5274  0014AC  EF53  F00A         	goto	u2055
  5275  0014B0  5024               	movf	(??_pinMode+1)^0,w,c
  5276  0014B2  1292               	iorwf	146,f,c	;volatile
  5277  0014B4  EF5B  F00B         	goto	l98
  5278  0014B8                     l2213:
  5279  0014B8  C01F  F023         	movff	pinMode@pin,??_pinMode
  5280  0014BC  0E01               	movlw	1
  5281  0014BE  6E24               	movwf	(??_pinMode+1)^0,c
  5282  0014C0  2A23               	incf	??_pinMode^0,f,c
  5283  0014C2  EF65  F00A         	goto	u2064
  5284  0014C6                     u2065:
  5285  0014C6  90D8               	bcf	status,0,c
  5286  0014C8  3624               	rlcf	(??_pinMode+1)^0,f,c
  5287  0014CA                     u2064:
  5288  0014CA  2E23               	decfsz	??_pinMode^0,f,c
  5289  0014CC  EF63  F00A         	goto	u2065
  5290  0014D0  5024               	movf	(??_pinMode+1)^0,w,c
  5291  0014D2  0AFF               	xorlw	255
  5292  0014D4  1692               	andwf	146,f,c	;volatile
  5293  0014D6  EF5B  F00B         	goto	l98
  5294  0014DA                     l2215:
  5295  0014DA  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  5296  0014DC  EF7B  F00A         	goto	u2070
  5297  0014E0  5020               	movf	(pinMode@pin+1)^0,w,c
  5298  0014E2  E107               	bnz	u2071
  5299  0014E4  0E10               	movlw	16
  5300  0014E6  5C1F               	subwf	pinMode@pin^0,w,c
  5301  0014E8  B0D8               	btfsc	status,0,c
  5302  0014EA  EF79  F00A         	goto	u2071
  5303  0014EE  EF7B  F00A         	goto	u2070
  5304  0014F2                     u2071:
  5305  0014F2  EFA9  F00A         	goto	l2223
  5306  0014F6                     u2070:
  5307  0014F6                     
  5308                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5309  0014F6  5021               	movf	pinMode@type^0,w,c
  5310  0014F8  1022               	iorwf	(pinMode@type+1)^0,w,c
  5311  0014FA  B4D8               	btfsc	status,2,c
  5312  0014FC  EF82  F00A         	goto	u2081
  5313  001500  EF84  F00A         	goto	u2080
  5314  001504                     u2081:
  5315  001504  EF96  F00A         	goto	l2221
  5316  001508                     u2080:
  5317  001508  C01F  F023         	movff	pinMode@pin,??_pinMode
  5318  00150C  0EF8               	movlw	-8
  5319  00150E  2623               	addwf	??_pinMode^0,f,c
  5320  001510  0E01               	movlw	1
  5321  001512  6E24               	movwf	(??_pinMode+1)^0,c
  5322  001514  2A23               	incf	??_pinMode^0,f,c
  5323  001516  EF8F  F00A         	goto	u2094
  5324  00151A                     u2095:
  5325  00151A  90D8               	bcf	status,0,c
  5326  00151C  3624               	rlcf	(??_pinMode+1)^0,f,c
  5327  00151E                     u2094:
  5328  00151E  2E23               	decfsz	??_pinMode^0,f,c
  5329  001520  EF8D  F00A         	goto	u2095
  5330  001524  5024               	movf	(??_pinMode+1)^0,w,c
  5331  001526  1293               	iorwf	147,f,c	;volatile
  5332  001528  EF5B  F00B         	goto	l98
  5333  00152C                     l2221:
  5334  00152C  C01F  F023         	movff	pinMode@pin,??_pinMode
  5335  001530  0EF8               	movlw	-8
  5336  001532  2623               	addwf	??_pinMode^0,f,c
  5337  001534  0E01               	movlw	1
  5338  001536  6E24               	movwf	(??_pinMode+1)^0,c
  5339  001538  2A23               	incf	??_pinMode^0,f,c
  5340  00153A  EFA1  F00A         	goto	u2104
  5341  00153E                     u2105:
  5342  00153E  90D8               	bcf	status,0,c
  5343  001540  3624               	rlcf	(??_pinMode+1)^0,f,c
  5344  001542                     u2104:
  5345  001542  2E23               	decfsz	??_pinMode^0,f,c
  5346  001544  EF9F  F00A         	goto	u2105
  5347  001548  5024               	movf	(??_pinMode+1)^0,w,c
  5348  00154A  0AFF               	xorlw	255
  5349  00154C  1693               	andwf	147,f,c	;volatile
  5350  00154E  EF5B  F00B         	goto	l98
  5351  001552                     l2223:
  5352  001552  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  5353  001554  EFB7  F00A         	goto	u2110
  5354  001558  5020               	movf	(pinMode@pin+1)^0,w,c
  5355  00155A  E107               	bnz	u2111
  5356  00155C  0E18               	movlw	24
  5357  00155E  5C1F               	subwf	pinMode@pin^0,w,c
  5358  001560  B0D8               	btfsc	status,0,c
  5359  001562  EFB5  F00A         	goto	u2111
  5360  001566  EFB7  F00A         	goto	u2110
  5361  00156A                     u2111:
  5362  00156A  EFE5  F00A         	goto	l2231
  5363  00156E                     u2110:
  5364  00156E                     
  5365                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5366  00156E  5021               	movf	pinMode@type^0,w,c
  5367  001570  1022               	iorwf	(pinMode@type+1)^0,w,c
  5368  001572  B4D8               	btfsc	status,2,c
  5369  001574  EFBE  F00A         	goto	u2121
  5370  001578  EFC0  F00A         	goto	u2120
  5371  00157C                     u2121:
  5372  00157C  EFD2  F00A         	goto	l2229
  5373  001580                     u2120:
  5374  001580  C01F  F023         	movff	pinMode@pin,??_pinMode
  5375  001584  0EF0               	movlw	-16
  5376  001586  2623               	addwf	??_pinMode^0,f,c
  5377  001588  0E01               	movlw	1
  5378  00158A  6E24               	movwf	(??_pinMode+1)^0,c
  5379  00158C  2A23               	incf	??_pinMode^0,f,c
  5380  00158E  EFCB  F00A         	goto	u2134
  5381  001592                     u2135:
  5382  001592  90D8               	bcf	status,0,c
  5383  001594  3624               	rlcf	(??_pinMode+1)^0,f,c
  5384  001596                     u2134:
  5385  001596  2E23               	decfsz	??_pinMode^0,f,c
  5386  001598  EFC9  F00A         	goto	u2135
  5387  00159C  5024               	movf	(??_pinMode+1)^0,w,c
  5388  00159E  1294               	iorwf	148,f,c	;volatile
  5389  0015A0  EF5B  F00B         	goto	l98
  5390  0015A4                     l2229:
  5391  0015A4  C01F  F023         	movff	pinMode@pin,??_pinMode
  5392  0015A8  0EF0               	movlw	-16
  5393  0015AA  2623               	addwf	??_pinMode^0,f,c
  5394  0015AC  0E01               	movlw	1
  5395  0015AE  6E24               	movwf	(??_pinMode+1)^0,c
  5396  0015B0  2A23               	incf	??_pinMode^0,f,c
  5397  0015B2  EFDD  F00A         	goto	u2144
  5398  0015B6                     u2145:
  5399  0015B6  90D8               	bcf	status,0,c
  5400  0015B8  3624               	rlcf	(??_pinMode+1)^0,f,c
  5401  0015BA                     u2144:
  5402  0015BA  2E23               	decfsz	??_pinMode^0,f,c
  5403  0015BC  EFDB  F00A         	goto	u2145
  5404  0015C0  5024               	movf	(??_pinMode+1)^0,w,c
  5405  0015C2  0AFF               	xorlw	255
  5406  0015C4  1694               	andwf	148,f,c	;volatile
  5407  0015C6  EF5B  F00B         	goto	l98
  5408  0015CA                     l2231:
  5409  0015CA  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  5410  0015CC  EFF3  F00A         	goto	u2150
  5411  0015D0  5020               	movf	(pinMode@pin+1)^0,w,c
  5412  0015D2  E107               	bnz	u2151
  5413  0015D4  0E20               	movlw	32
  5414  0015D6  5C1F               	subwf	pinMode@pin^0,w,c
  5415  0015D8  B0D8               	btfsc	status,0,c
  5416  0015DA  EFF1  F00A         	goto	u2151
  5417  0015DE  EFF3  F00A         	goto	u2150
  5418  0015E2                     u2151:
  5419  0015E2  EF21  F00B         	goto	l2239
  5420  0015E6                     u2150:
  5421  0015E6                     
  5422                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5423  0015E6  5021               	movf	pinMode@type^0,w,c
  5424  0015E8  1022               	iorwf	(pinMode@type+1)^0,w,c
  5425  0015EA  B4D8               	btfsc	status,2,c
  5426  0015EC  EFFA  F00A         	goto	u2161
  5427  0015F0  EFFC  F00A         	goto	u2160
  5428  0015F4                     u2161:
  5429  0015F4  EF0E  F00B         	goto	l2237
  5430  0015F8                     u2160:
  5431  0015F8  C01F  F023         	movff	pinMode@pin,??_pinMode
  5432  0015FC  0EE8               	movlw	-24
  5433  0015FE  2623               	addwf	??_pinMode^0,f,c
  5434  001600  0E01               	movlw	1
  5435  001602  6E24               	movwf	(??_pinMode+1)^0,c
  5436  001604  2A23               	incf	??_pinMode^0,f,c
  5437  001606  EF07  F00B         	goto	u2174
  5438  00160A                     u2175:
  5439  00160A  90D8               	bcf	status,0,c
  5440  00160C  3624               	rlcf	(??_pinMode+1)^0,f,c
  5441  00160E                     u2174:
  5442  00160E  2E23               	decfsz	??_pinMode^0,f,c
  5443  001610  EF05  F00B         	goto	u2175
  5444  001614  5024               	movf	(??_pinMode+1)^0,w,c
  5445  001616  1295               	iorwf	149,f,c	;volatile
  5446  001618  EF5B  F00B         	goto	l98
  5447  00161C                     l2237:
  5448  00161C  C01F  F023         	movff	pinMode@pin,??_pinMode
  5449  001620  0EE8               	movlw	-24
  5450  001622  2623               	addwf	??_pinMode^0,f,c
  5451  001624  0E01               	movlw	1
  5452  001626  6E24               	movwf	(??_pinMode+1)^0,c
  5453  001628  2A23               	incf	??_pinMode^0,f,c
  5454  00162A  EF19  F00B         	goto	u2184
  5455  00162E                     u2185:
  5456  00162E  90D8               	bcf	status,0,c
  5457  001630  3624               	rlcf	(??_pinMode+1)^0,f,c
  5458  001632                     u2184:
  5459  001632  2E23               	decfsz	??_pinMode^0,f,c
  5460  001634  EF17  F00B         	goto	u2185
  5461  001638  5024               	movf	(??_pinMode+1)^0,w,c
  5462  00163A  0AFF               	xorlw	255
  5463  00163C  1695               	andwf	149,f,c	;volatile
  5464  00163E  EF5B  F00B         	goto	l98
  5465  001642                     l2239:
  5466  001642  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  5467  001644  EF2F  F00B         	goto	u2190
  5468  001648  5020               	movf	(pinMode@pin+1)^0,w,c
  5469  00164A  E107               	bnz	u2191
  5470  00164C  0E28               	movlw	40
  5471  00164E  5C1F               	subwf	pinMode@pin^0,w,c
  5472  001650  B0D8               	btfsc	status,0,c
  5473  001652  EF2D  F00B         	goto	u2191
  5474  001656  EF2F  F00B         	goto	u2190
  5475  00165A                     u2191:
  5476  00165A  EF5B  F00B         	goto	l98
  5477  00165E                     u2190:
  5478  00165E                     
  5479                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5480  00165E  5021               	movf	pinMode@type^0,w,c
  5481  001660  1022               	iorwf	(pinMode@type+1)^0,w,c
  5482  001662  B4D8               	btfsc	status,2,c
  5483  001664  EF36  F00B         	goto	u2201
  5484  001668  EF38  F00B         	goto	u2200
  5485  00166C                     u2201:
  5486  00166C  EF4A  F00B         	goto	l2245
  5487  001670                     u2200:
  5488  001670  C01F  F023         	movff	pinMode@pin,??_pinMode
  5489  001674  0EE0               	movlw	-32
  5490  001676  2623               	addwf	??_pinMode^0,f,c
  5491  001678  0E01               	movlw	1
  5492  00167A  6E24               	movwf	(??_pinMode+1)^0,c
  5493  00167C  2A23               	incf	??_pinMode^0,f,c
  5494  00167E  EF43  F00B         	goto	u2214
  5495  001682                     u2215:
  5496  001682  90D8               	bcf	status,0,c
  5497  001684  3624               	rlcf	(??_pinMode+1)^0,f,c
  5498  001686                     u2214:
  5499  001686  2E23               	decfsz	??_pinMode^0,f,c
  5500  001688  EF41  F00B         	goto	u2215
  5501  00168C  5024               	movf	(??_pinMode+1)^0,w,c
  5502  00168E  1296               	iorwf	150,f,c	;volatile
  5503  001690  EF5B  F00B         	goto	l98
  5504  001694                     l2245:
  5505  001694  C01F  F023         	movff	pinMode@pin,??_pinMode
  5506  001698  0EE0               	movlw	-32
  5507  00169A  2623               	addwf	??_pinMode^0,f,c
  5508  00169C  0E01               	movlw	1
  5509  00169E  6E24               	movwf	(??_pinMode+1)^0,c
  5510  0016A0  2A23               	incf	??_pinMode^0,f,c
  5511  0016A2  EF55  F00B         	goto	u2224
  5512  0016A6                     u2225:
  5513  0016A6  90D8               	bcf	status,0,c
  5514  0016A8  3624               	rlcf	(??_pinMode+1)^0,f,c
  5515  0016AA                     u2224:
  5516  0016AA  2E23               	decfsz	??_pinMode^0,f,c
  5517  0016AC  EF53  F00B         	goto	u2225
  5518  0016B0  5024               	movf	(??_pinMode+1)^0,w,c
  5519  0016B2  0AFF               	xorlw	255
  5520  0016B4  1696               	andwf	150,f,c	;volatile
  5521  0016B6                     l98:
  5522  0016B6  0012               	return		;funcret
  5523  0016B8                     __end_of_pinMode:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function ___llmod *****************
  5527 ;; Defined at:
  5528 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  dividend        4   13[COMRAM] unsigned long 
  5531 ;;  divisor         4   17[COMRAM] unsigned long 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  counter         1   21[COMRAM] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  4   13[COMRAM] unsigned long 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5543 ;;      Params:         8       0       0       0       0       0       0
  5544 ;;      Locals:         1       0       0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0
  5546 ;;      Totals:         9       0       0       0       0       0       0
  5547 ;;Total ram usage:        9 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text35
  5557  001FBC                     __ptext35:
  5558                           	callstack 0
  5559  001FBC                     ___llmod:
  5560                           	callstack 30
  5561  001FBC  5030               	movf	___llmod@divisor^0,w,c
  5562  001FBE  1031               	iorwf	(___llmod@divisor+1)^0,w,c
  5563  001FC0  1032               	iorwf	(___llmod@divisor+2)^0,w,c
  5564  001FC2  1033               	iorwf	(___llmod@divisor+3)^0,w,c
  5565  001FC4  B4D8               	btfsc	status,2,c
  5566  001FC6  EFE7  F00F         	goto	u3061
  5567  001FCA  EFE9  F00F         	goto	u3060
  5568  001FCE                     u3061:
  5569  001FCE  EF19  F010         	goto	l874
  5570  001FD2                     u3060:
  5571  001FD2  0E01               	movlw	1
  5572  001FD4  6E34               	movwf	___llmod@counter^0,c
  5573  001FD6  EFF3  F00F         	goto	l2819
  5574  001FDA                     l2817:
  5575  001FDA  90D8               	bcf	status,0,c
  5576  001FDC  3630               	rlcf	___llmod@divisor^0,f,c
  5577  001FDE  3631               	rlcf	(___llmod@divisor+1)^0,f,c
  5578  001FE0  3632               	rlcf	(___llmod@divisor+2)^0,f,c
  5579  001FE2  3633               	rlcf	(___llmod@divisor+3)^0,f,c
  5580  001FE4  2A34               	incf	___llmod@counter^0,f,c
  5581  001FE6                     l2819:
  5582  001FE6  AE33               	btfss	(___llmod@divisor+3)^0,7,c
  5583  001FE8  EFF8  F00F         	goto	u3071
  5584  001FEC  EFFA  F00F         	goto	u3070
  5585  001FF0                     u3071:
  5586  001FF0  EFED  F00F         	goto	l2817
  5587  001FF4                     u3070:
  5588  001FF4                     l2821:
  5589  001FF4  5030               	movf	___llmod@divisor^0,w,c
  5590  001FF6  5C2C               	subwf	___llmod@dividend^0,w,c
  5591  001FF8  5031               	movf	(___llmod@divisor+1)^0,w,c
  5592  001FFA  582D               	subwfb	(___llmod@dividend+1)^0,w,c
  5593  001FFC  5032               	movf	(___llmod@divisor+2)^0,w,c
  5594  001FFE  582E               	subwfb	(___llmod@dividend+2)^0,w,c
  5595  002000  5033               	movf	(___llmod@divisor+3)^0,w,c
  5596  002002  582F               	subwfb	(___llmod@dividend+3)^0,w,c
  5597  002004  A0D8               	btfss	status,0,c
  5598  002006  EF07  F010         	goto	u3081
  5599  00200A  EF09  F010         	goto	u3080
  5600  00200E                     u3081:
  5601  00200E  EF11  F010         	goto	l2825
  5602  002012                     u3080:
  5603  002012  5030               	movf	___llmod@divisor^0,w,c
  5604  002014  5E2C               	subwf	___llmod@dividend^0,f,c
  5605  002016  5031               	movf	(___llmod@divisor+1)^0,w,c
  5606  002018  5A2D               	subwfb	(___llmod@dividend+1)^0,f,c
  5607  00201A  5032               	movf	(___llmod@divisor+2)^0,w,c
  5608  00201C  5A2E               	subwfb	(___llmod@dividend+2)^0,f,c
  5609  00201E  5033               	movf	(___llmod@divisor+3)^0,w,c
  5610  002020  5A2F               	subwfb	(___llmod@dividend+3)^0,f,c
  5611  002022                     l2825:
  5612  002022  90D8               	bcf	status,0,c
  5613  002024  3233               	rrcf	(___llmod@divisor+3)^0,f,c
  5614  002026  3232               	rrcf	(___llmod@divisor+2)^0,f,c
  5615  002028  3231               	rrcf	(___llmod@divisor+1)^0,f,c
  5616  00202A  3230               	rrcf	___llmod@divisor^0,f,c
  5617  00202C  2E34               	decfsz	___llmod@counter^0,f,c
  5618  00202E  EFFA  F00F         	goto	l2821
  5619  002032                     l874:
  5620  002032  C02C  F02C         	movff	___llmod@dividend,?___llmod
  5621  002036  C02D  F02D         	movff	___llmod@dividend+1,?___llmod+1
  5622  00203A  C02E  F02E         	movff	___llmod@dividend+2,?___llmod+2
  5623  00203E  C02F  F02F         	movff	___llmod@dividend+3,?___llmod+3
  5624  002042  0012               	return		;funcret
  5625  002044                     __end_of___llmod:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function ___lldiv *****************
  5629 ;; Defined at:
  5630 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  dividend        4    0[COMRAM] unsigned long 
  5633 ;;  divisor         4    4[COMRAM] unsigned long 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  quotient        4    8[COMRAM] unsigned long 
  5636 ;;  counter         1   12[COMRAM] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  4    0[COMRAM] unsigned long 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5646 ;;      Params:         8       0       0       0       0       0       0
  5647 ;;      Locals:         5       0       0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0
  5649 ;;      Totals:        13       0       0       0       0       0       0
  5650 ;;Total ram usage:       13 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_main
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text36
  5660  001E90                     __ptext36:
  5661                           	callstack 0
  5662  001E90                     ___lldiv:
  5663                           	callstack 30
  5664  001E90  0E00               	movlw	0
  5665  001E92  6E27               	movwf	___lldiv@quotient^0,c
  5666  001E94  0E00               	movlw	0
  5667  001E96  6E28               	movwf	(___lldiv@quotient+1)^0,c
  5668  001E98  0E00               	movlw	0
  5669  001E9A  6E29               	movwf	(___lldiv@quotient+2)^0,c
  5670  001E9C  0E00               	movlw	0
  5671  001E9E  6E2A               	movwf	(___lldiv@quotient+3)^0,c
  5672  001EA0  5023               	movf	___lldiv@divisor^0,w,c
  5673  001EA2  1024               	iorwf	(___lldiv@divisor+1)^0,w,c
  5674  001EA4  1025               	iorwf	(___lldiv@divisor+2)^0,w,c
  5675  001EA6  1026               	iorwf	(___lldiv@divisor+3)^0,w,c
  5676  001EA8  B4D8               	btfsc	status,2,c
  5677  001EAA  EF59  F00F         	goto	u2591
  5678  001EAE  EF5B  F00F         	goto	u2590
  5679  001EB2                     u2591:
  5680  001EB2  EF91  F00F         	goto	l481
  5681  001EB6                     u2590:
  5682  001EB6  0E01               	movlw	1
  5683  001EB8  6E2B               	movwf	___lldiv@counter^0,c
  5684  001EBA  EF65  F00F         	goto	l2575
  5685  001EBE                     l2573:
  5686  001EBE  90D8               	bcf	status,0,c
  5687  001EC0  3623               	rlcf	___lldiv@divisor^0,f,c
  5688  001EC2  3624               	rlcf	(___lldiv@divisor+1)^0,f,c
  5689  001EC4  3625               	rlcf	(___lldiv@divisor+2)^0,f,c
  5690  001EC6  3626               	rlcf	(___lldiv@divisor+3)^0,f,c
  5691  001EC8  2A2B               	incf	___lldiv@counter^0,f,c
  5692  001ECA                     l2575:
  5693  001ECA  AE26               	btfss	(___lldiv@divisor+3)^0,7,c
  5694  001ECC  EF6A  F00F         	goto	u2601
  5695  001ED0  EF6C  F00F         	goto	u2600
  5696  001ED4                     u2601:
  5697  001ED4  EF5F  F00F         	goto	l2573
  5698  001ED8                     u2600:
  5699  001ED8                     l2577:
  5700  001ED8  90D8               	bcf	status,0,c
  5701  001EDA  3627               	rlcf	___lldiv@quotient^0,f,c
  5702  001EDC  3628               	rlcf	(___lldiv@quotient+1)^0,f,c
  5703  001EDE  3629               	rlcf	(___lldiv@quotient+2)^0,f,c
  5704  001EE0  362A               	rlcf	(___lldiv@quotient+3)^0,f,c
  5705  001EE2  5023               	movf	___lldiv@divisor^0,w,c
  5706  001EE4  5C1F               	subwf	___lldiv@dividend^0,w,c
  5707  001EE6  5024               	movf	(___lldiv@divisor+1)^0,w,c
  5708  001EE8  5820               	subwfb	(___lldiv@dividend+1)^0,w,c
  5709  001EEA  5025               	movf	(___lldiv@divisor+2)^0,w,c
  5710  001EEC  5821               	subwfb	(___lldiv@dividend+2)^0,w,c
  5711  001EEE  5026               	movf	(___lldiv@divisor+3)^0,w,c
  5712  001EF0  5822               	subwfb	(___lldiv@dividend+3)^0,w,c
  5713  001EF2  A0D8               	btfss	status,0,c
  5714  001EF4  EF7E  F00F         	goto	u2611
  5715  001EF8  EF80  F00F         	goto	u2610
  5716  001EFC                     u2611:
  5717  001EFC  EF89  F00F         	goto	l2585
  5718  001F00                     u2610:
  5719  001F00  5023               	movf	___lldiv@divisor^0,w,c
  5720  001F02  5E1F               	subwf	___lldiv@dividend^0,f,c
  5721  001F04  5024               	movf	(___lldiv@divisor+1)^0,w,c
  5722  001F06  5A20               	subwfb	(___lldiv@dividend+1)^0,f,c
  5723  001F08  5025               	movf	(___lldiv@divisor+2)^0,w,c
  5724  001F0A  5A21               	subwfb	(___lldiv@dividend+2)^0,f,c
  5725  001F0C  5026               	movf	(___lldiv@divisor+3)^0,w,c
  5726  001F0E  5A22               	subwfb	(___lldiv@dividend+3)^0,f,c
  5727  001F10  8027               	bsf	___lldiv@quotient^0,0,c
  5728  001F12                     l2585:
  5729  001F12  90D8               	bcf	status,0,c
  5730  001F14  3226               	rrcf	(___lldiv@divisor+3)^0,f,c
  5731  001F16  3225               	rrcf	(___lldiv@divisor+2)^0,f,c
  5732  001F18  3224               	rrcf	(___lldiv@divisor+1)^0,f,c
  5733  001F1A  3223               	rrcf	___lldiv@divisor^0,f,c
  5734  001F1C  2E2B               	decfsz	___lldiv@counter^0,f,c
  5735  001F1E  EF6C  F00F         	goto	l2577
  5736  001F22                     l481:
  5737  001F22  C027  F01F         	movff	___lldiv@quotient,?___lldiv
  5738  001F26  C028  F020         	movff	___lldiv@quotient+1,?___lldiv+1
  5739  001F2A  C029  F021         	movff	___lldiv@quotient+2,?___lldiv+2
  5740  001F2E  C02A  F022         	movff	___lldiv@quotient+3,?___lldiv+3
  5741  001F32  0012               	return		;funcret
  5742  001F34                     __end_of___lldiv:
  5743                           	callstack 0
  5744                           
  5745 ;; *************** function ___flge *****************
  5746 ;; Defined at:
  5747 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  ff1             4    0[COMRAM] unsigned long 
  5750 ;;  ff2             4    4[COMRAM] unsigned long 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;		None               void
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5762 ;;      Params:         8       0       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0
  5764 ;;      Temps:          4       0       0       0       0       0       0
  5765 ;;      Totals:        12       0       0       0       0       0       0
  5766 ;;Total ram usage:       12 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_main
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text37
  5776  001CD8                     __ptext37:
  5777                           	callstack 0
  5778  001CD8                     ___flge:
  5779                           	callstack 30
  5780  001CD8  0E00               	movlw	0
  5781  001CDA  141F               	andwf	___flge@ff1^0,w,c
  5782  001CDC  6E27               	movwf	??___flge^0,c
  5783  001CDE  0E00               	movlw	0
  5784  001CE0  1420               	andwf	(___flge@ff1+1)^0,w,c
  5785  001CE2  6E28               	movwf	(??___flge+1)^0,c
  5786  001CE4  0E80               	movlw	128
  5787  001CE6  1421               	andwf	(___flge@ff1+2)^0,w,c
  5788  001CE8  6E29               	movwf	(??___flge+2)^0,c
  5789  001CEA  0E7F               	movlw	127
  5790  001CEC  1422               	andwf	(___flge@ff1+3)^0,w,c
  5791  001CEE  6E2A               	movwf	(??___flge+3)^0,c
  5792  001CF0  5027               	movf	??___flge^0,w,c
  5793  001CF2  1028               	iorwf	(??___flge+1)^0,w,c
  5794  001CF4  1029               	iorwf	(??___flge+2)^0,w,c
  5795  001CF6  102A               	iorwf	(??___flge+3)^0,w,c
  5796  001CF8  A4D8               	btfss	status,2,c
  5797  001CFA  EF81  F00E         	goto	u3011
  5798  001CFE  EF83  F00E         	goto	u3010
  5799  001D02                     u3011:
  5800  001D02  EF8B  F00E         	goto	l2795
  5801  001D06                     u3010:
  5802  001D06  0E00               	movlw	0
  5803  001D08  6E1F               	movwf	___flge@ff1^0,c
  5804  001D0A  0E00               	movlw	0
  5805  001D0C  6E20               	movwf	(___flge@ff1+1)^0,c
  5806  001D0E  0E00               	movlw	0
  5807  001D10  6E21               	movwf	(___flge@ff1+2)^0,c
  5808  001D12  0E00               	movlw	0
  5809  001D14  6E22               	movwf	(___flge@ff1+3)^0,c
  5810  001D16                     l2795:
  5811  001D16  0E00               	movlw	0
  5812  001D18  1423               	andwf	___flge@ff2^0,w,c
  5813  001D1A  6E27               	movwf	??___flge^0,c
  5814  001D1C  0E00               	movlw	0
  5815  001D1E  1424               	andwf	(___flge@ff2+1)^0,w,c
  5816  001D20  6E28               	movwf	(??___flge+1)^0,c
  5817  001D22  0E80               	movlw	128
  5818  001D24  1425               	andwf	(___flge@ff2+2)^0,w,c
  5819  001D26  6E29               	movwf	(??___flge+2)^0,c
  5820  001D28  0E7F               	movlw	127
  5821  001D2A  1426               	andwf	(___flge@ff2+3)^0,w,c
  5822  001D2C  6E2A               	movwf	(??___flge+3)^0,c
  5823  001D2E  5027               	movf	??___flge^0,w,c
  5824  001D30  1028               	iorwf	(??___flge+1)^0,w,c
  5825  001D32  1029               	iorwf	(??___flge+2)^0,w,c
  5826  001D34  102A               	iorwf	(??___flge+3)^0,w,c
  5827  001D36  A4D8               	btfss	status,2,c
  5828  001D38  EFA0  F00E         	goto	u3021
  5829  001D3C  EFA2  F00E         	goto	u3020
  5830  001D40                     u3021:
  5831  001D40  EFAA  F00E         	goto	l2799
  5832  001D44                     u3020:
  5833  001D44  0E00               	movlw	0
  5834  001D46  6E23               	movwf	___flge@ff2^0,c
  5835  001D48  0E00               	movlw	0
  5836  001D4A  6E24               	movwf	(___flge@ff2+1)^0,c
  5837  001D4C  0E00               	movlw	0
  5838  001D4E  6E25               	movwf	(___flge@ff2+2)^0,c
  5839  001D50  0E00               	movlw	0
  5840  001D52  6E26               	movwf	(___flge@ff2+3)^0,c
  5841  001D54                     l2799:
  5842  001D54  AE22               	btfss	(___flge@ff1+3)^0,7,c
  5843  001D56  EFAF  F00E         	goto	u3031
  5844  001D5A  EFB1  F00E         	goto	u3030
  5845  001D5E                     u3031:
  5846  001D5E  EFBA  F00E         	goto	l2803
  5847  001D62                     u3030:
  5848  001D62  6C1F               	negf	___flge@ff1^0,c
  5849  001D64  1E20               	comf	(___flge@ff1+1)^0,f,c
  5850  001D66  B0D8               	btfsc	status,0,c
  5851  001D68  2A20               	incf	(___flge@ff1+1)^0,f,c
  5852  001D6A  1E21               	comf	(___flge@ff1+2)^0,f,c
  5853  001D6C  B0D8               	btfsc	status,0,c
  5854  001D6E  2A21               	incf	(___flge@ff1+2)^0,f,c
  5855  001D70  0E80               	movlw	128
  5856  001D72  5622               	subfwb	(___flge@ff1+3)^0,f,c
  5857  001D74                     l2803:
  5858  001D74  AE26               	btfss	(___flge@ff2+3)^0,7,c
  5859  001D76  EFBF  F00E         	goto	u3041
  5860  001D7A  EFC1  F00E         	goto	u3040
  5861  001D7E                     u3041:
  5862  001D7E  EFCA  F00E         	goto	l719
  5863  001D82                     u3040:
  5864  001D82  6C23               	negf	___flge@ff2^0,c
  5865  001D84  1E24               	comf	(___flge@ff2+1)^0,f,c
  5866  001D86  B0D8               	btfsc	status,0,c
  5867  001D88  2A24               	incf	(___flge@ff2+1)^0,f,c
  5868  001D8A  1E25               	comf	(___flge@ff2+2)^0,f,c
  5869  001D8C  B0D8               	btfsc	status,0,c
  5870  001D8E  2A25               	incf	(___flge@ff2+2)^0,f,c
  5871  001D90  0E80               	movlw	128
  5872  001D92  5626               	subfwb	(___flge@ff2+3)^0,f,c
  5873  001D94                     l719:
  5874  001D94  0E00               	movlw	0
  5875  001D96  1A1F               	xorwf	___flge@ff1^0,f,c
  5876  001D98  0E00               	movlw	0
  5877  001D9A  1A20               	xorwf	(___flge@ff1+1)^0,f,c
  5878  001D9C  0E00               	movlw	0
  5879  001D9E  1A21               	xorwf	(___flge@ff1+2)^0,f,c
  5880  001DA0  0E80               	movlw	128
  5881  001DA2  1A22               	xorwf	(___flge@ff1+3)^0,f,c
  5882  001DA4  0E00               	movlw	0
  5883  001DA6  1A23               	xorwf	___flge@ff2^0,f,c
  5884  001DA8  0E00               	movlw	0
  5885  001DAA  1A24               	xorwf	(___flge@ff2+1)^0,f,c
  5886  001DAC  0E00               	movlw	0
  5887  001DAE  1A25               	xorwf	(___flge@ff2+2)^0,f,c
  5888  001DB0  0E80               	movlw	128
  5889  001DB2  1A26               	xorwf	(___flge@ff2+3)^0,f,c
  5890  001DB4  5023               	movf	___flge@ff2^0,w,c
  5891  001DB6  5C1F               	subwf	___flge@ff1^0,w,c
  5892  001DB8  5024               	movf	(___flge@ff2+1)^0,w,c
  5893  001DBA  5820               	subwfb	(___flge@ff1+1)^0,w,c
  5894  001DBC  5025               	movf	(___flge@ff2+2)^0,w,c
  5895  001DBE  5821               	subwfb	(___flge@ff1+2)^0,w,c
  5896  001DC0  5026               	movf	(___flge@ff2+3)^0,w,c
  5897  001DC2  5822               	subwfb	(___flge@ff1+3)^0,w,c
  5898  001DC4  B0D8               	btfsc	status,0,c
  5899  001DC6  EFE7  F00E         	goto	u3051
  5900  001DCA  EFE9  F00E         	goto	u3050
  5901  001DCE                     u3051:
  5902  001DCE  EFEC  F00E         	goto	l2809
  5903  001DD2                     u3050:
  5904  001DD2  90D8               	bcf	status,0,c
  5905  001DD4  EFED  F00E         	goto	l724
  5906  001DD8                     l2809:
  5907  001DD8  80D8               	bsf	status,0,c
  5908  001DDA                     l724:
  5909  001DDA  0012               	return		;funcret
  5910  001DDC                     __end_of___flge:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function ___fladd *****************
  5914 ;; Defined at:
  5915 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  b               4    0[COMRAM] unsigned long 
  5918 ;;  a               4    4[COMRAM] unsigned long 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  grs             1   15[COMRAM] unsigned char 
  5921 ;;  bexp            1   14[COMRAM] unsigned char 
  5922 ;;  aexp            1   13[COMRAM] unsigned char 
  5923 ;;  signs           1   12[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  4    0[COMRAM] unsigned char 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5933 ;;      Params:         8       0       0       0       0       0       0
  5934 ;;      Locals:         4       0       0       0       0       0       0
  5935 ;;      Temps:          4       0       0       0       0       0       0
  5936 ;;      Totals:        16       0       0       0       0       0       0
  5937 ;;Total ram usage:       16 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text38
  5947  000D5C                     __ptext38:
  5948                           	callstack 0
  5949  000D5C                     ___fladd:
  5950                           	callstack 30
  5951  000D5C  5022               	movf	(___fladd@b+3)^0,w,c
  5952  000D5E  0B80               	andlw	128
  5953  000D60  6E2B               	movwf	___fladd@signs^0,c
  5954  000D62  5022               	movf	(___fladd@b+3)^0,w,c
  5955  000D64  2422               	addwf	(___fladd@b+3)^0,w,c
  5956  000D66  6E2D               	movwf	___fladd@bexp^0,c
  5957  000D68  AE21               	btfss	(___fladd@b+2)^0,7,c
  5958  000D6A  EFB9  F006         	goto	u2621
  5959  000D6E  EFBB  F006         	goto	u2620
  5960  000D72                     u2621:
  5961  000D72  EFBC  F006         	goto	l2595
  5962  000D76                     u2620:
  5963  000D76  802D               	bsf	___fladd@bexp^0,0,c
  5964  000D78                     l2595:
  5965  000D78  502D               	movf	___fladd@bexp^0,w,c
  5966  000D7A  B4D8               	btfsc	status,2,c
  5967  000D7C  EFC2  F006         	goto	u2631
  5968  000D80  EFC4  F006         	goto	u2630
  5969  000D84                     u2631:
  5970  000D84  EFD9  F006         	goto	l2605
  5971  000D88                     u2630:
  5972  000D88  282D               	incf	___fladd@bexp^0,w,c
  5973  000D8A  A4D8               	btfss	status,2,c
  5974  000D8C  EFCA  F006         	goto	u2641
  5975  000D90  EFCC  F006         	goto	u2640
  5976  000D94                     u2641:
  5977  000D94  EFD4  F006         	goto	l2601
  5978  000D98                     u2640:
  5979  000D98  0E00               	movlw	0
  5980  000D9A  6E1F               	movwf	___fladd@b^0,c
  5981  000D9C  0E00               	movlw	0
  5982  000D9E  6E20               	movwf	(___fladd@b+1)^0,c
  5983  000DA0  0E00               	movlw	0
  5984  000DA2  6E21               	movwf	(___fladd@b+2)^0,c
  5985  000DA4  0E00               	movlw	0
  5986  000DA6  6E22               	movwf	(___fladd@b+3)^0,c
  5987  000DA8                     l2601:
  5988  000DA8  8E21               	bsf	(___fladd@b+2)^0,7,c
  5989  000DAA  0E00               	movlw	0
  5990  000DAC  6E22               	movwf	(___fladd@b+3)^0,c
  5991  000DAE  EFE1  F006         	goto	l2607
  5992  000DB2                     l2605:
  5993  000DB2  0E00               	movlw	0
  5994  000DB4  6E1F               	movwf	___fladd@b^0,c
  5995  000DB6  0E00               	movlw	0
  5996  000DB8  6E20               	movwf	(___fladd@b+1)^0,c
  5997  000DBA  0E00               	movlw	0
  5998  000DBC  6E21               	movwf	(___fladd@b+2)^0,c
  5999  000DBE  0E00               	movlw	0
  6000  000DC0  6E22               	movwf	(___fladd@b+3)^0,c
  6001  000DC2                     l2607:
  6002  000DC2  5026               	movf	(___fladd@a+3)^0,w,c
  6003  000DC4  0B80               	andlw	128
  6004  000DC6  6E2C               	movwf	___fladd@aexp^0,c
  6005  000DC8  502B               	movf	___fladd@signs^0,w,c
  6006  000DCA  182C               	xorwf	___fladd@aexp^0,w,c
  6007  000DCC  B4D8               	btfsc	status,2,c
  6008  000DCE  EFEB  F006         	goto	u2651
  6009  000DD2  EFED  F006         	goto	u2650
  6010  000DD6                     u2651:
  6011  000DD6  EFEE  F006         	goto	l2613
  6012  000DDA                     u2650:
  6013  000DDA  8C2B               	bsf	___fladd@signs^0,6,c
  6014  000DDC                     l2613:
  6015  000DDC  5026               	movf	(___fladd@a+3)^0,w,c
  6016  000DDE  2426               	addwf	(___fladd@a+3)^0,w,c
  6017  000DE0  6E2C               	movwf	___fladd@aexp^0,c
  6018  000DE2  AE25               	btfss	(___fladd@a+2)^0,7,c
  6019  000DE4  EFF6  F006         	goto	u2661
  6020  000DE8  EFF8  F006         	goto	u2660
  6021  000DEC                     u2661:
  6022  000DEC  EFF9  F006         	goto	l2619
  6023  000DF0                     u2660:
  6024  000DF0  802C               	bsf	___fladd@aexp^0,0,c
  6025  000DF2                     l2619:
  6026  000DF2  502C               	movf	___fladd@aexp^0,w,c
  6027  000DF4  B4D8               	btfsc	status,2,c
  6028  000DF6  EFFF  F006         	goto	u2671
  6029  000DFA  EF01  F007         	goto	u2670
  6030  000DFE                     u2671:
  6031  000DFE  EF16  F007         	goto	l2629
  6032  000E02                     u2670:
  6033  000E02  282C               	incf	___fladd@aexp^0,w,c
  6034  000E04  A4D8               	btfss	status,2,c
  6035  000E06  EF07  F007         	goto	u2681
  6036  000E0A  EF09  F007         	goto	u2680
  6037  000E0E                     u2681:
  6038  000E0E  EF11  F007         	goto	l2625
  6039  000E12                     u2680:
  6040  000E12  0E00               	movlw	0
  6041  000E14  6E23               	movwf	___fladd@a^0,c
  6042  000E16  0E00               	movlw	0
  6043  000E18  6E24               	movwf	(___fladd@a+1)^0,c
  6044  000E1A  0E00               	movlw	0
  6045  000E1C  6E25               	movwf	(___fladd@a+2)^0,c
  6046  000E1E  0E00               	movlw	0
  6047  000E20  6E26               	movwf	(___fladd@a+3)^0,c
  6048  000E22                     l2625:
  6049  000E22  8E25               	bsf	(___fladd@a+2)^0,7,c
  6050  000E24  0E00               	movlw	0
  6051  000E26  6E26               	movwf	(___fladd@a+3)^0,c
  6052  000E28  EF1E  F007         	goto	l2631
  6053  000E2C                     l2629:
  6054  000E2C  0E00               	movlw	0
  6055  000E2E  6E23               	movwf	___fladd@a^0,c
  6056  000E30  0E00               	movlw	0
  6057  000E32  6E24               	movwf	(___fladd@a+1)^0,c
  6058  000E34  0E00               	movlw	0
  6059  000E36  6E25               	movwf	(___fladd@a+2)^0,c
  6060  000E38  0E00               	movlw	0
  6061  000E3A  6E26               	movwf	(___fladd@a+3)^0,c
  6062  000E3C                     l2631:
  6063  000E3C  502D               	movf	___fladd@bexp^0,w,c
  6064  000E3E  5C2C               	subwf	___fladd@aexp^0,w,c
  6065  000E40  B0D8               	btfsc	status,0,c
  6066  000E42  EF25  F007         	goto	u2691
  6067  000E46  EF27  F007         	goto	u2690
  6068  000E4A                     u2691:
  6069  000E4A  EF4E  F007         	goto	l2667
  6070  000E4E                     u2690:
  6071  000E4E  AC2B               	btfss	___fladd@signs^0,6,c
  6072  000E50  EF2C  F007         	goto	u2701
  6073  000E54  EF2E  F007         	goto	u2700
  6074  000E58                     u2701:
  6075  000E58  EF30  F007         	goto	l2637
  6076  000E5C                     u2700:
  6077  000E5C  0E80               	movlw	128
  6078  000E5E  1A2B               	xorwf	___fladd@signs^0,f,c
  6079  000E60                     l2637:
  6080  000E60  C02D  F02E         	movff	___fladd@bexp,___fladd@grs
  6081  000E64  C02C  F02D         	movff	___fladd@aexp,___fladd@bexp
  6082  000E68  C02E  F02C         	movff	___fladd@grs,___fladd@aexp
  6083  000E6C  C01F  F02E         	movff	___fladd@b,___fladd@grs
  6084  000E70  C023  F01F         	movff	___fladd@a,___fladd@b
  6085  000E74  C02E  F023         	movff	___fladd@grs,___fladd@a
  6086  000E78  C020  F02E         	movff	___fladd@b+1,___fladd@grs
  6087  000E7C  C024  F020         	movff	___fladd@a+1,___fladd@b+1
  6088  000E80  C02E  F024         	movff	___fladd@grs,___fladd@a+1
  6089  000E84  C021  F02E         	movff	___fladd@b+2,___fladd@grs
  6090  000E88  C025  F021         	movff	___fladd@a+2,___fladd@b+2
  6091  000E8C  C02E  F025         	movff	___fladd@grs,___fladd@a+2
  6092  000E90  C022  F02E         	movff	___fladd@b+3,___fladd@grs
  6093  000E94  C026  F022         	movff	___fladd@a+3,___fladd@b+3
  6094  000E98  C02E  F026         	movff	___fladd@grs,___fladd@a+3
  6095  000E9C                     l2667:
  6096  000E9C  0E00               	movlw	0
  6097  000E9E  6E2E               	movwf	___fladd@grs^0,c
  6098  000EA0  502D               	movf	___fladd@bexp^0,w,c
  6099  000EA2  C02C  F027         	movff	___fladd@aexp,??___fladd
  6100  000EA6  6A28               	clrf	(??___fladd+1)^0,c
  6101  000EA8  5E27               	subwf	??___fladd^0,f,c
  6102  000EAA  0E00               	movlw	0
  6103  000EAC  5A28               	subwfb	(??___fladd+1)^0,f,c
  6104  000EAE  BE28               	btfsc	(??___fladd+1)^0,7,c
  6105  000EB0  EF63  F007         	goto	u2711
  6106  000EB4  5028               	movf	(??___fladd+1)^0,w,c
  6107  000EB6  E109               	bnz	u2710
  6108  000EB8  0E1A               	movlw	26
  6109  000EBA  5C27               	subwf	??___fladd^0,w,c
  6110  000EBC  A0D8               	btfss	status,0,c
  6111  000EBE  EF63  F007         	goto	u2711
  6112  000EC2  EF65  F007         	goto	u2710
  6113  000EC6                     u2711:
  6114  000EC6  EF9C  F007         	goto	l983
  6115  000ECA                     u2710:
  6116  000ECA  501F               	movf	___fladd@b^0,w,c
  6117  000ECC  1020               	iorwf	(___fladd@b+1)^0,w,c
  6118  000ECE  1021               	iorwf	(___fladd@b+2)^0,w,c
  6119  000ED0  1022               	iorwf	(___fladd@b+3)^0,w,c
  6120  000ED2  A4D8               	btfss	status,2,c
  6121  000ED4  EF6E  F007         	goto	u2721
  6122  000ED8  EF71  F007         	goto	u2720
  6123  000EDC                     u2721:
  6124  000EDC  0E01               	movlw	1
  6125  000EDE  EF72  F007         	goto	u2730
  6126  000EE2                     u2720:
  6127  000EE2  0E00               	movlw	0
  6128  000EE4                     u2730:
  6129  000EE4  6E2E               	movwf	___fladd@grs^0,c
  6130  000EE6  0E00               	movlw	0
  6131  000EE8  6E1F               	movwf	___fladd@b^0,c
  6132  000EEA  0E00               	movlw	0
  6133  000EEC  6E20               	movwf	(___fladd@b+1)^0,c
  6134  000EEE  0E00               	movlw	0
  6135  000EF0  6E21               	movwf	(___fladd@b+2)^0,c
  6136  000EF2  0E00               	movlw	0
  6137  000EF4  6E22               	movwf	(___fladd@b+3)^0,c
  6138  000EF6  C02C  F02D         	movff	___fladd@aexp,___fladd@bexp
  6139  000EFA  EFA5  F007         	goto	l982
  6140  000EFE                     l984:
  6141  000EFE  A02E               	btfss	___fladd@grs^0,0,c
  6142  000F00  EF84  F007         	goto	u2741
  6143  000F04  EF86  F007         	goto	u2740
  6144  000F08                     u2741:
  6145  000F08  EF8C  F007         	goto	l2679
  6146  000F0C                     u2740:
  6147  000F0C  90D8               	bcf	status,0,c
  6148  000F0E  302E               	rrcf	___fladd@grs^0,w,c
  6149  000F10  0901               	iorlw	1
  6150  000F12  6E2E               	movwf	___fladd@grs^0,c
  6151  000F14  EF8E  F007         	goto	l2681
  6152  000F18                     l2679:
  6153  000F18  90D8               	bcf	status,0,c
  6154  000F1A  322E               	rrcf	___fladd@grs^0,f,c
  6155  000F1C                     l2681:
  6156  000F1C  A01F               	btfss	___fladd@b^0,0,c
  6157  000F1E  EF93  F007         	goto	u2751
  6158  000F22  EF95  F007         	goto	u2750
  6159  000F26                     u2751:
  6160  000F26  EF96  F007         	goto	l2685
  6161  000F2A                     u2750:
  6162  000F2A  8E2E               	bsf	___fladd@grs^0,7,c
  6163  000F2C                     l2685:
  6164  000F2C  3422               	rlcf	(___fladd@b+3)^0,w,c
  6165  000F2E  3222               	rrcf	(___fladd@b+3)^0,f,c
  6166  000F30  3221               	rrcf	(___fladd@b+2)^0,f,c
  6167  000F32  3220               	rrcf	(___fladd@b+1)^0,f,c
  6168  000F34  321F               	rrcf	___fladd@b^0,f,c
  6169  000F36  2A2D               	incf	___fladd@bexp^0,f,c
  6170  000F38                     l983:
  6171  000F38  502C               	movf	___fladd@aexp^0,w,c
  6172  000F3A  5C2D               	subwf	___fladd@bexp^0,w,c
  6173  000F3C  A0D8               	btfss	status,0,c
  6174  000F3E  EFA3  F007         	goto	u2761
  6175  000F42  EFA5  F007         	goto	u2760
  6176  000F46                     u2761:
  6177  000F46  EF7F  F007         	goto	l984
  6178  000F4A                     u2760:
  6179  000F4A                     l982:
  6180  000F4A  BC2B               	btfsc	___fladd@signs^0,6,c
  6181  000F4C  EFAA  F007         	goto	u2771
  6182  000F50  EFAC  F007         	goto	u2770
  6183  000F54                     u2771:
  6184  000F54  EFEC  F007         	goto	l2713
  6185  000F58                     u2770:
  6186  000F58  502D               	movf	___fladd@bexp^0,w,c
  6187  000F5A  A4D8               	btfss	status,2,c
  6188  000F5C  EFB2  F007         	goto	u2781
  6189  000F60  EFB4  F007         	goto	u2780
  6190  000F64                     u2781:
  6191  000F64  EFBE  F007         	goto	l2695
  6192  000F68                     u2780:
  6193  000F68  0E00               	movlw	0
  6194  000F6A  6E1F               	movwf	?___fladd^0,c
  6195  000F6C  0E00               	movlw	0
  6196  000F6E  6E20               	movwf	(?___fladd+1)^0,c
  6197  000F70  0E00               	movlw	0
  6198  000F72  6E21               	movwf	(?___fladd+2)^0,c
  6199  000F74  0E00               	movlw	0
  6200  000F76  6E22               	movwf	(?___fladd+3)^0,c
  6201  000F78  EF0D  F009         	goto	l991
  6202  000F7C                     l2695:
  6203  000F7C  5023               	movf	___fladd@a^0,w,c
  6204  000F7E  261F               	addwf	___fladd@b^0,f,c
  6205  000F80  5024               	movf	(___fladd@a+1)^0,w,c
  6206  000F82  2220               	addwfc	(___fladd@b+1)^0,f,c
  6207  000F84  5025               	movf	(___fladd@a+2)^0,w,c
  6208  000F86  2221               	addwfc	(___fladd@b+2)^0,f,c
  6209  000F88  5026               	movf	(___fladd@a+3)^0,w,c
  6210  000F8A  2222               	addwfc	(___fladd@b+3)^0,f,c
  6211  000F8C  A022               	btfss	(___fladd@b+3)^0,0,c
  6212  000F8E  EFCB  F007         	goto	u2791
  6213  000F92  EFCD  F007         	goto	u2790
  6214  000F96                     u2791:
  6215  000F96  EF79  F008         	goto	l2749
  6216  000F9A                     u2790:
  6217  000F9A  A02E               	btfss	___fladd@grs^0,0,c
  6218  000F9C  EFD2  F007         	goto	u2801
  6219  000FA0  EFD4  F007         	goto	u2800
  6220  000FA4                     u2801:
  6221  000FA4  EFDA  F007         	goto	l2703
  6222  000FA8                     u2800:
  6223  000FA8  90D8               	bcf	status,0,c
  6224  000FAA  302E               	rrcf	___fladd@grs^0,w,c
  6225  000FAC  0901               	iorlw	1
  6226  000FAE  6E2E               	movwf	___fladd@grs^0,c
  6227  000FB0  EFDC  F007         	goto	l2705
  6228  000FB4                     l2703:
  6229  000FB4  90D8               	bcf	status,0,c
  6230  000FB6  322E               	rrcf	___fladd@grs^0,f,c
  6231  000FB8                     l2705:
  6232  000FB8  A01F               	btfss	___fladd@b^0,0,c
  6233  000FBA  EFE1  F007         	goto	u2811
  6234  000FBE  EFE3  F007         	goto	u2810
  6235  000FC2                     u2811:
  6236  000FC2  EFE4  F007         	goto	l2709
  6237  000FC6                     u2810:
  6238  000FC6  8E2E               	bsf	___fladd@grs^0,7,c
  6239  000FC8                     l2709:
  6240  000FC8  3422               	rlcf	(___fladd@b+3)^0,w,c
  6241  000FCA  3222               	rrcf	(___fladd@b+3)^0,f,c
  6242  000FCC  3221               	rrcf	(___fladd@b+2)^0,f,c
  6243  000FCE  3220               	rrcf	(___fladd@b+1)^0,f,c
  6244  000FD0  321F               	rrcf	___fladd@b^0,f,c
  6245  000FD2  2A2D               	incf	___fladd@bexp^0,f,c
  6246  000FD4  EF79  F008         	goto	l2749
  6247  000FD8                     l2713:
  6248  000FD8  5023               	movf	___fladd@a^0,w,c
  6249  000FDA  5C1F               	subwf	___fladd@b^0,w,c
  6250  000FDC  5024               	movf	(___fladd@a+1)^0,w,c
  6251  000FDE  5820               	subwfb	(___fladd@b+1)^0,w,c
  6252  000FE0  5025               	movf	(___fladd@a+2)^0,w,c
  6253  000FE2  5821               	subwfb	(___fladd@b+2)^0,w,c
  6254  000FE4  5022               	movf	(___fladd@b+3)^0,w,c
  6255  000FE6  0A80               	xorlw	128
  6256  000FE8  6E27               	movwf	??___fladd^0,c
  6257  000FEA  5026               	movf	(___fladd@a+3)^0,w,c
  6258  000FEC  0A80               	xorlw	128
  6259  000FEE  5827               	subwfb	??___fladd^0,w,c
  6260  000FF0  B0D8               	btfsc	status,0,c
  6261  000FF2  EFFD  F007         	goto	u2821
  6262  000FF6  EFFF  F007         	goto	u2820
  6263  000FFA                     u2821:
  6264  000FFA  EF2A  F008         	goto	l2723
  6265  000FFE                     u2820:
  6266  000FFE  501F               	movf	___fladd@b^0,w,c
  6267  001000  5C23               	subwf	___fladd@a^0,w,c
  6268  001002  6E27               	movwf	??___fladd^0,c
  6269  001004  5020               	movf	(___fladd@b+1)^0,w,c
  6270  001006  5824               	subwfb	(___fladd@a+1)^0,w,c
  6271  001008  6E28               	movwf	(??___fladd+1)^0,c
  6272  00100A  5021               	movf	(___fladd@b+2)^0,w,c
  6273  00100C  5825               	subwfb	(___fladd@a+2)^0,w,c
  6274  00100E  6E29               	movwf	(??___fladd+2)^0,c
  6275  001010  5022               	movf	(___fladd@b+3)^0,w,c
  6276  001012  5826               	subwfb	(___fladd@a+3)^0,w,c
  6277  001014  6E2A               	movwf	(??___fladd+3)^0,c
  6278  001016  0EFF               	movlw	255
  6279  001018  2427               	addwf	??___fladd^0,w,c
  6280  00101A  6E1F               	movwf	___fladd@b^0,c
  6281  00101C  0EFF               	movlw	255
  6282  00101E  2028               	addwfc	(??___fladd+1)^0,w,c
  6283  001020  6E20               	movwf	(___fladd@b+1)^0,c
  6284  001022  0EFF               	movlw	255
  6285  001024  2029               	addwfc	(??___fladd+2)^0,w,c
  6286  001026  6E21               	movwf	(___fladd@b+2)^0,c
  6287  001028  0EFF               	movlw	255
  6288  00102A  202A               	addwfc	(??___fladd+3)^0,w,c
  6289  00102C  6E22               	movwf	(___fladd@b+3)^0,c
  6290  00102E  0E80               	movlw	128
  6291  001030  1A2B               	xorwf	___fladd@signs^0,f,c
  6292  001032  6C2E               	negf	___fladd@grs^0,c
  6293  001034  502E               	movf	___fladd@grs^0,w,c
  6294  001036  A4D8               	btfss	status,2,c
  6295  001038  EF20  F008         	goto	u2831
  6296  00103C  EF22  F008         	goto	u2830
  6297  001040                     u2831:
  6298  001040  EF32  F008         	goto	l999
  6299  001044                     u2830:
  6300  001044  0E01               	movlw	1
  6301  001046  261F               	addwf	___fladd@b^0,f,c
  6302  001048  0E00               	movlw	0
  6303  00104A  2220               	addwfc	(___fladd@b+1)^0,f,c
  6304  00104C  2221               	addwfc	(___fladd@b+2)^0,f,c
  6305  00104E  2222               	addwfc	(___fladd@b+3)^0,f,c
  6306  001050  EF32  F008         	goto	l999
  6307  001054                     l2723:
  6308  001054  5023               	movf	___fladd@a^0,w,c
  6309  001056  5E1F               	subwf	___fladd@b^0,f,c
  6310  001058  5024               	movf	(___fladd@a+1)^0,w,c
  6311  00105A  5A20               	subwfb	(___fladd@b+1)^0,f,c
  6312  00105C  5025               	movf	(___fladd@a+2)^0,w,c
  6313  00105E  5A21               	subwfb	(___fladd@b+2)^0,f,c
  6314  001060  5026               	movf	(___fladd@a+3)^0,w,c
  6315  001062  5A22               	subwfb	(___fladd@b+3)^0,f,c
  6316  001064                     l999:
  6317  001064  501F               	movf	___fladd@b^0,w,c
  6318  001066  1020               	iorwf	(___fladd@b+1)^0,w,c
  6319  001068  1021               	iorwf	(___fladd@b+2)^0,w,c
  6320  00106A  1022               	iorwf	(___fladd@b+3)^0,w,c
  6321  00106C  A4D8               	btfss	status,2,c
  6322  00106E  EF3B  F008         	goto	u2841
  6323  001072  EF3D  F008         	goto	u2840
  6324  001076                     u2841:
  6325  001076  EF72  F008         	goto	l2747
  6326  00107A                     u2840:
  6327  00107A  502E               	movf	___fladd@grs^0,w,c
  6328  00107C  A4D8               	btfss	status,2,c
  6329  00107E  EF43  F008         	goto	u2851
  6330  001082  EF45  F008         	goto	u2850
  6331  001086                     u2851:
  6332  001086  EF72  F008         	goto	l2747
  6333  00108A                     u2850:
  6334  00108A  0E00               	movlw	0
  6335  00108C  6E1F               	movwf	?___fladd^0,c
  6336  00108E  0E00               	movlw	0
  6337  001090  6E20               	movwf	(?___fladd+1)^0,c
  6338  001092  0E00               	movlw	0
  6339  001094  6E21               	movwf	(?___fladd+2)^0,c
  6340  001096  0E00               	movlw	0
  6341  001098  6E22               	movwf	(?___fladd+3)^0,c
  6342  00109A  EF0D  F009         	goto	l991
  6343  00109E                     l2731:
  6344  00109E  90D8               	bcf	status,0,c
  6345  0010A0  361F               	rlcf	___fladd@b^0,f,c
  6346  0010A2  3620               	rlcf	(___fladd@b+1)^0,f,c
  6347  0010A4  3621               	rlcf	(___fladd@b+2)^0,f,c
  6348  0010A6  3622               	rlcf	(___fladd@b+3)^0,f,c
  6349  0010A8  AE2E               	btfss	___fladd@grs^0,7,c
  6350  0010AA  EF59  F008         	goto	u2861
  6351  0010AE  EF5B  F008         	goto	u2860
  6352  0010B2                     u2861:
  6353  0010B2  EF5C  F008         	goto	l2737
  6354  0010B6                     u2860:
  6355  0010B6  801F               	bsf	___fladd@b^0,0,c
  6356  0010B8                     l2737:
  6357  0010B8  A02E               	btfss	___fladd@grs^0,0,c
  6358  0010BA  EF61  F008         	goto	u2871
  6359  0010BE  EF63  F008         	goto	u2870
  6360  0010C2                     u2871:
  6361  0010C2  EF67  F008         	goto	l2741
  6362  0010C6                     u2870:
  6363  0010C6  80D8               	bsf	status,0,c
  6364  0010C8  362E               	rlcf	___fladd@grs^0,f,c
  6365  0010CA  EF69  F008         	goto	l2743
  6366  0010CE                     l2741:
  6367  0010CE  90D8               	bcf	status,0,c
  6368  0010D0  362E               	rlcf	___fladd@grs^0,f,c
  6369  0010D2                     l2743:
  6370  0010D2  502D               	movf	___fladd@bexp^0,w,c
  6371  0010D4  B4D8               	btfsc	status,2,c
  6372  0010D6  EF6F  F008         	goto	u2881
  6373  0010DA  EF71  F008         	goto	u2880
  6374  0010DE                     u2881:
  6375  0010DE  EF72  F008         	goto	l2747
  6376  0010E2                     u2880:
  6377  0010E2  062D               	decf	___fladd@bexp^0,f,c
  6378  0010E4                     l2747:
  6379  0010E4  AE21               	btfss	(___fladd@b+2)^0,7,c
  6380  0010E6  EF77  F008         	goto	u2891
  6381  0010EA  EF79  F008         	goto	u2890
  6382  0010EE                     u2891:
  6383  0010EE  EF4F  F008         	goto	l2731
  6384  0010F2                     u2890:
  6385  0010F2                     l2749:
  6386  0010F2  0E00               	movlw	0
  6387  0010F4  6E2C               	movwf	___fladd@aexp^0,c
  6388  0010F6  AE2E               	btfss	___fladd@grs^0,7,c
  6389  0010F8  EF80  F008         	goto	u2901
  6390  0010FC  EF82  F008         	goto	u2900
  6391  001100                     u2901:
  6392  001100  EF9A  F008         	goto	l1008
  6393  001104                     u2900:
  6394  001104  C02E  F027         	movff	___fladd@grs,??___fladd
  6395  001108  0E7F               	movlw	127
  6396  00110A  1627               	andwf	??___fladd^0,f,c
  6397  00110C  B4D8               	btfsc	status,2,c
  6398  00110E  EF8B  F008         	goto	u2911
  6399  001112  EF8D  F008         	goto	u2910
  6400  001116                     u2911:
  6401  001116  EF91  F008         	goto	l1009
  6402  00111A                     u2910:
  6403  00111A                     l2755:
  6404  00111A  0E01               	movlw	1
  6405  00111C  6E2C               	movwf	___fladd@aexp^0,c
  6406  00111E  EF9A  F008         	goto	l1008
  6407  001122                     l1009:
  6408  001122  A01F               	btfss	___fladd@b^0,0,c
  6409  001124  EF96  F008         	goto	u2921
  6410  001128  EF98  F008         	goto	u2920
  6411  00112C                     u2921:
  6412  00112C  EF9A  F008         	goto	l1008
  6413  001130                     u2920:
  6414  001130  EF8D  F008         	goto	l2755
  6415  001134                     l1008:
  6416  001134  502C               	movf	___fladd@aexp^0,w,c
  6417  001136  B4D8               	btfsc	status,2,c
  6418  001138  EFA0  F008         	goto	u2931
  6419  00113C  EFA2  F008         	goto	u2930
  6420  001140                     u2931:
  6421  001140  EFCD  F008         	goto	l2767
  6422  001144                     u2930:
  6423  001144  0E01               	movlw	1
  6424  001146  261F               	addwf	___fladd@b^0,f,c
  6425  001148  0E00               	movlw	0
  6426  00114A  2220               	addwfc	(___fladd@b+1)^0,f,c
  6427  00114C  2221               	addwfc	(___fladd@b+2)^0,f,c
  6428  00114E  2222               	addwfc	(___fladd@b+3)^0,f,c
  6429  001150  A022               	btfss	(___fladd@b+3)^0,0,c
  6430  001152  EFAD  F008         	goto	u2941
  6431  001156  EFAF  F008         	goto	u2940
  6432  00115A                     u2941:
  6433  00115A  EFCD  F008         	goto	l2767
  6434  00115E                     u2940:
  6435  00115E  C01F  F027         	movff	___fladd@b,??___fladd
  6436  001162  C020  F028         	movff	___fladd@b+1,??___fladd+1
  6437  001166  C021  F029         	movff	___fladd@b+2,??___fladd+2
  6438  00116A  C022  F02A         	movff	___fladd@b+3,??___fladd+3
  6439  00116E  342A               	rlcf	(??___fladd+3)^0,w,c
  6440  001170  322A               	rrcf	(??___fladd+3)^0,f,c
  6441  001172  3229               	rrcf	(??___fladd+2)^0,f,c
  6442  001174  3228               	rrcf	(??___fladd+1)^0,f,c
  6443  001176  3227               	rrcf	??___fladd^0,f,c
  6444  001178  C027  F01F         	movff	??___fladd,___fladd@b
  6445  00117C  C028  F020         	movff	??___fladd+1,___fladd@b+1
  6446  001180  C029  F021         	movff	??___fladd+2,___fladd@b+2
  6447  001184  C02A  F022         	movff	??___fladd+3,___fladd@b+3
  6448  001188  282D               	incf	___fladd@bexp^0,w,c
  6449  00118A  B4D8               	btfsc	status,2,c
  6450  00118C  EFCA  F008         	goto	u2951
  6451  001190  EFCC  F008         	goto	u2950
  6452  001194                     u2951:
  6453  001194  EFCD  F008         	goto	l2767
  6454  001198                     u2950:
  6455  001198  2A2D               	incf	___fladd@bexp^0,f,c
  6456  00119A                     l2767:
  6457  00119A  282D               	incf	___fladd@bexp^0,w,c
  6458  00119C  B4D8               	btfsc	status,2,c
  6459  00119E  EFD3  F008         	goto	u2961
  6460  0011A2  EFD5  F008         	goto	u2960
  6461  0011A6                     u2961:
  6462  0011A6  EFDD  F008         	goto	l2771
  6463  0011AA                     u2960:
  6464  0011AA  502D               	movf	___fladd@bexp^0,w,c
  6465  0011AC  A4D8               	btfss	status,2,c
  6466  0011AE  EFDB  F008         	goto	u2971
  6467  0011B2  EFDD  F008         	goto	u2970
  6468  0011B6                     u2971:
  6469  0011B6  EFEF  F008         	goto	l2775
  6470  0011BA                     u2970:
  6471  0011BA                     l2771:
  6472  0011BA  0E00               	movlw	0
  6473  0011BC  6E1F               	movwf	___fladd@b^0,c
  6474  0011BE  0E00               	movlw	0
  6475  0011C0  6E20               	movwf	(___fladd@b+1)^0,c
  6476  0011C2  0E00               	movlw	0
  6477  0011C4  6E21               	movwf	(___fladd@b+2)^0,c
  6478  0011C6  0E00               	movlw	0
  6479  0011C8  6E22               	movwf	(___fladd@b+3)^0,c
  6480  0011CA  502D               	movf	___fladd@bexp^0,w,c
  6481  0011CC  A4D8               	btfss	status,2,c
  6482  0011CE  EFEB  F008         	goto	u2981
  6483  0011D2  EFED  F008         	goto	u2980
  6484  0011D6                     u2981:
  6485  0011D6  EFEF  F008         	goto	l2775
  6486  0011DA                     u2980:
  6487  0011DA  0E00               	movlw	0
  6488  0011DC  6E2B               	movwf	___fladd@signs^0,c
  6489  0011DE                     l2775:
  6490  0011DE  A02D               	btfss	___fladd@bexp^0,0,c
  6491  0011E0  EFF4  F008         	goto	u2991
  6492  0011E4  EFF6  F008         	goto	u2990
  6493  0011E8                     u2991:
  6494  0011E8  EFF9  F008         	goto	l2779
  6495  0011EC                     u2990:
  6496  0011EC  8E21               	bsf	(___fladd@b+2)^0,7,c
  6497  0011EE  EFFA  F008         	goto	l2781
  6498  0011F2                     l2779:
  6499  0011F2  9E21               	bcf	(___fladd@b+2)^0,7,c
  6500  0011F4                     l2781:
  6501  0011F4  90D8               	bcf	status,0,c
  6502  0011F6  302D               	rrcf	___fladd@bexp^0,w,c
  6503  0011F8  6E22               	movwf	(___fladd@b+3)^0,c
  6504  0011FA  AE2B               	btfss	___fladd@signs^0,7,c
  6505  0011FC  EF02  F009         	goto	u3001
  6506  001200  EF04  F009         	goto	u3000
  6507  001204                     u3001:
  6508  001204  EF05  F009         	goto	l2787
  6509  001208                     u3000:
  6510  001208  8E22               	bsf	(___fladd@b+3)^0,7,c
  6511  00120A                     l2787:
  6512  00120A  C01F  F01F         	movff	___fladd@b,?___fladd
  6513  00120E  C020  F020         	movff	___fladd@b+1,?___fladd+1
  6514  001212  C021  F021         	movff	___fladd@b+2,?___fladd+2
  6515  001216  C022  F022         	movff	___fladd@b+3,?___fladd+3
  6516  00121A                     l991:
  6517  00121A  0012               	return		;funcret
  6518  00121C                     __end_of___fladd:
  6519                           	callstack 0
  6520                           
  6521                           	psect	rparam
  6522  0000                     
  6523                           	psect	idloc
  6524                           
  6525                           ;Config register IDLOC0 @ 0x200000
  6526                           ;	unspecified, using default values
  6527  200000                     	org	2097152
  6528  200000  FF                 	db	255
  6529                           
  6530                           ;Config register IDLOC1 @ 0x200001
  6531                           ;	unspecified, using default values
  6532  200001                     	org	2097153
  6533  200001  FF                 	db	255
  6534                           
  6535                           ;Config register IDLOC2 @ 0x200002
  6536                           ;	unspecified, using default values
  6537  200002                     	org	2097154
  6538  200002  FF                 	db	255
  6539                           
  6540                           ;Config register IDLOC3 @ 0x200003
  6541                           ;	unspecified, using default values
  6542  200003                     	org	2097155
  6543  200003  FF                 	db	255
  6544                           
  6545                           ;Config register IDLOC4 @ 0x200004
  6546                           ;	unspecified, using default values
  6547  200004                     	org	2097156
  6548  200004  FF                 	db	255
  6549                           
  6550                           ;Config register IDLOC5 @ 0x200005
  6551                           ;	unspecified, using default values
  6552  200005                     	org	2097157
  6553  200005  FF                 	db	255
  6554                           
  6555                           ;Config register IDLOC6 @ 0x200006
  6556                           ;	unspecified, using default values
  6557  200006                     	org	2097158
  6558  200006  FF                 	db	255
  6559                           
  6560                           ;Config register IDLOC7 @ 0x200007
  6561                           ;	unspecified, using default values
  6562  200007                     	org	2097159
  6563  200007  FF                 	db	255
  6564                           
  6565                           	psect	config
  6566                           
  6567                           ; Padding undefined space
  6568  300000                     	org	3145728
  6569  300000  FF                 	db	255
  6570                           
  6571                           ;Config register CONFIG1H @ 0x300001
  6572                           ;	Oscillator Selection bits
  6573                           ;	OSC = HS, HS oscillator
  6574                           ;	Fail-Safe Clock Monitor Enable bit
  6575                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6576                           ;	Internal/External Oscillator Switchover bit
  6577                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6578  300001                     	org	3145729
  6579  300001  02                 	db	2
  6580                           
  6581                           ;Config register CONFIG2L @ 0x300002
  6582                           ;	Power-up Timer Enable bit
  6583                           ;	PWRT = OFF, PWRT disabled
  6584                           ;	Brown-out Reset Enable bits
  6585                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6586                           ;	Brown Out Reset Voltage bits
  6587                           ;	BORV = 0x2E, user specified literal
  6588  300002                     	org	3145730
  6589  300002  71                 	db	369
  6590                           
  6591                           ;Config register CONFIG2H @ 0x300003
  6592                           ;	Watchdog Timer Enable bit
  6593                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6594                           ;	Watchdog Timer Postscale Select bits
  6595                           ;	WDTPS = 1, 1:1
  6596  300003                     	org	3145731
  6597  300003  00                 	db	0
  6598                           
  6599                           ; Padding undefined space
  6600  300004                     	org	3145732
  6601  300004  FF                 	db	255
  6602                           
  6603                           ;Config register CONFIG3H @ 0x300005
  6604                           ;	CCP2 MUX bit
  6605                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6606                           ;	PORTB A/D Enable bit
  6607                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6608                           ;	Low-Power Timer1 Oscillator Enable bit
  6609                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6610                           ;	MCLR Pin Enable bit
  6611                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6612  300005                     	org	3145733
  6613  300005  83                 	db	131
  6614                           
  6615                           ;Config register CONFIG4L @ 0x300006
  6616                           ;	Stack Full/Underflow Reset Enable bit
  6617                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6618                           ;	Single-Supply ICSP Enable bit
  6619                           ;	LVP = OFF, Single-Supply ICSP disabled
  6620                           ;	Extended Instruction Set Enable bit
  6621                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6622                           ;	Background Debugger Enable bit
  6623                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6624  300006                     	org	3145734
  6625  300006  80                 	db	128
  6626                           
  6627                           ; Padding undefined space
  6628  300007                     	org	3145735
  6629  300007  FF                 	db	255
  6630                           
  6631                           ;Config register CONFIG5L @ 0x300008
  6632                           ;	Code Protection bit
  6633                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6634                           ;	Code Protection bit
  6635                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6636                           ;	Code Protection bit
  6637                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6638                           ;	Code Protection bit
  6639                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6640  300008                     	org	3145736
  6641  300008  0F                 	db	15
  6642                           
  6643                           ;Config register CONFIG5H @ 0x300009
  6644                           ;	Boot Block Code Protection bit
  6645                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6646                           ;	Data EEPROM Code Protection bit
  6647                           ;	CPD = OFF, Data EEPROM not code-protected
  6648  300009                     	org	3145737
  6649  300009  C0                 	db	192
  6650                           
  6651                           ;Config register CONFIG6L @ 0x30000A
  6652                           ;	Write Protection bit
  6653                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6654                           ;	Write Protection bit
  6655                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6656                           ;	Write Protection bit
  6657                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6658                           ;	Write Protection bit
  6659                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6660  30000A                     	org	3145738
  6661  30000A  0F                 	db	15
  6662                           
  6663                           ;Config register CONFIG6H @ 0x30000B
  6664                           ;	Configuration Register Write Protection bit
  6665                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6666                           ;	Boot Block Write Protection bit
  6667                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6668                           ;	Data EEPROM Write Protection bit
  6669                           ;	WRTD = OFF, Data EEPROM not write-protected
  6670  30000B                     	org	3145739
  6671  30000B  E0                 	db	224
  6672                           
  6673                           ;Config register CONFIG7L @ 0x30000C
  6674                           ;	Table Read Protection bit
  6675                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6676                           ;	Table Read Protection bit
  6677                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6678                           ;	Table Read Protection bit
  6679                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6680                           ;	Table Read Protection bit
  6681                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6682  30000C                     	org	3145740
  6683  30000C  0F                 	db	15
  6684                           
  6685                           ;Config register CONFIG7H @ 0x30000D
  6686                           ;	Boot Block Table Read Protection bit
  6687                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6688  30000D                     	org	3145741
  6689  30000D  40                 	db	64
  6690                           tosu	equ	0xFFF
  6691                           tosh	equ	0xFFE
  6692                           tosl	equ	0xFFD
  6693                           stkptr	equ	0xFFC
  6694                           pclatu	equ	0xFFB
  6695                           pclath	equ	0xFFA
  6696                           pcl	equ	0xFF9
  6697                           tblptru	equ	0xFF8
  6698                           tblptrh	equ	0xFF7
  6699                           tblptrl	equ	0xFF6
  6700                           tablat	equ	0xFF5
  6701                           prodh	equ	0xFF4
  6702                           prodl	equ	0xFF3
  6703                           indf0	equ	0xFEF
  6704                           postinc0	equ	0xFEE
  6705                           postdec0	equ	0xFED
  6706                           preinc0	equ	0xFEC
  6707                           plusw0	equ	0xFEB
  6708                           fsr0h	equ	0xFEA
  6709                           fsr0l	equ	0xFE9
  6710                           wreg	equ	0xFE8
  6711                           indf1	equ	0xFE7
  6712                           postinc1	equ	0xFE6
  6713                           postdec1	equ	0xFE5
  6714                           preinc1	equ	0xFE4
  6715                           plusw1	equ	0xFE3
  6716                           fsr1h	equ	0xFE2
  6717                           fsr1l	equ	0xFE1
  6718                           bsr	equ	0xFE0
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           preinc2	equ	0xFDC
  6723                           plusw2	equ	0xFDB
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8

Data Sizes:
    Strings     170
    Constant    26
    Data        6
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 33
		 -> STR_10(CODE[1]), STR_9(CODE[19]), STR_8(CODE[18]), STR_7(CODE[19]), 
		 -> STR_6(CODE[33]), STR_5(CODE[16]), STR_4(CODE[18]), STR_3(CODE[19]), 
		 -> STR_2(CODE[21]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_ssdDigit
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___llmod
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _msg->_lcdString
    _lcdString->_lcdChar
    _lcdString->_lcdCommand
    _lcdChar->_pushByte
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _geladeiraAberta->_pwmSet
    _tempoS->_tempo
    _pwmSet->___wmul
    ___wmul->_adcRead
    _adcInit->_pinMode
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  147693
                                             24 COMRAM     2     2      0
                            ___fladd
                             ___flge
                            ___lldiv
                            ___llmod
                             ___wmul
                            _adcInit
                            _adcRead
                    _geladeiraAberta
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdInit
                                _msg
                            _pwmInit
                             _pwmSet
                             _soInit
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                             _tempoS
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     784
                                             22 COMRAM     2     1      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _msg                                                  2     2      0   37735
                                             20 COMRAM     2     2      0
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   37735
                                             14 COMRAM     6     4      2
                            _lcdChar
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   42412
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _geladeiraAberta                                      0     0      0    1078
                             _pwmSet
                              _tempo
                             _tempoS
 ---------------------------------------------------------------------------------
 (1) _tempoS                                               1     1      0     120
                                              3 COMRAM     1     1      0
                              _tempo
 ---------------------------------------------------------------------------------
 (2) _tempo                                                3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     868
                                             10 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              4 COMRAM     6     2      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
   ___flge
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   ___wmul
     _adcRead (ARG)
   _adcInit
     _pinMode
   _adcRead
   _geladeiraAberta
     _pwmSet
       ___lwdiv
       ___wmul
     _tempo
     _tempoS
       _tempo
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _msg
     _lcdString
       _lcdChar
         _delayMicro
         _pushByte
       _lcdCommand
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
   _soInit
   _ssdDigit
     ___lldiv (ARG)
     ___llmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _tempoS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      3E       1       48.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      15        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 15:15:08 2021

                       _m 0018            _pulseEnablePin 236C              lcdString@msg 002D  
                      l21 22B8                        l22 22D4                        l15 236A  
                      l19 22AA                        l64 1468                        l73 1988  
                      l68 198C                        l69 1988                        l98 16B6  
                      _m1 0005                        _v0 001C                        _v1 001B  
                      _v2 001A                        _v3 0019       ___wmul@multiplicand 0025  
                     l200 23EA                       l203 24AC                       l211 2322  
                     l115 25F0                       l140 2452                       l206 24D6  
                     l135 1AAA                       l151 25F8                       l160 23AC  
                     l137 1AC2                       l163 254C                       l251 2284  
                     l411 0C6E                       l404 0A38                       l157 2482  
                     l166 217C                       l238 222E                       l431 2122  
                     l184 1FBA                       l248 1822                       l169 25AE  
                     l193 1E8E                       l177 2590                       l353 1CD6  
                     l434 2526                       l370 0784                       l362 06DE  
                     l451 25CC                       l372 0832                       l357 2500  
                     l533 1BCE                       l437 25E6                       l454 2572  
                     l446 21D6                       l366 0790                       l392 097C  
                     l384 08D0                       l481 1F22                       l377 082E  
                     l395 09B2                       l379 08D4                       l724 1DDA  
                     l719 1D94                       l399 09E4                       l488 1F32  
                     l952 20B6                       l881 2042                       l945 20AE  
                     l874 2032                       l982 0F4A                       l991 121A  
                     l983 0F38                       l984 0EFE                       l999 1064  
                     u430 2190                       _PR2 000FCB                       u431 218C  
                     u440 21A8                       u441 21A4                       u450 21C0  
                     u451 21BC                       u670 25CC                       u671 25C8  
                     _msg 1BD0                       wreg 000FE8                      l1008 1134  
                    l1009 1122                      l2201 2460                      l3001 0A86  
                    l2211 1498                      l2131 121C                      l2203 2464  
                    l3011 0C0E                      l3003 0AB8                      l2221 152C  
                    l2213 14B8                      l1261 21B0                      l1253 2194  
                    l1421 25B4                      l2141 12A8                      l2133 1238  
                    l2205 2126                      l3021 0C3A                      l3013 0C24  
                    l3005 0B0A                      l2231 15CA                      l2223 1552  
                    l2215 14DA                      l2207 146A                      l2311 206E  
                    l2303 2044                      l1255 2198                      l1423 25BA  
                    l1415 25B0                      l2151 133A                      l2143 12C2  
                    l2135 124A                      l3023 0C4C                      l3015 0C2A  
                    l3007 0B60                      l3031 0C72                      l2241 165E  
                    l2233 15E6                      l2225 156E                      l2217 14F6  
                    l2209 1486                      l2401 2286                      l2321 20A2  
                    l2313 207C                      l2305 204C                      l1265 21C4  
                    l1273 21D0                      l1249 2180                      l1425 25BC  
                    l2161 13D2                      l2153 135A                      l2145 12E2  
                    l2137 126A                      l3041 0CEE                      l3025 0C54  
                    l3017 0C30                      l3009 0C04                      l3033 0CA4  
                    l2243 1670                      l2235 15F8                      l2227 1580  
                    l2219 1508                      l2411 22CC                      l2403 22A0  
                    l2323 20A8                      l2315 2082                      l2307 205E  
                    l1259 21AC                      l2163 13F4                      l2155 137C  
                    l2147 1304                      l2139 128C                      l2171 2484  
                    l2251 2584                      l3035 0CA8                      l3027 0C66  
                    l3019 0C36                      l2245 1694                      l2237 161C  
                    l2229 15A4                      l2405 22A8                      l2317 2098  
                    l2309 2066                      l2253 254E                      l1269 21CA  
                    l2341 18B0                      l2333 1868                      l2325 1824  
                    l2165 1410                      l2157 1398                      l2149 1320  
                    l2173 24AE                      l2261 1AC8                      l3061 17FC  
                    l2501 17B4                      l3037 0CB8                      l2239 1642  
                    l2407 22BE                      l2319 20A0                      l2255 256A  
                    l2351 1914                      l2343 18CC                      l2335 1884  
                    l2327 1840                      l2167 142A                      l2159 13B2  
                    l2191 231E                      l2183 22EE                      l2175 22D6  
                    l2431 1A78                      l2423 19BE                      l2415 25E8  
                    l2247 2594                      l3063 1C88                      l2271 1B08  
                    l2263 1AD6                      l2503 17CC                      l2511 17E8  
                    l2601 0DA8                      l2409 22C4                      l2169 144A  
                    l2185 2306                      l2177 22EA                      l2441 1AA2  
                    l2425 1A0A                      l2417 198E                      l2193 236C  
                    l2249 2576                      l2521 1BD4                      l2281 1B46  
                    l2273 1B0C                      l2265 1AE6                      l2505 17E0  
                    l2611 0DDA                      l2603 0DAA                      l2187 230C  
                    l2443 1ABA                      l2427 1A30                      l2435 1A80  
                    l2419 199E                      l2363 23AE                      l2195 2380  
                    l2451 1E3C                      l2371 1F68                      l2531 1C24  
                    l2523 1BE4                      l2291 1B8E                      l2283 1B54  
                    l2275 1B1C                      l2267 1AEA                      l2259 1AC4  
                    l3059 0C86                      l2701 0FA8                      l2621 0E02  
                    l2613 0DDC                      l2605 0DB2                      l2381 20BA  
                    l2357 1940                      l2349 18F8                      l2189 230E  
                    l2437 1A98                      l2429 1A4E                      l2445 2422  
                    l2197 238C                      l2365 252A                      l2461 1E82  
                    l2453 1E48                      l2373 1F6E                      l2533 1C34  
                    l2525 1BF4                      l2293 1B98                      l2285 1B5E  
                    l2277 1B32                      l2269 1AF8                      l2517 2230  
                    l2711 0FD2                      l2703 0FB4                      l2631 0E3C  
                    l2623 0E12                      l2615 0DE2                      l2607 0DC2  
                    l2383 20D8                      l2551 24E8                      l2359 195C  
                    l2439 1A9E                      l2447 244E                      l2199 2454  
                    l2463 1E88                      l2455 1E62                      l2375 1F72  
                    l2367 1F34                      l2535 1C44                      l2527 1C04  
                    l2543 1C74                      l2519 1BD0                      l2287 1B7C  
                    l2279 1B3A                      l2295 1B9E                      l2391 2502  
                    l2471 21FE                      l2721 1044                      l2705 0FB8  
                    l2713 0FD8                      l2641 0E68                      l2633 0E4E  
                    l2625 0E22                      l2617 0DF0                      l2609 0DC8  
                    l2801 1D62                      l2393 2324                      l2385 20F4  
                    l2553 24EE                      l2457 1E70                      l2449 1DDC  
                    l2377 1F8E                      l2369 1F40                      l2537 1C54  
                    l2529 1C14                      l2297 1BAE                      l2289 1B8C  
                    l2561 25D4                      l2473 2202                      l2465 21DA  
                    l2481 16B8                      l2731 109E                      l2715 0FFE  
                    l2723 1054                      l2707 0FC6                      l2651 0E7C  
                    l2643 0E6C                      l2635 0E5C                      l2627 0E24  
                    l2619 0DF2                      l2803 1D74                      l2571 1EB6  
                    l2395 2360                      l2387 20FC                      l2555 24F4  
                    l2459 1E7C                      l2379 1F92                      l2539 1C64  
                    l2299 1BBE                      l2563 25D6                      l2475 2214  
                    l2467 21EA                      l2491 1764                      l2483 1718  
                    l2741 10CE                      l2733 10A8                      l2725 107A  
                    l2717 1032                      l2709 0FC8                      l2661 0E90  
                    l2653 0E80                      l2645 0E70                      l2637 0E60  
                    l2629 0E2C                      l2805 1D82                      l2581 1F00  
                    l2573 1EBE                      l2821 1FF4                      l2813 1FBC  
                    l2397 2362                      l2389 2114                      l2549 24D8  
                    l2565 25DA                      l2557 25CE                      l2477 2218  
                    l2469 21EE                      l2493 1778                      l2485 1730  
                    l2901 0816                      l2751 10F6                      l2743 10D2  
                    l2735 10B6                      l2727 108A                      l2719 1034  
                    l2671 0ECA                      l2663 0E94                      l2655 0E84  
                    l2647 0E74                      l2639 0E64                      l2591 0D68  
                    l2807 1DD2                      l2583 1F10                      l2575 1ECA  
                    l2567 1E90                      l2823 2012                      l2815 1FD2  
                    l2399 2366                      l2559 25D0                      l2479 222A  
                    l2495 1780                      l2487 1744                      l2911 0866  
                    l2903 0826                      l2761 1150                      l2753 1104  
                    l2745 10E2                      l2737 10B8                      l2681 0F1C  
                    l2673 0EE6                      l2665 0E98                      l2657 0E88  
                    l2649 0E78                      l2593 0D76                      l2809 1DD8  
                    l2585 1F12                      l2577 1ED8                      l2569 1EA0  
                    l2825 2022                      l2817 1FDA                      l2497 1798  
                    l2489 174C                      l2921 0894                      l2913 086A  
                    l2905 0840                      l2771 11BA                      l2763 115E  
                    l2755 111A                      l2739 10C6                      l2747 10E4  
                    l2691 0F68                      l2683 0F2A                      l2675 0EF6  
                    l2659 0E8C                      l2667 0E9C                      l2595 0D78  
                    l2587 1F1C                      l2579 1EE2                      l2827 202C  
                    l2819 1FE6                      l2499 17AC                      l2931 08B8  
                    l2923 089A                      l2915 087A                      l2907 0850  
                    l2851 070C                      l2843 06C6                      l2781 11F4  
                    l2773 11DA                      l2765 1198                      l2749 10F2  
                    l2685 0F2C                      l2677 0F0C                      l2669 0EA0  
                    l2597 0D88                      l2589 0D5C                      l2941 090E  
                    l2933 08C8                      l2925 089E                      l2917 0880  
                    l2909 0860                      l2861 0744                      l2853 0718  
                    l2845 06E8                      l2783 11FA                      l2775 11DE  
                    l2759 1144                      l2767 119A                      l2695 0F7C  
                    l2687 0F36                      l2679 0F18                      l2599 0D98  
                    l2791 1CD8                      l2951 093E                      l2943 0914  
                    l2935 08E2                      l2927 08AE                      l2919 0884  
                    l2871 0788                      l2863 0754                      l2855 0726  
                    l2847 06EC                      l2785 1208                      l2777 11EC  
                    l2769 11AA                      l2697 0F8C                      l2689 0F58  
                    l2793 1D06                      l2961 0980                      l2953 094E  
                    l2945 0918                      l2937 08EE                      l2929 08B4  
                    l2881 07C4                      l2865 075C                      l2857 0736  
                    l2873 0790                      l2849 06F0                      l2787 120A  
                    l2779 11F2                      l2699 0F9A                      l2795 1D16  
                    l2963 0990                      l2955 095E                      l2971 09B6  
                    l2939 08FE                      l2947 091C                      l2891 07F2  
                    l2883 07C8                      l2875 079E                      l2867 076C  
                    l2859 073E                      l2797 1D44                      l2981 0A02  
                    l2973 09C8                      l2965 0996                      l2957 0966  
                    l2949 092C                      l2893 07F8                      l2885 07D8  
                    l2877 07AE                      l2869 077C                      l2799 1D54  
                    l2983 0A14                      l2975 09D8                      l2967 099A  
                    l2959 0978                      l2991 0A40                      l2895 07FC  
                    l2887 07DE                      l2879 07BE                      l2993 0A4E  
                    l2985 0A1A                      l2977 09E0                      l2969 09AA  
                    l2897 080C                      l2889 07E2                      l2987 0A2C  
                    l2979 09F0                      l2899 0812                      l2995 0A52  
                    l2997 0A5E                      l2989 0A34                      l2999 0A6E  
                    ?_msg 001F                      STR_1 06BE                      STR_2 063C  
                    STR_3 0677                      STR_4 069C                      STR_5 06AE  
                    STR_6 061B                      STR_7 0651                      STR_8 068A  
                    STR_9 0664                      u2010 231E                      u2011 231A  
                    u2004 145C                      u2020 2482                      u2005 1458  
                    u2021 247E                      u2110 156E                      u2030 1486  
                    u2111 156A                      u2031 1482                      u3000 1208  
                    u2200 1670                      u2120 1580                      u2104 1542  
                    u2040 1498                      u3001 1204                      u2201 166C  
                    u2121 157C                      u2105 153E                      u2041 1494  
                    u3010 1D06                      u3011 1D02                      u3020 1D44  
                    u2300 207C                      u3021 1D40                      u2301 2078  
                    u3030 1D62                      u2214 1686                      u2150 15E6  
                    u2134 1596                      u2070 14F6                      u2054 14AA  
                    u2310 2098                      u2230 1AD6                      u3031 1D5E  
                    u2215 1682                      u2151 15E2                      u2135 1592  
                    u2071 14F2                      u2055 14A6                      u2311 2094  
                    u2231 1AD2                      u3040 1D82                      u2224 16AA  
                    u2160 15F8                      u2144 15BA                      u2080 1508  
                    u2064 14CA                      u2400 195C                      u2320 1840  
                    u2240 1AF8                      u3200 07BE                      u3120 070C  
                    u3041 1D7E                      u2225 16A6                      u2161 15F4  
                    u2145 15B6                      u2081 1504                      u2065 14C6  
                    u2401 1958                      u2321 183C                      u2241 1AF4  
                    u3201 07BA                      u3121 0708                      u3050 1DD2  
                    u2250 1B32                      u3210 07D8                      u3130 0726  
                    u3051 1DCE                      u2251 1B2E                      u3211 07D4  
                    u3131 0722                      u3060 1FD2                      u2340 1884  
                    u2500 1A4E                      u2420 1F68                      u2260 1B54  
                    u3300 08AE                      u3220 07F2                      u3140 0736  
                    u3061 1FCE                      u2341 1880                      u2501 1A4A  
                    u2421 1F64                      u2261 1B50                      u3301 08AA  
                    u3221 07EE                      u3141 0732                      u3070 1FF4  
                    u2190 165E                      u2174 160E                      u2094 151E  
                    u2414 1972                      u2334 1852                      u2430 1FBA  
                    u2270 1B7C                      u3310 08C8                      u3230 080C  
                    u3150 0754                      u3071 1FF0                      u2191 165A  
                    u2175 160A                      u2095 151A                      u2415 196E  
                    u2335 184E                      u2431 1FB6                      u2271 1B78  
                    u3311 08C4                      u3231 0808                      u3151 0750  
                    u2600 1ED8                      u3080 2012                      u2184 1632  
                    u2440 22A0                      u2360 18CC                      u2520 1A98  
                    u2280 1BAE                      u3400 0990                      u3320 08E2  
                    u3240 0826                      u3160 076C                      u2601 1ED4  
                    u3081 200E                      u2185 162E                      u2441 229C  
                    u2361 18C8                      u2521 1A94                      u2281 1BAA  
                    u3401 098C                      u3321 08DE                      u3241 0822  
                    u3161 0768                      u2610 1F00                      u2450 22B8  
                    u2290 205E                      u2354 189A                      u1810 1238  
                    u2530 1ABA                      u2514 1A6A                      u3410 09AA  
                    u3330 08FE                      u3250 0840                      u3170 077C  
                    u2611 1EFC                      u2451 22B4                      u2291 205A  
                    u2355 1896                      u1811 1234                      u2531 1AB6  
                    u2515 1A64                      u3411 09A6                      u3331 08FA  
                    u3251 083C                      u3171 0778                      u2700 0E5C  
                    u2620 0D76                      u2380 1914                      u1900 133A  
                    u1820 124A                      u2460 19BA                      u2540 21EA  
                    u3500 0C66                      u3420 09C8                      u3340 090E  
                    u3260 0850                      u3180 079E                      u2701 0E58  
                    u2621 0D72                      u2381 1910                      u1901 1336  
                    u1821 1246                      u2461 19B6                      u2541 21E6  
                    u3501 0C62                      u3421 09C4                      u3341 090A  
                    u3261 084C                      u3181 079A                      u2710 0ECA  
                    u2630 0D88                      u2374 18E2                      u2550 21FE  
                    u3510 0CEA                      u3430 09D8                      u3350 092C  
                    u3270 0860                      u3190 07AE                      u2711 0EC6  
                    u2631 0D84                      u2375 18DE                      u2551 21FA  
                    u3511 0CE6                      u3431 09D4                      u3351 0928  
                    u3271 085C                      u3191 07AA                      u2800 0FA8  
                    u2720 0EE2                      u2640 0D98                      u2480 1A0A  
                    u2560 2214                      u3520 0D54                      u3440 0A02  
                    u3360 093E                      u3280 087A                      u2801 0FA4  
                    u2721 0EDC                      u2641 0D94                      u2481 1A06  
                    u2561 2210                      u3521 0D50                      u3441 09FE  
                    u3361 093A                      u3281 0876                      u2810 0FC6  
                    u2730 0EE4                      u2650 0DDA                      u2394 192A  
                    u1930 1398                      u1914 134C                      u1850 12A8  
                    u1834 125C                      u2474 19DA                      u2570 222A  
                    u3450 0A14                      u3370 094E                      u3290 0894  
                    u2811 0FC2                      u2651 0DD6                      u2395 1926  
                    u1931 1394                      u1915 1348                      u1851 12A4  
                    u1835 1258                      u2475 19D4                      u2571 2226  
                    u3451 0A10                      u3371 094A                      u3291 0890  
                    u2900 1104                      u2820 0FFE                      u2740 0F0C  
                    u2660 0DF0                      u2580 24E8                      u1940 13B2  
                    u1924 136C                      u1860 12C2                      u1844 127C  
                    u3460 0A2C                      u3380 095E                      u2901 1100  
                    u2821 0FFA                      u2741 0F08                      u2661 0DEC  
                    u2581 24E4                      u1941 13AE                      u1925 1368  
                    u1861 12BE                      u1845 1278                      u3461 0A28  
                    u3381 095A                      u2910 111A                      u2830 1044  
                    u2750 0F2A                      u2670 0E02                      u2590 1EB6  
                    u2494 1A22                      u3470 0A4E                      u3390 0978  
                    u2911 1116                      u2831 1040                      u2751 0F26  
                    u2671 0DFE                      u2591 1EB2                      u2495 1A1C  
                    u3471 0A4A                      u3391 0974                      u2920 1130  
                    u2840 107A                      u2760 0F4A                      u2680 0E12  
                    u3480 0C24                      u2921 112C                      u2841 1076  
                    u2761 0F46                      u2681 0E0E                      u3481 0C20  
                    u2930 1144                      u2850 108A                      u2770 0F58  
                    u2690 0E4E                      u1970 1410                      u1954 13C4  
                    u1890 1320                      u1874 12D4                      u3490 0C4C  
                    u2931 1140                      u2851 1086                      u2771 0F54  
                    u2691 0E4A                      u1971 140C                      u1955 13C0  
                    u1891 131C                      u1875 12D0                      u3491 0C48  
                    u2940 115E                      u2860 10B6                      u2780 0F68  
                    u1980 142A                      u1964 13E4                      u1884 12F4  
                    u2941 115A                      u2861 10B2                      u2781 0F64  
                    u1981 1426                      u1965 13E0                      u1885 12F0  
                    u2950 1198                      u2870 10C6                      u2790 0F9A  
                    u2951 1194                      u2871 10C2                      u2791 0F96  
                    u2960 11AA                      u2880 10E2                      u2961 11A6  
                    u2881 10DE                      u2970 11BA                      u2890 10F2  
                    u1994 143C                      u2971 11B6                      u2891 10EE  
                    u1995 1438                      u2980 11DA                      u2981 11D6  
                    u2990 11EC                      u2991 11E8                      _cron 0009  
                    _main 06C6                      _keys 000F          ??_PulseClockData 0025  
         _geladeiraAberta 24D8                      fsr1l 000FE1                      prodh 000FF4  
                    prodl 000FF3                      start 0000           pushNibble@value 002A  
            ___param_bank 000000    __end_of_pulseEnablePin 23AE            pwmSet@porcento 002B  
                   ??_msg 0033           __end_of___aldiv 1BD0           __end_of___fladd 121C  
                   ?_main 001F           __end_of_adcInit 236C           __end_of_adcRead 22D6  
                   STR_10 063B           __end_of___lldiv 1F34                     _T0CON 000FD5  
         __end_of___llmod 2044                     _T2CON 000FCA           __end_of___lwdiv 20B8  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _PORTA 000F80  
                   _PORTB 000F81                     _PORTC 000F82                     _PORTD 000F83  
                   _PORTE 000F84           __end_of_charKey 061B                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96           __end_of_lcdChar 2592           __end_of_lcdInit 1E90  
                   _tecla 0039           __end_of_pinMode 16B8                     _valor 0601  
                   _tempo 217E                     _timer 0017                     _turbo 003B  
         __end_of_soWrite 2324                     tablat 000FF5           __end_of_ssdInit 2286  
         __end_of_pwmInit 25E8                     status 000FD8              pushNibble@rs 0028  
    __end_of_digitalWrite 146A           __initialization 23EC           ?_pulseEnablePin 001F  
            __end_of_main 0D5C                    ??_main 0037             __activetblptr 000002  
    __size_of_digitalRead 016A   __end_of_geladeiraAberta 2502                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0          ___llmod@dividend 002C  
                  _ADRESH 000FC4                    _ADRESL 000FC3                    _CCPR2L 000FBB  
                  ?_tempo 001F                    _INTCON 000FF2                    ___flge 1CD8  
               ??___aldiv 0027                    _aberta 0015                 ??___fladd 0027  
                  ___wmul 254E                 ??_adcInit 0025                 ??_adcRead 0021  
               ??___lldiv 0027                 ??___llmod 0034                 ??___lwdiv 0023  
                  _kpInit 2422                    _kpRead 25E8                    _cronOn 0016  
                  clear_0 2412                    _soInit 23AE                 ??_lcdChar 002C  
                  isa$std 000001                    _tempoS 25B0                    _tempot 0011  
               ??_lcdInit 002D                    _pwmSet 20B8                    _vtempo 0001  
        __end_of_ssdDigit 2230              __pdataCOMRAM 0039                 ??_pinMode 0023  
            __mediumconst 0000                    tempo@i 001F                    tempo@j 0020  
                  tempo@k 0021                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ??_soWrite 0027                 ??_ssdInit 0025  
               ??_pwmInit 002F          __end_of_pushByte 217E                ___flge@ff1 001F  
              ___flge@ff2 0023                __accesstop 0080   __end_of__initialization 2418  
           ___rparam_used 000001             pushByte@value 002B               pinMode@type 0021  
          __pcstackCOMRAM 001F             __end_of_valor 0611             __end_of_tempo 21D8  
      __size_of_delayMili 0030        __size_of_lcdString 0088          ?_geladeiraAberta 001F  
                 ??_tempo 001F     __size_of_digitalWrite 024E                _delayMicro 25F8  
                 ?___flge 001F                _lcdCommand 2592                   ?___wmul 0023  
                 ?_kpInit 001F                   ?_kpRead 001F                   _CCP2CON 000FBA  
                 ?_soInit 001F                _kpDebounce 198E                   ?_tempoS 001F  
                 ?_pwmSet 001F        __size_of_ssdUpdate 016C              _digitalWrite 121C  
       __end_of_delayMili 2484          ??_pulseEnablePin 0025                   __Hparam 0000  
                 __Lparam 0000                 ?_ssdDigit 0035         __end_of_lcdString 1FBC  
         kpDebounce@tempo 001E                   ___aldiv 1AC4           __size_of___flge 0104  
                 ___fladd 0D5C                   _adcInit 2324                   _adcRead 2286  
               ?_pushByte 0028                   ___lldiv 1E90           __size_of___wmul 0026  
                 ___llmod 1FBC                   ___lwdiv 2044              __psmallconst 0600  
         __size_of_kpInit 0032           __size_of_kpRead 000A                   _charKey 0611  
             ssdDigit@val 0036               ssdDigit@pos 0035                   __pcinit 23EC  
                 _lcdChar 2574                   __ramtop 0600           __size_of_soInit 003E  
                 _lcdInit 1DDC                   __ptext0 06C6                   __ptext1 16B8  
                 __ptext2 2230                   __ptext3 21D8                   __ptext4 25CE  
                 __ptext5 2502                   __ptext6 1AC4                   __ptext7 1BD0  
                 __ptext8 1F34                   __ptext9 2574           __size_of_tempoS 001E  
         __size_of_pwmSet 006C                   _display 001D              __size_of_msg 0108  
                 _pinMode 146A          ___aldiv@dividend 001F                delayMili@a 001F  
              delayMili@i 0022                   _soWrite 22D6                   _ssdInit 2230  
                 _pwmInit 25CE      end_of_initialization 2418             ?_PulseEnClock 001F  
           __Lmediumconst 0000            digitalRead@pin 001F             ?_pwmFrequency 002D  
             ?_delayMicro 001F           ___lldiv@divisor 0023         __end_of_ssdUpdate 1824  
         ___lldiv@counter 002B                   tempoS@i 0022                ??_ssdDigit 0036  
        ___aldiv@quotient 0029                   postdec1 000FE5               ?_lcdCommand 001F  
                 postinc0 000FEE                ??_pushByte 002A   __size_of_PulseClockData 002A  
           ??_digitalRead 0021               ?_kpDebounce 001F               ___fladd@grs 002E  
              _pushNibble 2528                lcdString@i 0031            ??_PulseEnClock 0025  
          ??_pwmFrequency 002F            __end_of___flge 1DDC            adcRead@ADvalor 0021  
          __end_of___wmul 2574             __pidataCOMRAM 25F2            __end_of_kpInit 2454  
          __end_of_kpRead 25F2            __end_of_soInit 23EC            __end_of_tempoS 25CE  
          __end_of_pwmSet 2124       __size_of_delayMicro 0002       start_initialization 23EC  
     __end_of_digitalRead 198E               __end_of_msg 1CD8       __size_of_lcdCommand 001E  
     __size_of_kpDebounce 0136           ___llmod@divisor 0030           ___llmod@counter 0034  
          adcRead@channel 001F         kpDebounce@oldRead 000B         kpDebounce@newRead 000D  
                ??___flge 0027                  ??___wmul 0027                  ??_kpInit 0025  
                ??_kpRead 0021                  ??_soInit 0025                  ??_tempoS 0022  
                ??_pwmSet 0029                 ___fladd@a 0023                 ___fladd@b 001F  
             __pbssCOMRAM 0001               ?_pushNibble 0028                pinMode@pin 001F  
               _nMensagem 0014  __size_of_geladeiraAberta 002A                 _delayMili 2454  
        ___lwdiv@dividend 001F                  ?___aldiv 001F                  ?___fladd 001F  
                ?_adcInit 001F                  ?_adcRead 001F                  ?___lldiv 001F  
       __size_of_ssdDigit 0058                  ?___llmod 002C            _PulseClockData 24AE  
                ?___lwdiv 001F      __end_of_PulseEnClock 24AE                 _lcdString 1F34  
             _digitalRead 1824                  ?_lcdChar 001F         __size_of_pushByte 005A  
                ?_lcdInit 001F      __end_of_pwmFrequency 2528               __smallconst 0600  
                ?_pinMode 001F                  ?_soWrite 0025                  ?_ssdInit 001F  
                ?_pwmInit 001F          ___lwdiv@quotient 0023            __size_of_tempo 005A  
        pwmFrequency@freq 002D           ___aldiv@divisor 0023           ___aldiv@counter 0027  
          ___wmul@product 0027              ??_delayMicro 0021                ?_delayMili 001F  
  __end_of_PulseClockData 24D8       __size_of_pushNibble 0026              ??_lcdCommand 002C  
               _ssdUpdate 16B8                 _potenciaF 003C                 _potenciaG 003D  
              ?_lcdString 002D              ??_kpDebounce 0028         ___wmul@multiplier 0023  
         lcdCommand@value 002C        __end_of_delayMicro 25FA                 copy_data0 2400  
      __end_of_lcdCommand 25B0                pushByte@rs 0028              lcdChar@value 002C  
      __end_of_kpDebounce 1AC4                  __Hrparam 0000                  __Lrparam 0000  
         ?_PulseClockData 001F                ?_ssdUpdate 001F          __size_of___aldiv 010C  
       ??_geladeiraAberta 002E          __size_of___fladd 04C0          __size_of_adcInit 0048  
        __size_of_adcRead 0050   __size_of_pulseEnablePin 0042          __size_of___lldiv 00A4  
        __size_of___llmod 0088          __size_of___lwdiv 0074          __size_of_lcdChar 001E  
        __size_of_lcdInit 00B4            _potenciaUpdate 0012          __size_of_pinMode 024E  
         ___lwdiv@divisor 0021           ___lwdiv@counter 0025                  __ptext10 1DDC  
                __ptext11 2528                  __ptext20 198E                  __ptext12 2592  
                __ptext21 22D6                  __ptext13 2124                  __ptext30 254E  
                __ptext22 2484                  __ptext14 236C                  __ptext31 2044  
                __ptext23 24AE                  __ptext15 25F8                  __ptext32 2286  
                __ptext24 121C                  __ptext16 2454                  __ptext33 2324  
                __ptext25 1824                  __ptext17 25E8                  __ptext34 146A  
                __ptext26 24D8                  __ptext18 2422                  __ptext35 1FBC  
                __ptext27 25B0                  __ptext19 23AE                  __ptext36 1E90  
                __ptext28 217E                  __ptext37 1CD8                  __ptext29 20B8  
                __ptext38 0D5C          __size_of_soWrite 004E          __size_of_ssdInit 0056  
        __size_of_pwmInit 001A             __size_of_main 0696               ??_delayMili 0021  
   __size_of_PulseEnClock 002A                  _ssdDigit 21D8               delayMicro@a 001F  
                isa$xinst 000000              soWrite@value 0025                  _potencia 003E  
   __size_of_pwmFrequency 0026                  _pushByte 2124                 pwmSet@val 002C  
             ??_lcdString 002F              ??_pushNibble 002A             ?_digitalWrite 001F  
            _PulseEnClock 2484         digitalWrite@value 0021          ___lldiv@dividend 001F  
            _pwmFrequency 2502                  soWrite@i 0027               ??_ssdUpdate 0028  
      __end_of_pushNibble 254E              ?_digitalRead 001F          ___lldiv@quotient 0027  
             kpDebounce@i 002B            ??_digitalWrite 0023              ___aldiv@sign 0028  
           ___fladd@signs 002B               _potenciaAux 0013           digitalWrite@pin 001F  
            ___fladd@aexp 002C              ___fladd@bexp 002D  
